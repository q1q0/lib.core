{"version":3,"sources":["ng://vivify-core-components/src/app/modules/session/app-injector.ts","ng://vivify-core-components/src/app/modules/base/attributes.enum.ts","node_modules/tslib/tslib.es6.js","ng://vivify-core-components/src/app/modules/base/key-utils.ts","ng://vivify-core-components/src/app/modules/mco-container/mco-container.service.ts","ng://vivify-core-components/src/app/modules/event-handler/event-handler.service.ts","ng://vivify-core-components/src/app/modules/popup-menu/menu-item-builder.ts","ng://vivify-core-components/src/app/modules/popup-menu/context-menu.service.ts","ng://vivify-core-components/src/app/modules/session/session.service.ts","ng://vivify-core-components/src/app/modules/java/illegal-argument-exception.ts","ng://vivify-core-components/src/app/modules/java/java-utils.ts","ng://vivify-core-components/src/app/modules/event-handler/client-event.ts","ng://vivify-core-components/src/app/modules/java/list-iterator.ts","ng://vivify-core-components/src/app/modules/java/vector.ts","ng://vivify-core-components/src/app/modules/base/attribute-change-event.ts","ng://vivify-core-components/src/app/modules/base/app-utils.ts","ng://vivify-core-components/src/app/modules/java/hash-map.ts","ng://vivify-core-components/src/app/modules/java/hashtable.ts","ng://vivify-core-components/src/app/modules/base/logger.ts","ng://vivify-core-components/src/app/modules/base/base.component.ts","ng://vivify-core-components/src/app/modules/mco-container/mco-container.module.ts","ng://vivify-core-components/src/app/modules/event-handler/event-handler.module.ts","ng://vivify-core-components/src/app/modules/session/session.module.ts","ng://vivify-core-components/src/app/modules/java/java.module.ts","ng://vivify-core-components/src/app/modules/base/on-create.directive.ts","ng://vivify-core-components/src/app/modules/base/base.module.ts","ng://vivify-core-components/src/app/modules/base/component-type.enum.ts","ng://vivify-core-components/src/app/modules/button/button.component.ts","ng://vivify-core-components/src/app/modules/button/button.module.ts","ng://vivify-core-components/src/app/modules/checkbox/checkbox.component.ts","ng://vivify-core-components/src/app/modules/checkbox/checkbox.module.ts","ng://vivify-core-components/src/app/modules/combo-box/list-item.directive.ts","ng://vivify-core-components/src/app/modules/combo-box/list-box.directive.ts","ng://vivify-core-components/src/app/modules/combo-box/faux-combo-element.ts","ng://vivify-core-components/src/app/modules/combo-box/combo-box.component.ts","ng://vivify-core-components/src/app/modules/keyboard/arrow-navigatable-item.directive.ts","ng://vivify-core-components/src/app/modules/keyboard/arrow-navigatable-container.directive.ts","ng://vivify-core-components/src/app/modules/keyboard/keyboard.module.ts","ng://vivify-core-components/src/app/modules/combo-box/combo-box.module.ts","ng://vivify-core-components/src/app/modules/dialog/draggable.directive.ts","ng://vivify-core-components/src/app/modules/view/dynamic-pages.service.ts","ng://vivify-core-components/src/app/modules/base/ui-document.ts","ng://vivify-core-components/src/app/modules/dialog/dialog.component.ts","ng://vivify-core-components/src/app/modules/dialog/dialog.module.ts","ng://vivify-core-components/src/app/modules/layout/grid-column.directive.ts","ng://vivify-core-components/src/app/modules/horizontal-separator/horizontal-separator.component.ts","ng://vivify-core-components/src/app/modules/horizontal-separator/horizontal-separator.module.ts","ng://vivify-core-components/src/app/modules/java/integer.ts","ng://vivify-core-components/src/app/modules/java/date-format.ts","ng://vivify-core-components/src/app/modules/label/label.component.ts","ng://vivify-core-components/src/app/modules/label/label.module.ts","ng://vivify-core-components/src/app/modules/layout/panel.component.ts","ng://vivify-core-components/src/app/modules/layout/layout.module.ts","ng://vivify-core-components/src/app/modules/link/link.component.ts","ng://vivify-core-components/src/app/modules/link/link.module.ts","ng://vivify-core-components/src/app/modules/java/long.ts","ng://vivify-core-components/src/app/modules/base/moment-utils.ts","ng://vivify-core-components/src/app/modules/dynamic/dynamic.component.ts","ng://vivify-core-components/src/app/modules/text-field/text-field.component.ts","ng://vivify-core-components/src/app/modules/text-field/text-field.module.ts","ng://vivify-core-components/src/app/modules/dynamic/dynamic.module.ts","ng://vivify-core-components/src/app/modules/dynamic/dynamic-element.builder.ts","ng://vivify-core-components/src/app/modules/radio-button/radio-button.component.ts","ng://vivify-core-components/src/app/modules/radio-button/radio-button.module.ts","ng://vivify-core-components/src/app/modules/scroll-pane/scroll-pane.component.ts","ng://vivify-core-components/src/app/modules/scroll-pane/scroll-pane.module.ts","ng://vivify-core-components/src/app/modules/java/string-builder.ts","ng://vivify-core-components/src/app/modules/table/table-cell.directive.ts","ng://vivify-core-components/src/app/modules/table/table-header.directive.ts","ng://vivify-core-components/src/app/modules/table/header.directive.ts","ng://vivify-core-components/src/app/modules/table/table-column.directive.ts","ng://vivify-core-components/src/app/modules/table/table-selection-event.ts","ng://vivify-core-components/src/app/modules/tree-table/html-element-wrapper.ts","ng://vivify-core-components/src/app/modules/table/table-row-def.directive.ts","ng://vivify-core-components/src/app/modules/table/footer-row.directive.ts","ng://vivify-core-components/src/app/modules/table/row.directive.ts","ng://vivify-core-components/src/app/modules/clipboard/clipboard.service.ts","ng://vivify-core-components/src/app/functions/is-ie.ts","ng://vivify-core-components/src/app/modules/table/table.component.ts","ng://vivify-core-components/src/app/modules/table/locked-column.directive.ts","ng://vivify-core-components/src/app/modules/clipboard/clipboard.module.ts","ng://vivify-core-components/src/app/modules/table/table.module.ts","ng://vivify-core-components/src/app/modules/tab-pane/tab/tab.component.ts","ng://vivify-core-components/src/app/modules/tab-pane/tab-pane.component.ts","ng://vivify-core-components/src/app/modules/tab-pane/tab/tab-host.directive.ts","ng://vivify-core-components/src/app/modules/tab-pane/tab-pane.module.ts","ng://vivify-core-components/src/app/modules/text-area/text-area.component.ts","ng://vivify-core-components/src/app/modules/text-area/text-area.module.ts","ng://vivify-core-components/src/app/modules/tree-table/tree-table.component.ts","ng://vivify-core-components/src/app/modules/tree-table/tree-table.module.ts","ng://vivify-core-components/src/app/modules/view/view.component.ts","ng://vivify-core-components/src/app/modules/view/view.module.ts","ng://vivify-core-components/src/app/modules/popup-menu/popup-menu.component.ts","ng://vivify-core-components/src/app/modules/popup-menu/menu-item.directive.ts","ng://vivify-core-components/src/app/modules/popup-menu/menu-item/menu-item.component.ts","ng://vivify-core-components/src/app/modules/popup-menu/menu.directive.ts","ng://vivify-core-components/src/app/modules/popup-menu/popup-menu-container/popup-menu-container.component.ts","ng://vivify-core-components/src/app/modules/popup-menu/popup-menu.directive.ts","ng://vivify-core-components/src/app/modules/popup-menu/popup-menu.module.ts","ng://vivify-core-components/src/app/modules/split-pane/bottom-pane/bottom-pane.component.ts","ng://vivify-core-components/src/app/modules/split-pane/top-pane/top-pane.component.ts","ng://vivify-core-components/src/app/modules/split-pane/split-pane.component.ts","ng://vivify-core-components/src/app/modules/split-pane/split-pane.module.ts","ng://vivify-core-components/src/app/modules/base/custom-attribute.ts"],"names":["injectorRef","appInjector","injector","ID","VISIBLE","CLASS","DISABLED","ENABLED","TEXT","COLOR","ON_COMMAND","REQUIRE","TITLE","FONT_BOLD","SELECTED","BG_COLOR","VALUE","PATTERN","MAX_LENGTH","MAX","MIN","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","KeyUtils","toMapKey","key","toLowerCase","toJsonValue","val","McoContainerService","Map","Subject","getMco","mcoName","_mcoMap","get","getMaxZIndex","MAX_Z_INDEX","addMco","mco","registerMco","set","removeMco","cleanup","delete","registerView","view","canBeActiveView","actionForwardHandler","actionForwardName","activeViewsStack","push","zIndex","getViewZIndex","_.uniqBy","v","uniqueId","popLastActiveView","pop","removeView","_.filter","reStackView","minimizeView","viewId","screenIndex","getViewById","isMinimized","activeView","isModalActive","activeViewsCount","visibleViews","filter","skipBreadCrumb","dialog","count","isModalDialog","viewsChanged","views","getBreadcrumb","minMaxEvent","showView","closeView","close","hasView","id","_.find","getActionForwardHandler","getActionForwardHandlerMap","getViews","topViewId","_this","_.sortBy","_.forEach","idx","updateZIndex","MIN_Z_INDEX","visible","getClientSessionFromMco","getSession","nextScreenIndex","baseScreenId","existingScreens","_.orderBy","scr","refreshBreadCrumb","Injectable","args","providedIn","EventHandlerService","mcoContainerService","setClientEvent","event","_clientEvent","getClientEvent","fireEvent","command","actionName","arg","source","clientEvent","isArray","apply","MenuItemBuilder","menuItem","_internalMenuItem","createHorizontalDivider","setAttribute","createMenuItem","setText","text","setWidth","width","setImgHint","img","setOnMouseDown","fn","setMargin","margin","setFontColor","color","setFontSize","size","setFontBold","bold","name","attributes","knownKeys","indexOf","customAttributes","getAttribute","toMenuItem","parentScreenId","menuItems","_.map","subMenu","onCommandCallback","onMouseDownCallback","display","initStyle","styles","keys","_.keys","keys_1","tslib_1.__values","keys_1_1","appendChild","fromMenuItem","_free","ContextMenuService","activeMenuSubject","asObservable","registerContextMenu","rekey","contextMenuMap","has","menuData","showContextMenu","hasContextMenu","setActiveMenu","activeMenu","menuItemBuilders","forEach","menuItemBuilder","hideContextMenu","getContextMenuItems","getContextMenuParentScreenId","removeContextMenu","resetMenu","newMenuItems","_trackMenuItemBuilderForMemRelease","SessionService","_mcoContainer","_eventHandlerService","contextMenuService","ngZone","runOutsideAngular","document","addEventListener","checkKey","resetKey","window","_windowLostFocus","getMcoContainer","getEventHandler","registerRequestService","requestService","getRequestService","registerRouteNavigatorService","routeNavigator","getRouteNavigatorService","setMousePosition","mousePosition","x","clientX","y","clientY","screenX","screenY","getMousePosition","getInjector","type","getDisplayService","resetContextMenu","_currentPopupMenuId","storeDef","data","defsMap","getDef","deleteDef","isCtrlPressed","isCtrl","isShiftPressed","isShift","isAltPressed","isAlt","getMessagingService","messagingService","registerMessagingService","service","ctrlKey","shiftKey","altKey","Injector","NgZone","IllegalArgumentException","_super","tslib_1.__extends","Error","JavaUtils","isNumber","str","NUMERIC","test","booleanToString","boo","equals","a","parseBoolean","stringValue","longValue","_.parseInt","doubleValue","result","parseFloat","isNaN","intValue","toString","compareTo","bigDecimal","scale","roundingMode","fixedValue","_.padStart","signum","num","floatValue","lessThan","moment.isMoment","isBefore","RegExp","ClientEvent","_source","_event","getSource","getEvent","setParameter","paramName","_parameters","getParameter","attributeName","_attributes","stopPropagation","preventDefault","setReturnValue","_returnValue","_returnValueSet","getReturnValue","isReturnValueSet","ListIterator","hasNext","currentIndex","Vector","toArray","setData","add","element","insertionIndex","splice","addElement","addAll","vec","it","firstElement","lastElement","contains","elementAt","isEmpty","_.clone","AttributeChangeEvent","oldValue","newValue","sourceElement","getName","getOldValue","getNewValue","getSourceElement","AppUtils","parseDom","domParser","parseFromString","firstElementChild","attributeOverrideInitializer","attributeOverrideClassInitializer","attributeOverrideValidateInitializer","DOMParser","HashMap","defineProperty","_internalMap","put","remove","clear","entries","cb","thisArg","values","toJson","json","toStringTag","Hashtable","Logger","warn","e","enableLogging","console","log","info","error","debug","BaseComponent","parent","sessionService","elementRef","renderer","EventEmitter","_uniqueId","generateUniqueId","_cssClass","css","cleanCss","initBorderLayout","required","req","class","cssClass","disabled","sort","_children","ngAfterViewInit","addChild","_childrenIndex","_.uniq","ngOnInit","fontBold","fontItalic","setFontItalic","fontSize","fontUnderline","setFontUnderline","fontColor","setColor","autoWrap","markForCheck","checkNxStyling","skipAttributeOverride","attributeOverrideClass","newAttributes","newCssClass","attr","AttributesEnum","map","join","trim","setAttributes","_validate","nativeElement","attributeOverrideValidate","borderPosition","ngOnDestroy","_isDying","parentView","getParentView","_viewChildrenMap","getId","_internalChangeCb","removeChild","attributeChangeListeners","radioButtonGroups","scrollPanes","getChild","setDisabled","setVisible","setScrollPosVertical","expression","getDisabled","getEnabled","getSoColumnNo","getEditor","editor","getSoRequire","getSoValidate","getSoType","getSoFormat","getSoMin","getSoMax","getSoMaxLength","getSoPattern","getSoMaxByteLen","setEnabled","setSortValue","getVisible","setOnCommand","_internalOnCommand","setOnActiveLost","_internalOnActiveLost","attrs","_tempFreezeCd","attrs_1","attrs_1_1","attribute","originalAttributeName","setRequire","setControlWidth","setControlHeight","setCustomAttribute","fireSetAttributeEvent","setId","setCssClass","setTitle","setSelected","setBgColor","setValue","setMaxLength","setMax","setMin","setPattern","skipQueryDOMIfNotExists","attributeLower","getText","getColor","getRequired","getValue","getChecked","getPattern","getMin","getMax","getMaxLength","undefined","getCustomAttribute","requestFocus","getElement","focus","setFocus","focusLost","onActiveLost","emit","prefix","Date","now","_.random","child","childKey","isFauxElement","isDialog","isScrollPane","registerScrollPane","bgColor","underline","handleFocus","registerClientEvent","handleClick","handleKeyDown","handleKeyUp","handleMouseDown","hasCustomAttribute","getChildAt","getChildCount","indexOfChild","insertChildAt","row","emitInternalOnCommand","invokeMcoAction","customizeClientEvent","getTagName","tagName","getLocalName","replace","getParent","removeAttribute","fireRenoveAttributeEvent","setRequired","pattern","min","max","getInputLocale","inputLocale","setInputLocale","locale","getInputCharsets","inputCharsets","setInputCharsets","inputCharSets","children","_.findIndex","item","title","temp","split","substring","addCssClass","removeCssClass","require","destroyComponent","compRef","destroy","retVal","el_1","getAttributeNames","validateAttribute","setJson","getNxTagName","customAttributesToJson","_b","_c","c","childJson","childToJson","mapToJson","resetId","setChecked","maxLength","getMinLength","minLength","getChildren","getElementById","removeAllChildren","removeChildById","cit","cr","tabChildrenIds","cid","findElementById","hasChild","setValidate","setType","setFormat","format","setMinLength","setMaxByteLen","bl","setFocusable","focusable","selectParentTab","tab","findTabBelong","parent_1","tabPane","findTabPaneBelong","parent_2","setSelectedTab","mappedChildId","comp","radioGroup","getRadioButtonGroupComponent","isView","group","getRadioButtonGroup","radioGroup_1","radioGroup_1_1","radio","addAttributeChangeListener","listener","_internalId","removeAttributeChangeListener","event_1","onAttributeSet","event_2","onAttributeRemoved","getChangeDetector","detectChanges","initWidthHeightStyle","heightStyleName","widthStyleName","controlHeight","parseInt","controlWidth","addRadioButtonGroup","groupId","height","getWidth","setHeight","getHeight","setX","getX","setY","getY","setBorderWidth","borderWidth","isNoneActiveView","isDynamicView","stack","getParentScrollView","isScrollView","_getNoneActiveViewParent","handleOnContextMenu","force","skipEmitContextMenuEvent","popupMenuId_1","getFirstPopupMenuId","onContextMenu","popup","tm_1","setTimeout","clearTimeout","validateField","onBeforeActiveLost","getTableChildren","getBgColor","setAttributeFromDef","compDef","keys_2","keys_2_1","evaluateXPath","xpathExpression","setHighlightBgColor","highlightBgColor","setHighlightFontColor","highlightFontColor","getHighlightBgColor","getHighlightFontColor","getParentTableRow","parentTableRow","isChangeDetectionFrozen","getViewChildrenMap","removeViewChildFromMap","addViewChildToMap","obj","action","methodName","_notifyInternalChangeCb","emptyChildren","resetScrollTopToPreviousPosition","resetAllScrollPanesPositionToPrevious","scrollPane","resetScrollTopPosition","resetAllScrollPanesPositionToTop","notifyParentOfError","_disabledErrorElementId","focusParentTab","Component","selector","template","decorators","Optional","SkipSelf","ElementRef","Renderer2","Input","Output","McoContainerModule","NgModule","imports","CommonModule","declarations","providers","EventHandlerModule","SessionModule","JavaModule","OnCreateDirective","zone","runOutsideZone","vtOnCreate","Directive","BaseModule","exports","LABEL","BUTTON","TEXT_FIELD","COMBOBOX","CHECKBOX","RADIO","TEXTAREA","ButtonComponent","cd","marginTop","marginRight","marginLeft","onClick","onCommand","onMouseDown","currentTarget","isCloseBtn","handleOnBlur","focused","changeDetection","ChangeDetectionStrategy","OnPush","provide","useExisting","forwardRef","ChangeDetectorRef","ButtonModule","entryComponents","CheckboxComponent","checked","handleStateChange","onStateChange","onSelect","shouldChecked","skipInternalChange","CheckboxModule","FormsModule","ReactiveFormsModule","ListItemDirective","ListBoxDirective","ContentChildren","FauxComboElement","comboBox","valuePair","setSelectItem","selected","LOCAL_NAME","isSelected","ComboBoxComponent","_this_1","background-color","parentScrollHanlder","dropdown","hide","_listItems","items","selectedItem","parentScroller","removeEventListener","isOpen","dropdownElementId","dropdownMenuStyle","alignHorizontal","listBox","listItems","isChecked","loadDataFromDef","subscribeToParentScroller","initializeComboboxValues","selectItem","inputElement","forceCd","setSelectValue","onInputClick","hoveredStyle","toggle","controlWidthComboBox","clientWidth","onKeyDown","isDropdownOpen","keyCode","defaultStyle","isFirstKeyDown","hoveredItem","adjustPulldownWidth","toggleStatus","_.get","$","off","_this_2","on","modalContent","parentPanel","parentElement","parentPos","getBoundingClientRect","childrenPos","distanceToBottom","bottom","distanceToTop","top","Math","style","backgroundColor","findItemByText","defId","def","valueList","inputFocusOut","hasInputFocus","ownerDocument","activeElement","$active","is","closest","inputFocusIn","scrollParent","HTMLElement","encapsulation","ViewEncapsulation","None","ContentChild","ViewChild","read","BsDropdownDirective","ArrowNavigatableItemDirective","jq","blur","handleOnFocus","activeItem","run","mouseover","addClass","mouseout","removeClass","select","click","hover","vtArrowOnMouseEnter","leave","vtArrowOnMouseLeave","HostListener","ArrowNavigatableContainerDirective","keydownHandler","handleKeydown","navigatableItems","activeParent","isActiveElementDirectChildren","moveUp","moveDown","onTab","hasItems","onItemHover","KeyboardModule","ComboBoxModule","BsDropdownModule","forRoot","DraggableDirective","mouseDownHandler","onMouseDownHandler","mouseMoveHandler","_.throttle","onMouseMoveHandler","mouseUpHandler","onMouseUpHandler","addDragListeners","dragElement","getDragElement","removeDragListeners","canDrag","draggablePanel","pageX","pageY","bound","getBound","setStyle","applyTranslate","moveWindowToTop","canTrackMouseMove","offsetHeight","offsetWidth","currentMousePosition","diffX","diffY","parentBound","newX","newY","dialogMaxTopPosition","setViewId","setTableId","tableId","vtDraggable","el","left","host","(click)","DynamicPagesService","viewFactory","registerViewContainer","viewContainer","createDynamicView","viewType","routeId","onCreateViewCloser","setFreezePushService","createComponent","resolveComponentFactory","dynamicViewsMap","instance","isDynamicPage","changeDetectorRef","Promise","r","j","viewIsInitialized","sub_1","viewInitialized","subscribe","unsubscribe","viewToRemove","immediate","deadView","isDestroyed","ComponentFactoryResolver","UiDocument","getMenuComponent","menuItemElementMap","mcoContainer","views_1","views_1_1","actionForwardIt","forwardItResult","mcoContainer_1","hasPopupMenu","popupMenuItems","find","views_2","views_2_1","setElementAttribute","getElementAttribute","registerMenuItemElement","menuItemElement","trackInactiveMenuItem","unregisterMenuItemElement","initializeComboBoxValues","elementId","comp_1","tabbable","tabbableFRollup","DialogComponent","dynamicPageService","docClickHandler","handleDocClickEvent","modalFocusOutHandler","checkFocusOut","_modal","modal","updateModalDialogStyle","_center","setViewRouteUrl","viewRouteUrl","updateDraggableDirectiveId","dialogResize","resizeFlg","setDisabledDialogWidth","resizeExecute","modalElement","firstChild","right","lastElementChild","modalDialog","draggableDirective","_tabbables","modalWidth","modalHeight","resizeDialog","modalBodyPercentHeight","modalBodyDivHeight","modalBodyDivWidth","modalBodyMinHeight","modalBodyHeight","setModalLessPosition","bsModalClass","setInitialPosition","initialPosition","resizable","handles","minWidth","minHeight","resize","ui","position","body","table","tableResize","querySelector","destroyRoute","newZIndex","setInactiveDialogStyle","inactiveDialogClass","appHeader","headerH","clientHeight","offsetTop","modelH","footerH","handleOnClosing","onClosing","isContainer","minimize","isUnMaximize","minHeightLoc","UNMAXIMIZE_HEGHT","isMaximize","modalOriginalTop","modalOriginalLeft","maximize","onClickDisableContent","onClickBackdrop","removeStyle","wasClickOutside","relatedTarget","classList","_leftDisabledErroElementId","_canTrackFocusLostOnErrorDisabled","elId","disabledEl","target","trackFocusLostOnErrorDisabled","ViewContainerRef","DialogModule","ModalModule","GridColumnDirective","vtGridColumn","HorizontalSeparatorComponent","borderColor","HorizontalSeparatorModule","Integer","moment","momentImported","DateFormat","formatPattern","getDateInstance","javaToMomentDateFormat","fm","date","parse","dateString","momentDate","isLenient","isValid","calendar","setLenient","lenient","setCalendar","getCalendar","LabelComponent","_tooltip","tooltip","setTooltip","handleOnClick","LabelModule","PanelComponent","resetChildIndexes","panelClasses","containerLayout","noGrid","noGutter","borderStyle","resizeComponent","resizeHeight","resizeMarginTop","divHeight","childrenList","_.concat","panelStyles","caption","layout","LayoutModule","LinkComponent","_disabled","opacity","onKeyUp","idName","LinkModule","Long","MomentUtils","timeZone","tz","DynamicComponent","cleanClass","isVisible","elementDef","handleOnCommand","myComponent","enabled","TextFieldComponent","_maxLength","fontColorDisabled","styleVar","focusOnActivation","input","setProperty","onBlur","hasFocus","_textBeforeFocusIn","onEdit","formattedDateString","substr","onFocus","selectionStart","selectionEnd","formatName","txtMount","_textPreviousKeyInput","onInput","pos_1","onTextChange","editable","handleMouseUp","onMouseUp","selectText","TextFieldModule","DynamicModule","DynamicElementBuilder","createLabelElement","whiteSpaceWrap","padding","dynamicElement","toDynamicElement","setText2","setPopup","popupMenuId","checkCustomColor","setBorderColor","initBorderStyle","convertStyleUnit","setBorderStyle","setZ","z","setAlignVertical","align","setAlignHorizontal","setBorderCorner","borderCorner","setDropShadowColor","dropShadowColor","setBoxShadow","setDropShadowOffset","dropShadowOffset","setOnContextMenu","setRichText","richText","unit","RadioButtonComponent","_internalChangeTracking","onChange","tempCheck","resetGroupRadios","group_1","group_1_1","group_2","group_2_1","isRadioButton","RadioButtonModule","ScrollPaneComponent","_scrollerHandler","handleOnScroll","maxHeight","skipScrollAdjustment","scrollDivElement","_scrollVerticalPos","srcElement","scrollTop","ScrollPaneModule","StringBuilder","initial","append","_internalString","startIdx","endIdx","endIdex","replaceStr","charAt","setCharAt","insert","String","fromCharCode","deleteCharAt","index","lastIndexOf","chr","_.lastIndexOf","TableCellDirective","TemplateRef","TableHeaderDirective","HeaderDirective","TableColumnDirective","headerDirective","_header","header","_visible","vis","headerTemplate","headerHeight","TableSelectionEvent","rows","HTMLElementWrapper","virtual","docFragment","localName","htmlElement","createElement","_dynamicComponent","fauxElementAttributes","HTMLTableRowElement","onContextHandler","contextMenuAction","showPopupMenu","onDoubleClickHandler","handleOnMouseDown","handleDoubleClick","createVirtualElement","skipDestroyChild","childNodes","node","concat","dynamicChildNodes","childRows","component","attributesName","setClass","insertChildRowAt","parentTable","useDocFragment","insertBefore","tableBody","appendToTableIfRow","HTMLTableCellElement","appendCustomAttributes","cust","selectRow","expandNode","trackAttributeName","expanded","innerText","textContent","setDraggable","draggable","applyDraggable","getExpanded","setExpanded","mouseDownAction","setOnDoubleClick","doubleClickAction","popupName","setLocaleName","columnsHasBeenSwapped","setComponent","fromVirtualTable","getComponent","tds","querySelectorAll","isExpanded","justUpdateAttribute","parentTableId","jQuery","nodeId","treetable","chk","findChildByFn","concatNode","toNode","fromNode","beforeAttributeRemoved","evt","beforeAttributeSet","updateSortValue","refreshTableSorterCache","isDraggable","draggableApplied","appendTo","addClasses","helper","start","isDraggableApplied","TableRowDefDirective","FooterRowDirective","RowDirective","ClipboardService","copy","txt","clipboard.writeText","isIE","nav","navigator","userAgent","TableComponent","differs","clipboardService","dataSourceDiffer","columnsDiffer","customRowDiffer","isIE9","virtualScrollDataSourceDiffer","keyupHandler","scrollHandler","_disabledScrolling","prevScrollTopForHiddenHeader","skipGhostHeader","ghostHeader","tableHead","tableFoot","virtualScroll","animationFrameId","cancelAnimationFrame","adjustTableHead","scrollSubject","_virtualViewPort","_dataSource","ds","cleanUpChildNodes","resetTableColumns","buildRowIdentity","checkShowBlankRow","previousRowIndex","modifiedVirtualRows","modifiedVirtualRowsJson","selectedRows","calcVirtualScrollHeight","calcVirtualScrollViewPort","columns","clearHeaderNodes","toColumns","_isViewInit","initPlugins","_tableRow","adjustTableFooter","ngDoCheck","diff","prevScrollTop","refreshTableSorter","checkCustomRowsForChanged","checkColumnsForChanged","col","droppable","tableContainer","classes","ui-droppable-hover","hoverClass","accept","drop","onDragDrop","tolerance","scrollSubcription","pipe","debounce","timer","scrollTimeout","recalculateVirtualScrollData","scrollContainerStyles","overflow-y","overflow-x","clientHeightVirtualScroll","recCalcNoVirtualRow","tableStyles","max-width","max-height","virtualScrollProgressStyles","calcVirtualTablePosition","$dragableColumns","initTm","scrollLeft","jQueryTable","enableColumnDragging","dragableColumns","dropCallback","fromIndex","toIndex","swapColumns","dragEndCallback","dragStartCallback","colIdx","canDragColumn","dragEnterCallback","enableSort","$tablesorter","trigger","tablesorter","widgets","usNumberFormat","tabIndex","sortReset","sortRestart","sortStable","delayInit","setHeaderWidthHeight","enableColumnResize","target_columns","original_columnWidths","headChildren","_cleanupColResize","$colResizable","colResizable","liveDrag","resizeMode","partialRefresh","headerOnly","targetColumn","toWholeNumber","slice","tableLayout","tableWrapper","preMouseEvent","locked","sortable","nullOutHeadNode","headNode","skipTrackingVirtualRow","nodes","INTERNAL_VIRTUAL_ORIGINAL_INDEX","_checkInitModifiedVirtualRowsJson","_prevSelectedRows","lastSelectedRowIndex","getRowCount","rowIndex","tempNode","onRowClick","triggerStateChange","rowId","getChildByOriginalRowIndex","draggableRows","shouldHandleMouseUp","toggleRowSelection","isMouseUp","targetEl","actualRowIndex","selectionMode","buttons","clearSelection","getOriginalIndex","getSelectedRows","selectedRowElements","_d","_e","_f","rowNumber","getSelectedRowIndexes","ROW_INDEX_KEY","handleRowSelection","_.isEqual","handleCellActivation","onDoubleClick","appendRowIndexToRow","refresh","clearData","tempRows_1","rowJson","originalColumnIndex","column","nxTagName","registerFauxElement","rowOrColumnIndex","rowDataOrColumnDef","_isHeaderCell","skipTracking","trackRow","trackCell","trackHeadCell","xpathResult","evaluate","XPathResult","ANY_TYPE","iterateNext","childOrArrayOrStringWtf","isSelectedRow","getRowCustomAttributes","rowCustomAttributeBuilder","isColumnVisible","tableRowNo","restrictCellPopup","sortValue","columnIdx_1","_checkInitModifiedVirtualRows","removeSelectedRow","v1","v2","selected_1","selected_1_1","dataSource","_g","rowData","setParentScreenId","trackNode","toRowIndex","columnIndex","columnDef","cell","orgClass","customData","rowStyleClass","rowStyleFn","getChildNodeById","handleColumnOnContextMenu","childColumn","onContextMenuCb","handleHeaderOnContextMenu","skipBodyAdjustment","skipHeader","theadHeight","thead","tbody","this_1","trans","bodyChildren","tfoot","tfootPos","this_2","footChildren","code","copySelectedRowAsText","selectedRowText","selectedRow","buildRowId","rowIdBuilder","handleSort","sortDirection","sortColumnId","virtualScrollSortKeys","virtualScrollSortFn","_virtualScrollDivHeight","rowHeight","maxScrollTop","startIdx_1","floor","_virtualScrollRowPerView","adjustedRows","_swap","tempToColumn","applyResizeColumns","disable","_tableSorterRefreshTm","_tableSorterCacheRefreshTm","setSelectAllVirtualRows","shouldSelected","checkBoxeColumnIdxs","this_3","checkBoxeColumnIdxs_1","checkBoxeColumnIdxs_1_1","virtualScrollInvisibleRowBuilder","rowElement","skipRowsAdjustment","round","headerMaxHeight","forceFixWidth","this_4","isHeaderAuto","Number","forceResetColumns","rowTrackByFn","INTERNAL_ROW_DIFFER_ID","columnHeaderTrackByFn","INTERNAL_COLUMN_HEADER_ID","removeTableRowByIndex","removeTableRowById","scrollHeight","showBlankRow","removeFromTableRow","tableRow","findIndex","IterableDiffers","LockedColumnDirective","ClipboardModule","TableModule","TabComponent","active","TabPaneComponent","tabList","tabs","configureTabs","selectedTabIndex","handleSelectTab","tabId","setFocusedTab","selectedTab","className","includes","keyPressed","which","newIndex","focusedTabIndex","tabItem","tabNavItems","tempIndex","ViewChildren","TabHostDirective","viewContainerRef","TabPaneModule","TextAreaComponent","_editable","controlPadding","textarea","pos","TextAreaModule","TreeTableComponent","createDocFragment","columnDefs","headerName","_bodyFragment","clearRows","innerHTML","selectedNodes","createRow","_selectRow","addRow","nodeIndex","createCell","addCell","redrawTree","expandable","expandAll","setNodeExpandedStatus","collapseAll","getChildById","status","getNodes","createDocumentFragment","appendFragment","TreeTableModule","ViewComponent","Set","_viewInitializedSubject","setRouteUrl","url","routeUrl","getRouteUrl","isRouteDeactivated","routeDeactivated","afterDialogInit","popupMenus","popupMenu","convertSubMenuItems","componentInitialize","viewRouteSet","setElementAttributeById","setModalMode","cssText","beforeDestroyCb","_inactiveMenuItems","mcos","defIds","_tableColumnsMap","bodyInit","selectorFn","compId","setElementAttributesById","attributes_1","attributes_1_1","removeElementAttributeById","setRadioGroupAttribute","radioGroupId","radios","from","getElementAttributeById","selectComboBoxItem","delayDialogClose","_viewStatus","createMco","mcoClass","domString","_createDynamicComponent","componentType","compFactory","ComponentType","_removeComponent","_embeddedViews","ev","ev_1","ev_1_1","n","getScreenIndex","keySet","keyIt","keyIt_1","rs","trackDef","hasIdAsCloseTargetOnInit","closeOnInit","idSet","hasTypeAsCloseTargetOnInit","types","hookClosePrevView2DynamicPagesService","hooked","closePrevView","screenId","Type","viewType_1","checkScreenInique","oldView","oType","registerPopupMenu","getInactiveMenuItem","freezeChangeDetection","detach","changeDetectionFrozen","unfreezeChangeDetection","reattach","moveToTop","fauxMenuItem","handleActionForward","registerScreenIndex","ViewModule","PopupMenuComponent","popupMenuService","menuItemsDiffer","onDocumentClick","handleDocumentClick","tm","show","dropdownContainer","isShown","dispSubmenu","currentChildren","parentChildren","len","MenuItemDirective","subMenuItems","MenuItemComponent","handleOnEnter","handleMouseEnter","MenuDirective","PopupMenuContainerComponent","activeMenuSubscription","activeMenuObservable","activeMenuItems","activeMenuId","PopupMenuDirective","getMenuItems","PopupMenuModule","schemas","CUSTOM_ELEMENTS_SCHEMA","BottomPaneComponent","TopPaneComponent","SplitPaneComponent","_handleMouseMove","_resizePanels","_handleMouseDown","orientation","_prevPos","_resizeOn","_update","_handleMouseUp","_noScroll","topPaneStyles","bottomPaneStyles","setPaneWidth","topPaneElement","bottomPaneElement","dividerStyles","splitPosition","nPercent","dividerCssClass","splitPaneDivider","_containerWidth","splitPaneContainer","_containerHeight","requestAnimationFrame","_doUpdate","leftWidth","topHeight","top_1","SplitPaneModule","CustomAttribute","getPropertyName","getPropertyValue"],"mappings":"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","sourcesContent":["import { Injector } from '@angular/core';\n\n/**\n * This constant provide a global access to injector so we can use it to retrieve\n * service from place where we can't inject (like function).\n *\n * !!!!!!!!!!!!!!DO NOT USE THIS IN PLACES WHERE YOU CAN INJECT SERVICES!!!!!!!!!!!\n */\nlet injectorRef: Injector;\n\nexport const appInjector = (injector?: Injector): Injector => {\n    if (injector) {\n        injectorRef = injector;\n    }\n\n    return injectorRef;\n}\n","export enum AttributesEnum {\n  ID,\n  VISIBLE,\n  CLASS,\n  DISABLED,\n  ENABLED,\n  TEXT,\n  COLOR,\n  ON_COMMAND,\n  REQUIRE,\n  TITLE,\n  FONT_BOLD,\n  SELECTED,\n  BG_COLOR,\n  VALUE,\n  PATTERN,\n  MAX_LENGTH,\n  MAX,\n  MIN\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class KeyUtils {\n  /**\n   * Make key case insensitive\n   * @param key\n   */\n  static toMapKey(key: string): string {\n    if (key != null) {\n      return key.toLowerCase();\n    }\n\n    return null;\n  }\n\n  static toJsonValue(val: any): string {\n    if (typeof val === \"number\" || typeof val === \"boolean\") {\n      return val + \"\";\n    } else {\n      return val;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { KeyUtils } from '../base/key-utils';\nimport { ViewComponent } from '../view/view.component';\nimport * as _ from 'lodash';\nimport { Subject } from 'rxjs';\nimport { ViewChangedEvent } from './view-changed.event';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class McoContainerService {\n  /**\n   * Keeps internal list of active ViewComponents\n   */\n  private activeViewsStack: Array<ViewComponent> = [];\n\n  //stored actionForwardHandler (e.g. a sub view) that does not have an NXML\n  private actionForwardHandler: Map<string, ViewComponent>;\n\n  /**\n   * Internal map of MCO instances\n   */\n  private _mcoMap: Map<string, any> = new Map<string, any>();\n  private readonly MIN_Z_INDEX = 1000;\n  private readonly MAX_Z_INDEX = 99999;\n  //1050 is for actual modal\n\n  viewsChanged = new Subject<ViewChangedEvent>();\n\n  /**\n   * Get mco instance from internal [[_mcoMap]]\n   * @param mcoName Name of MCO instance\n   */\n  getMco(mcoName: string): any {\n    return this._mcoMap.get(KeyUtils.toMapKey(mcoName));\n  }\n\n  /**\n   * Get the maximum allowed z-index value for layering windows\n   */\n  getMaxZIndex(): number {\n    return this.MAX_Z_INDEX;\n  }\n\n  /**\n   * Alias of [[registerMco]]\n   * @param mcoName\n   * @param mco\n   */\n  addMco(mcoName: string, mco: any) {\n    this.registerMco(mcoName, mco);\n  }\n\n  /**\n   * Add an mco instance to internal [[_mcoMap]]\n   * @param mcoName\n   * @param mco\n   */\n  registerMco(mcoName: string, mco: any) {\n    this._mcoMap.set(KeyUtils.toMapKey(mcoName), mco);\n  }\n\n  /**\n   * Remove mco object from internal [[_mcoMap]]\n   * @param mcoName Name of mco instance to remove\n   */\n  removeMco(mcoName: string) {\n    const key = KeyUtils.toMapKey(mcoName);\n    const mco = this._mcoMap.get(key);\n\n    if (mco != null && typeof mco[\"cleanup\"] === \"function\") {\n      mco.cleanup();\n    }\n\n    this._mcoMap.delete(key);\n  }\n\n  /**\n   * Push view to the last active view stack. This will be the view that returned\n   * when popLastActiveView is called.\n   *\n   * @param view ViewComponent to be add to the stack\n   */\n  registerView(view: ViewComponent) {\n    if (view.canBeActiveView !== true) {\n      // this.activeViewsStack.splice(0, 0, view);\n      // view.zIndex = this.MIN_Z_INDEX - this.activeViewsCount();\n      if (this.actionForwardHandler == null) {\n        this.actionForwardHandler = new Map<string, ViewComponent>();\n      }\n      this.actionForwardHandler.set(view.actionForwardName, view);\n    } else {\n      this.activeViewsStack.push(view);\n      view.zIndex = this.getViewZIndex();\n    }\n\n    this.activeViewsStack = _.uniqBy(this.activeViewsStack, (v)=>v.uniqueId);\n  }\n\n  /**\n   * Pop last active view. This will remove the view from the active stack\n   */\n  popLastActiveView(): ViewComponent {\n    return this.activeViewsStack.pop();\n  }\n\n  /**\n   * Remove a view that has been destroyed from the stack.\n   *\n   * @param view ViewComponent to be removed from stack\n   */\n  removeView(view: ViewComponent) {\n    if (view.canBeActiveView !== true){\n      if (this.actionForwardHandler != null) {\n        this.actionForwardHandler.delete(view.actionForwardName);\n      }\n    } else {\n      this.activeViewsStack = _.filter(this.activeViewsStack, (v)=>v.uniqueId !== view.uniqueId);\n      this.reStackView();\n    }\n  }\n\n  /**\n   * Minimize a view window by ID\n   * @param viewId Id of view to minimize\n   * @param screenIndex (optional) index of screen if multi screen support is allowed\n   */\n  minimizeView(viewId: string, screenIndex: number = null) {\n    const view = this.getViewById(viewId, screenIndex);\n\n    if (view != null) {\n      view.isMinimized = true;\n    }\n\n    let activeView: ViewComponent = null;\n    let isModalActive: boolean = false;\n\n    if (this.activeViewsCount() > 1) {\n      const visibleViews = this.activeViewsStack.filter(v=>v.isMinimized !== true && v.skipBreadCrumb !== true);\n\n      if (visibleViews != null && visibleViews.length > 0) {\n        activeView = visibleViews[visibleViews.length - 1];\n        let i = visibleViews.length - 1;\n        // Itterate through visibile views to look for the next dialog view (not subview)\n        while (visibleViews[i] && !activeView.dialog) {\n          activeView = visibleViews[i]\n          i--;\n        }\n\n        let count = 0;\n\n        do {\n          if (visibleViews[count]) {\n            isModalActive = visibleViews[count].isModalDialog();\n            count = count + 1;\n          }\n        } while (isModalActive !== true && count < visibleViews.length);\n      }\n    }\n\n    this.viewsChanged.next({\n      views: this.getBreadcrumb(this.activeViewsStack),\n      activeView: activeView,\n      minMaxEvent: true,\n      isModalActive: isModalActive\n    });\n  }\n\n  /**\n   * Shows a view by id\n   * @param viewId Id of view to show\n   * @param screenIndex (optional) index of screen if multi screen support is allowed\n   */\n  showView(viewId: string, screenIndex: number = null) {\n    const view = this.getViewById(viewId, screenIndex);\n\n    if (view != null) {\n      view.isMinimized = true;\n    }\n\n    let isModalActive: boolean = false;\n\n    let count = 0;\n\n    do {\n      if (this.activeViewsStack[count]) {\n        isModalActive = this.activeViewsStack[count].isModalDialog();\n        count = count + 1;\n      }\n    } while (isModalActive !== true && count < this.activeViewsStack.length);\n\n    this.viewsChanged.next({\n      views: this.getBreadcrumb(this.activeViewsStack),\n      activeView: view,\n      minMaxEvent: true,\n      isModalActive: isModalActive\n    });\n  }\n\n  /**\n   * Close the view window\n   * @param viewId Id of view to close\n   * @param screenIndex (optional) index of the screen if multi screen support\n   */\n  closeView(viewId: string, screenIndex: number = null) {\n    const view = this.getViewById(viewId, screenIndex);\n\n    if (view != null) {\n      view.close();\n    }\n  }\n\n  /**\n   * Get the number of current active view from [[activeViewsStack]]\n   * @returns Number of active views\n   */\n  activeViewsCount(): number {\n    return this.activeViewsStack.length;\n  }\n\n  /**\n   * Check to see if a view is in the [[activeViewStack]]\n   * @param view ViewComponent's id as a string or [[ViewComponent]] instance\n   * @returns True if the view component is in the [[activeViewStack]]\n   */\n  hasView(view: ViewComponent | string): boolean {\n    if (typeof view === 'string') {\n      return _.filter(this.activeViewsStack, (v)=>v.id === view as string).length > 0;\n    }\n\n    return _.filter(this.activeViewsStack, (v)=>v.uniqueId === view.uniqueId).length > 0;\n  }\n\n  /**\n   * Get the current active view\n   * @returns the active view from the view stack\n   */\n  activeView(): ViewComponent {\n    return this.activeViewsCount() > 0 ? this.activeViewsStack[this.activeViewsCount() - 1] : null;\n  }\n\n  /**\n   * Get a view from [[actriveViewStack]] by ID\n   * @param viewId Views id value\n   * @param screenIndex (optional) the screenIndex of the view (if multiple screen is allow)\n   * @returns View that matches value of id\n   */\n  getViewById(viewId: string, screenIndex: number = null): ViewComponent {\n    return _.find(this.activeViewsStack, (view: ViewComponent)=>{\n      return view.id === viewId && (screenIndex == null || (screenIndex != null && view.screenIndex === screenIndex));\n    });\n  }\n\n  /**\n   * Get handler view component by name\n   * @param actionForwardName\n   * @returns View component or null if there is no component with actionForwardName\n   */\n  getActionForwardHandler(actionForwardName: string) {\n    if (this.actionForwardHandler != null) {\n      return this.actionForwardHandler.get(actionForwardName);\n    }\n\n    return null;\n  }\n\n  /**\n   * Get the [[actionForwardHandler]]\n   */\n  getActionForwardHandlerMap() {\n    return this.actionForwardHandler;\n  }\n\n  /**\n   * Get the [[activeViewStack]]\n   */\n  getViews(): Array<ViewComponent> {\n    return this.activeViewsStack;\n  }\n\n  /**\n   * Update z-index (layer position) of all active views\n   * @param topViewId ID of view component to set max z-index (top)\n   */\n  reStackView(topViewId: string = null, screenIndex: number = null) {\n    this.activeViewsStack = _.sortBy(this.activeViewsStack, (view: ViewComponent)=>{\n      //we are top view\n      if (view.id === topViewId && (screenIndex == null || (screenIndex === view.screenIndex))) {\n        return this.MAX_Z_INDEX;\n      }\n\n      return view.zIndex;\n    });\n\n    let isModalActive: boolean = false;\n\n    _.forEach(this.activeViewsStack, (view: ViewComponent, idx: number)=>{\n      view.updateZIndex(this.MIN_Z_INDEX + idx);\n\n      if (isModalActive !== true && view.isModalDialog() === true) {\n        isModalActive = true;\n      }\n    });\n\n    this.viewsChanged.next({\n      views: this.getBreadcrumb(this.activeViewsStack),\n      activeView: this.activeViewsStack[this.activeViewsStack.length - 1],\n      isModalActive: isModalActive\n    });\n  }\n\n  /**\n   * Get the z-index\n   */\n  getViewZIndex(): number {\n    return this.MIN_Z_INDEX + this.activeViewsCount();\n  }\n\n  private getBreadcrumb(views: Array<ViewComponent>): Array<ViewComponent> {\n    return views.filter(v=>v.skipBreadCrumb !== true && v.dialog != null && v.visible !== false);\n  }\n\n  /**\n   * Get the session from an MCO instance\n   * @param mco\n   * @returns Session\n   */\n  static getClientSessionFromMco(mco: any) {\n    return mco.getSession();\n  }\n  /**\n   * æ¬¡ã®screenIndexãåå¾ãã¾ãã\n   * screenIndexã¯1~8ã®å¤ãã¨ãããã«ããµã¼ãã§æ³å®ããã¦ãã¾ãã\n   */\n  nextScreenIndex(baseScreenId:string, id:string = null): number{\n    const existingScreens = this.activeViewsStack.filter(v=>\n      (id)\n        ? v.id === id\n        : v.baseScreenId === baseScreenId\n    );\n    if (existingScreens.length > 0) {\n      const i = _.orderBy(existingScreens, (scr: ViewComponent)=>scr.screenIndex, \"desc\")\n        .pop().screenIndex\n      return i + 1;\n    }else{\n      return 1;\n    }\n  }\n\n  refreshBreadCrumb() {\n    let isModalActive: boolean = false;\n\n    _.forEach(this.activeViewsStack, (view: ViewComponent)=>{\n      if (isModalActive !== true && view.isModalDialog() === true) {\n        isModalActive = true;\n      }\n    });\n\n    this.viewsChanged.next({\n      views: this.getBreadcrumb(this.activeViewsStack),\n      activeView: this.activeViewsStack[this.activeViewsStack.length - 1],\n      isModalActive: isModalActive\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ClientEvent } from './client-event';\nimport { BaseComponent } from '../base/base.component';\nimport { McoContainerService } from '../mco-container/mco-container.service';\n\n/**\n * Track events\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventHandlerService {\n  private _clientEvent: ClientEvent;\n\n  constructor(\n    private mcoContainerService: McoContainerService\n  ) {\n\n  }\n\n  setClientEvent(event: ClientEvent): void {\n    this._clientEvent = event;\n  }\n\n  getClientEvent(): ClientEvent {\n    return this._clientEvent;\n  }\n\n  fireEvent(command: string, mcoName: string, actionName: string, arg: any, source: BaseComponent, clientEvent: ClientEvent) {\n    const mco = this.mcoContainerService.getMco(mcoName);\n\n    if (mco != null && typeof mco[actionName] === \"function\") {\n      if (Array.isArray(arg)) {\n        (mco[actionName] as Function).apply(mco, arg);\n      } else {\n        (mco[actionName] as Function).apply(mco, [arg]);\n      }\n    }\n  }\n}\n","import { MenuItem } from \"./menu-item\";\n\nimport * as _ from \"lodash\";\n\n/**\n * Class for creating [[MenuItems]]\n */\nexport class MenuItemBuilder {\n    //internal menu item for special case, DO NOT use\n    //this is needed when right click event of child item is table column trigger before row\n    _internalMenuItem: MenuItem;\n\n    /**\n     * Map of HTML attributes to add to menu item\n     */\n    attributes: {[name: string]: any} = {};\n\n    /* istanbul ignore next */\n    /**\n     * \n     * @param menuItem \n     */\n    constructor(menuItem: MenuItem = null) {\n        this._internalMenuItem = menuItem;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Allowed attribute names\n     */\n    static knownKeys = [\n        \"id\",\n        \"text\",\n        \"onCommand\",\n        \"onCommandCallback\",\n        \"onMouseDownCallback\",\n        \"menuItems\",\n        \"display\",\n        \"fontColor\",\n        \"fontBold\",\n        \"fontSize\",\n        \"margin\"\n    ];\n\n    /**\n     * Create a menu separator using hyphens\n     */\n    static createHorizontalDivider() {\n        const menuItem = new MenuItemBuilder();\n        menuItem.setAttribute(\"text\", \"-\");\n\n        return menuItem;\n    }\n\n    /**\n     * Get a new [[MenuItemBuilder]] instance\n     * @returns [[MenuItemBuilder]] instance\n     */\n    static createMenuItem() {\n        return new MenuItemBuilder();\n    }\n\n    /**\n     * Set text attribute\n     * @param text \n     */\n    setText(text: string) {\n        this.setAttribute(\"text\", text);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * \n     * @param width \n     */\n    setWidth(width: string) {\n        //don't think this should be doing anything, all menu item shared the same width\n    }\n\n    /* istanbul ignore next */\n    /**\n     * \n     * @param img \n     */\n    setImgHint(img: string) {\n        //TODO\n    }\n\n    /**\n     * Sets event handler for mousedown\n     * @param fn Mouse down event handler function\n     */\n    setOnMouseDown(fn: (thisArg?: any)=>void) {\n        this.setAttribute(\"onMouseDownCallback\", fn);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Set margin attribute\n     * @param margin Should be number\n     */\n    setMargin(margin: string) {\n        this.setAttribute(\"margin\", margin);\n    }\n\n    /**\n     * Set fontColor attribute\n     * @param color Should be CSS valid color string (e.g. #ff0000, red, etc.)\n     */\n    setFontColor(color: string) {\n        this.setAttribute(\"fontColor\", color);\n    }\n\n    /**\n     * Set fontSize attribute\n     * @param size Should be number\n     */\n    setFontSize(size: string) {\n        this.setAttribute(\"fontSize\", size);\n    }\n\n    /**\n     * Set fontBold attribute\n     * @param bold \n     */\n    setFontBold(bold: string) {\n        this.setAttribute(\"fontBold\", bold);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Set custom attribute on [[MenuItem]]\n     * @param name \n     * @param value \n     */\n    setAttribute(name: string, value: any) {\n        this.attributes[name] = value;\n\n        if (this._internalMenuItem != null) {\n            if (MenuItemBuilder.knownKeys.indexOf(name) >= 0) {\n                this._internalMenuItem[name] = value;\n            } else {\n                if (this._internalMenuItem.customAttributes == null) {\n                    this._internalMenuItem.customAttributes = {};                    \n                }\n                \n                this._internalMenuItem.customAttributes[name] = value;\n            }\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Return the value of the attribute\n     * \n     * @param name the name of the attribute\n     */\n    getAttribute(name: string): any {\n        return this.attributes[name];\n    }\n\n    /**\n     * Convert [[MenuItemDirective]] to [[MenuItem]]\n     * @param parentScreenId \n     */\n    toMenuItem(parentScreenId?: string): MenuItem {\n        const menuItem: MenuItem = {};\n        menuItem.parentScreenId = parentScreenId;\n\n       /* istanbul ignore next */\n        if (this.attributes[\"id\"] != null) {\n            menuItem.id = this.attributes[\"id\"];\n        }\n\n        if (this.attributes[\"text\"] != null) {\n            menuItem.text = this.attributes[\"text\"];\n        }\n\n       /* istanbul ignore next */\n        if (this.attributes[\"menuItems\"] != null) {\n            menuItem.menuItems = _.map(this.attributes[\"menuItems\"], (subMenu)=>subMenu.toMenuItem(parentScreenId));\n        }\n\n        if (this.attributes[\"onCommandCallback\"] != null) {\n            menuItem.onCommandCallback = this.attributes[\"onCommandCallback\"];\n        }\n\n        if (this.attributes[\"onCommand\"] != null) {\n            menuItem.onCommandCallback = this.attributes[\"onCommand\"];\n        }\n\n        /* istanbul ignore next */\n        if (this.attributes[\"onMouseDownCallback\"] != null) {\n            menuItem.onMouseDownCallback = this.attributes[\"onMouseDownCallback\"];\n        }\n\n        if (this.attributes[\"display\"] != null) {\n            menuItem.display = this.attributes[\"display\"];\n        }\n\n        if (this.attributes[\"fontColor\"] != null) {\n            MenuItemBuilder.initStyle(menuItem);\n\n            menuItem.styles[\"color\"] = this.attributes[\"fontColor\"];\n        }\n\n        if (this.attributes[\"fontSize\"] != null) {\n            MenuItemBuilder.initStyle(menuItem);\n\n            menuItem.styles[\"font-size\"] = this.attributes[\"fontSize\"];\n        }\n\n       /* istanbul ignore next */ \n        if (this.attributes[\"fontBold\"] != null) {\n            MenuItemBuilder.initStyle(menuItem);\n\n            if (this.attributes[\"fontBold\"] === true || this.attributes[\"fontBold\"] === \"true\") {\n                menuItem.styles[\"font-weight\"] = this.attributes[\"bold\"];\n            } else {\n                menuItem.styles[\"font-weight\"] = \"normal\";\n            }\n        }\n\n        if (this.attributes[\"margin\"] != null) {\n            MenuItemBuilder.initStyle(menuItem);\n\n            menuItem.styles[\"margin\"] = this.attributes[\"margin\"];\n        }\n\n        const keys = _.filter(_.keys(this.attributes), (key)=>{\n            return MenuItemBuilder.knownKeys.indexOf(key) < 0;\n        });\n\n        if (keys && keys.length > 0) {\n            menuItem.customAttributes = {};\n\n            for (let key of keys) {\n                menuItem.customAttributes[key] = this.attributes[key];\n            }\n        }\n\n        return menuItem;\n    }\n\n    /**\n     * Add [[MenuItemBuilder]] instance to menuItems attribute\n     */\n    appendChild(menuItem: MenuItemBuilder) {\n        if (this.attributes[\"menuItems\"] == null) {\n            this.attributes[\"menuItems\"] = [];\n        }\n\n        if (menuItem instanceof MenuItemBuilder) {\n            this.attributes[\"menuItems\"].push(menuItem);\n        }\n    }\n\n    /**\n     * Parse MenuItem and convert to a builder. Need for case where table column trigger context menu\n     * prior to the contextmenu of row is activated. Thus the MenuItemComponent does not exists yet so\n     * we need something as temporary.\n     * \n     * @param menuItem \n     */\n    static fromMenuItem(menuItem: MenuItem) {\n        return new MenuItemBuilder(menuItem);\n    }\n\n    /**\n     * Clear out style values for [[MenuItem]]\n     * @param menuItem\n     */\n    static initStyle(menuItem: MenuItem) {\n        if (menuItem.styles == null) {\n            menuItem.styles = {};\n        }\n    }\n\n    //free resource\n    _free() {\n        this._internalMenuItem = null;\n        this.attributes = null;\n    }\n}","import { Injectable } from '@angular/core';\nimport { PopupMenuComponent } from './popup-menu.component';\nimport { Observable, Subject } from \"rxjs\";\nimport { MenuItemBuilder } from './menu-item-builder';\nimport { MenuItem } from './menu-item';\n\nimport * as _ from \"lodash\";\n\nexport interface PopupMenuData {\n  menuItems: Array<MenuItem>;\n  parentScreenId: string;\n}\n\n/**\n * Service class to handle context menus\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContextMenuService {\n  private contextMenuMap: Map<string, PopupMenuData> = new Map<string, PopupMenuData>();\n  private activeMenuSubject: Subject<string> = new Subject<string>();\n  private activeMenu: string;\n  private menuItemBuilders: Array<MenuItemBuilder>;\n\n  activeMenuObservable = this.activeMenuSubject.asObservable();\n\n  constructor() { }\n\n  /**\n   * \n   * @param name \n   * @param menuItems \n   * @param parentScreenId \n   */\n  registerContextMenu(name: string, menuItems: Array<MenuItem>, parentScreenId: string = null) {\n    const key = this.rekey(name);\n    if (this.contextMenuMap.has(key)) {\n      const menuData = this.contextMenuMap.get(key);\n\n      if (parentScreenId != null && parentScreenId !== \"\") {\n        menuData.parentScreenId = parentScreenId;\n      }\n\n      menuData.menuItems = menuItems;\n    } else {\n      this.contextMenuMap.set(key, {\n        menuItems: menuItems,\n        parentScreenId: parentScreenId\n      });\n    }\n  }\n\n  /**\n   * Set the active and visible context menu by name\n   * @param name \n   */\n  showContextMenu(name: string): boolean {\n    let hasContextMenu: boolean = false;\n    \n    if (this.contextMenuMap.has(this.rekey(name))) {\n      hasContextMenu = true;\n    }\n\n    this.setActiveMenu(name);\n    this.activeMenu = name;\n\n    if (this.menuItemBuilders != null) {\n      this.menuItemBuilders.forEach(menuItemBuilder=>menuItemBuilder._free());\n      this.menuItemBuilders = [];\n    }\n\n    return hasContextMenu;\n  }\n\n  /**\n   * Deactivate menu by name, and hide it\n   * @param name\n   */\n  hideContextMenu(name: string) {\n    this.setActiveMenu(null);\n    this.activeMenu = null;\n  }\n\n  /**\n   * Get menu items by [[PopupMenuData]] name key\n   * @param name Name of [[PopupMenuData]] key\n   * @returns Menu items in data if it exists, otherwise null\n   */\n  getContextMenuItems(name: string): Array<MenuItem> {\n    const menuData = this.contextMenuMap.get(this.rekey(name));\n\n    if (menuData != null) {\n      return menuData.menuItems;\n    }\n\n    return null;\n  }\n\n  /**\n   * Get the menu's parent id\n   * @param name Name of [[PopupMenuData]] item key\n   */\n  getContextMenuParentScreenId(name: string) {\n    const menuData = this.contextMenuMap.get(this.rekey(name));\n\n    if (menuData != null) {\n      return menuData.parentScreenId;\n    }\n\n    return null;\n  }\n\n  /**\n   * Remove context menu item by name\n   * @param name Name of [[PopupMenuData]] item key\n   */\n  removeContextMenu(name: string) {\n    this.contextMenuMap.delete(this.rekey(name));\n\n    if (this.activeMenu === name) {\n      this.activeMenu = null;\n    }\n  }\n\n  /**\n   * Set active menu\n   * @param id Id of menu to set as active\n   */\n  setActiveMenu(id: string) {\n    this.activeMenuSubject.next(id);\n  }\n\n  /**\n   * Set menu items by parent screen id\n   * @param id Id of parent containing menu\n   * @param menuItems Items to set\n   */\n  resetMenu(id: string, menuItems: Array<MenuItemBuilder>) {\n    let newMenuItems: Array<MenuItem>;\n\n    const parentScreenId = this.getContextMenuParentScreenId(id);\n\n    if (menuItems.length > 0 && menuItems[0] instanceof MenuItemBuilder) {\n      newMenuItems = _.map(menuItems, (menuItem: MenuItemBuilder)=>menuItem.toMenuItem(parentScreenId));\n    } else {\n      newMenuItems = (menuItems as any)|| [];\n    }\n\n    this.registerContextMenu(id, newMenuItems);\n  }\n\n  /**\n   * Convert key to lowercase\n   * @param key \n   * @returns key value as lowercased string\n   */\n  private rekey(key: string) {\n    return key.toLowerCase();\n  }\n\n  /**\n   * This is for special case\n   * @param menuItemBuilder MenuItemBuilder to be released of memory when showContextMenu is called.\n   */\n  _trackMenuItemBuilderForMemRelease(menuItemBuilder: MenuItemBuilder) {\n    if (this.menuItemBuilders == null) {\n      this.menuItemBuilders = [];\n    }\n\n    this.menuItemBuilders.push(menuItemBuilder);\n  }\n}\n","import { Injectable, Injector, Type, NgZone } from '@angular/core';\nimport { McoContainerService } from '../mco-container/mco-container.service';\nimport { EventHandlerService } from '../event-handler/event-handler.service';\nimport { RequestService } from './request-service';\nimport { RouteNavigator } from './route-navigator';\nimport { Position } from './position';\nimport { ContextMenuService } from '../popup-menu/context-menu.service';\nimport { MenuItemBuilder } from '../popup-menu/menu-item-builder';\nimport { MenuItem } from '../popup-menu/menu-item';\nimport { MessageService } from './messaging-service';\n\n/**\n * Class for managing client sessions\n */\n@Injectable()\nexport class SessionService {\n  private requestService: RequestService;\n  private routeNavigator: RouteNavigator;\n  private mousePosition: Position;\n  private defsMap: Map<string, any> = new Map<string, any>();\n\n  /**\n   * Flag to keep track of when control key is pressed\n   */\n  private isCtrl: boolean;\n\n  /**\n   * Flag to keep track of when shift key is pressed\n   */\n  private isShift: boolean;\n\n  /**\n   * Flag to keep track of when alt key is pressed\n   */\n  private isAlt: boolean;\n\n  private messagingService: MessageService;\n\n  _currentPopupMenuId: string;\n\n  /**\n   * Specify how far a user can drag the dialog down.\n   */\n  dialogMaxTopPosition: number;\n\n  //track window lost focus\n  _windowLostFocus: boolean;\n\n  /**\n   *\n   * @param _mcoContainer\n   * @param _eventHandlerService\n   * @param injector\n   * @param contextMenuService\n   * @param ngZone\n   */\n  constructor(\n    private _mcoContainer: McoContainerService,\n    private _eventHandlerService: EventHandlerService,\n    private injector: Injector,\n    private contextMenuService: ContextMenuService,\n    ngZone: NgZone\n  ) {\n    ngZone.runOutsideAngular(()=>{\n      document.addEventListener(\"keydown\", (event)=>this.checkKey(event), true);\n      document.addEventListener(\"keyup\", (event)=>this.resetKey(event), true);\n\n      //track when window lost/gain focus\n      window.addEventListener(\"focusout\", (event: FocusEvent)=>{\n          this._windowLostFocus = true;\n      }, true);\n\n      window.addEventListener(\"focusin\", ()=>{\n        this._windowLostFocus = false;\n      }, true);\n    });\n  }\n\n  /**\n   * Get internal [[_mcoContainer]]\n   */\n  getMcoContainer(): McoContainerService {\n    return this._mcoContainer;\n  }\n\n  /**\n   * Get internal [[_eventHandlerService]]\n   */\n  getEventHandler(): EventHandlerService {\n    return this._eventHandlerService;\n  }\n\n  /**\n   * Set [[requestService]] value\n   * @param requestService\n   */\n  registerRequestService(requestService: RequestService) {\n    this.requestService = requestService;\n  }\n\n  /**\n   * Get value of [[requestService]] property\n   * @returns The requestService\n   */\n  getRequestService(): RequestService {\n    return this.requestService;\n  }\n\n  /**\n   * Set [[routeNavigator]] value\n   * @param routeNavigator\n   */\n  registerRouteNavigatorService(routeNavigator: RouteNavigator) {\n    this.routeNavigator = routeNavigator;\n  }\n\n  /**\n   * Get value of [[routeNavigator]] property\n   */\n  getRouteNavigatorService(): RouteNavigator {\n    return this.routeNavigator;\n  }\n\n  /**\n   * Set the position of the mouse\n   * @param event\n   */\n  setMousePosition(event: MouseEvent) {\n    this.mousePosition = {\n      x: event.clientX,\n      y: event.clientY,\n      screenX: event.screenX,\n      screenY: event.screenY\n    }\n  }\n\n  /**\n   * Get the mouse position\n   * @returns Object with properties: x, y, screenX, screenY\n   */\n  getMousePosition() {\n    return this.mousePosition;\n  }\n\n  /**\n   * Delegate to [[Injector]].get method\n   * @param type\n   */\n  getInjector(type: any) {\n    return this.injector.get(type);\n  }\n\n  /**\n   * Get display service.\n   */\n  getDisplayService() {\n    //TODO\n    return null;\n  }\n\n  /**\n   * Delegate to [[ContextMenuService]].showContextMenu\n   * @param id Context menu id\n   */\n  showContextMenu(id: string): boolean {\n    return this.contextMenuService.showContextMenu(id);\n  }\n\n  /**\n   * Delegate to [[ContextMenuService]].hideContextMenu\n   * @param id Context menu id\n   */\n  hideContextMenu(id: string) {\n    this.contextMenuService.hideContextMenu(id);\n  }\n\n  /**\n   * Delegate to [[ContextMenuService]].resetMenu. And set [[_currentPopupMenuId]]\n   * @param id Menu id\n   * @param menuItems\n   */\n  resetContextMenu(id: string, menuItems: Array<MenuItemBuilder>) {\n    this.contextMenuService.resetMenu(id, menuItems);\n    this._currentPopupMenuId = id;\n  }\n\n  /**\n   * Add entry to [[defsMap]] Map\n   * @param id Key\n   * @param data Value\n   */\n  storeDef(id: string, data: any) {\n    this.defsMap.set(id, data);\n  }\n\n  /**\n   * Get def map entry by key\n   * @param id Key\n   */\n  getDef(id: string) {\n    return this.defsMap.get(id);\n  }\n\n  /**\n   * Delete def from [[defsMap]] by key\n   * @param id Key to delete\n   */\n  deleteDef(id: string) {\n    this.defsMap.delete(id);\n  }\n\n  /**\n   * Get [[isCtrl]] property value\n   * @returns True if control key is pressed, otherwise false.\n   */\n  isCtrlPressed(): boolean {\n    return this.isCtrl === true;\n  }\n\n  /**\n   * Get [[isShift]] property value\n   * @returns True if shift key is pressed, otherwise false.\n   */\n  isShiftPressed(): boolean {\n    return this.isShift === true;\n  }\n\n  /**\n   * Get [[isAlt]] property value\n   * @returns True if alt key is pressed, otherwise false.\n   */\n  isAltPressed(): boolean {\n    return this.isAlt === true;\n  }\n\n  /**\n   * Get [[messagingService]] property\n   * @returns Value of [[messagingServiced]]\n   */\n  getMessagingService() {\n    return this.messagingService;\n  }\n\n  /**\n   * Set [[messagingService]] property\n   * @param service\n   */\n  registerMessagingService(service: MessageService) {\n    this.messagingService = service;\n  }\n\n  /**\n   * Key down handler to set internal flags for Control, Shift, and Alt\n   * @param event\n   */\n  private checkKey(event: KeyboardEvent) {\n    this.isCtrl = event.ctrlKey;\n    this.isShift = event.shiftKey;\n    this.isAlt = event.altKey;\n  }\n\n  /**\n   * Keyboard event handler for setting all internal flags for Control, Shift, and Alt to false\n   * @param event\n   */\n  private resetKey(event: KeyboardEvent) {\n      this.isCtrl = false;\n      this.isShift = false;\n      this.isAlt = false;\n  }\n}\n","export class IllegalArgumentException extends Error {\n\n}\n","import * as _ from 'lodash';\nimport * as moment from 'moment';\nimport { IllegalArgumentException } from './illegal-argument-exception';\n\nexport class JavaUtils {\n  static readonly NUMERIC = new RegExp(\"^[0-9]+$\");\n\n  static isNumber(str: string): boolean {\n    return str == null ? false : JavaUtils.NUMERIC.test(str);\n  }\n\n  static booleanToString(boo: boolean): string {\n    if (boo === true) {\n      return 'true';\n    }\n\n    return 'false';\n  }\n\n  static equals(a: any, b: any) {\n    return a == b;\n  }\n\n  static parseBoolean(val: any) {\n    if (typeof val === 'boolean') {\n      return val;\n    } else if (typeof val === 'string') {\n      return val === 'true' ? true : false;\n    } else {\n      throw new Error('Unsupport boolean value: ' + val);\n    }\n  }\n\n  static stringValue(val: any) {\n    if (typeof val === 'string') {\n      return val;\n    }\n\n    return val + '';\n  }\n\n  static longValue(str: any) {\n    if (str != null) {\n      return _.parseInt(str);\n    }\n\n    return null;\n  }\n\n  static doubleValue(str: string) {\n    if (str != null) {\n\n      let result :number = str.indexOf(\".\") >= 0 ? parseFloat(str) : _.parseInt(str);\n\n      if (isNaN(result)){\n        throw new IllegalArgumentException;\n      }\n      return result;\n    }\n    return null;\n  }\n\n  static intValue(str: any) {\n    if (str != null) {\n      return _.parseInt(str);\n    }\n\n    return null;\n  }\n\n  static toString(val: any) {\n    if (typeof val === 'number') {\n      return val + '';\n    } else if (typeof val === 'boolean') {\n      return JavaUtils.booleanToString(val);\n    }\n  }\n\n  static compareTo(a: string, b: string): number {\n    let retVal = null;\n\n    if (a === b) {\n      retVal = 0;\n    } else if (a > b) {\n      retVal = 1;\n    } else {\n      retVal = -1;\n    }\n\n    return retVal;\n  }\n\n  static bigDecimal(val: number | string, scale: number = 0, roundingMode: number = -1) {\n    //for now, just retrn the number\n    const fixedValue = typeof val === 'number' ? val : parseFloat(val);\n\n    if (scale > 0) {\n      return parseFloat(`${fixedValue}.${_.padStart('', scale, '0')}`);\n    } else {\n      return fixedValue;\n    }\n  }\n\n  static signum(num: number): number {\n    return num === 0 ? 0 : num > 0 ? 1 : -1;\n  }\n\n  static floatValue(str: string): number {\n    return parseFloat(str);\n  }\n\n  static lessThan(a: any, b: any): boolean {\n    if (moment.isMoment(a) && moment.isMoment(b)) {\n      return (a as moment.Moment).isBefore(b);\n    }\n\n    return a < b;\n  }\n}\n","//import { BaseComponent } from '../base/base.component';\nimport { KeyUtils } from '../base/key-utils';\n\nexport class ClientEvent {\n    private _parameters: Map<string, any> = new Map<string, any>();\n    private _attributes: Map<string, any> = new Map<string, any>();\n    private _returnValue: any;\n    private _returnValueSet: any;\n\n    constructor(private _source: any, private _event: Event) {\n\n    }\n\n    getSource(): any {\n      return this._source;\n    }\n\n    getEvent(): Event {\n      return this._event;\n    }\n\n    setParameter(paramName: string, value: any) {\n      this._parameters.set(KeyUtils.toMapKey(paramName), value);\n    }\n\n    getParameter(paramName: string): any {\n      return this._parameters.get(KeyUtils.toMapKey(paramName));\n    }\n\n    setAttribute(attributeName: string, value: any) {\n      this._attributes.set(KeyUtils.toMapKey(attributeName), value);\n    }\n\n    getAttribute(attributeName: string): any {\n      return this._attributes.get(KeyUtils.toMapKey(attributeName));\n    }\n\n    stopPropagation() {\n      if (this._event != null) {\n        this._event.stopPropagation();\n      }\n    }\n\n    preventDefault() {\n      if (this._event != null) {\n        this._event.preventDefault();\n      }\n    }\n\n    setReturnValue(value: any){\n      this._returnValue = value;\n\n      this._returnValueSet = true;\n    }\n\n    getReturnValue(): any {\n      return this._returnValue;\n    }\n\n    isReturnValueSet(): boolean {\n      //can't check for returnValue is null b/c it can be set to null\n      return this._returnValueSet === true ? true : false;\n    }\n}","import { Iterator } from './iterator';\n\nexport class ListIterator<E = any> implements Iterator<E>{\n    private currentIndex: number = 0;\n\n    constructor(private data: Array<E>) {\n    }\n\n    hasNext(): boolean {\n        return this.data != null && this.data.length > this.currentIndex;\n    }\n\n    next<T extends E>(): E {\n        if (this.currentIndex < this.data.length) {\n            return this.data[this.currentIndex++];\n        }\n\n        throw new Error('No such element');\n    }\n}","import { Iterator } from './iterator';\nimport { ListIterator } from './list-iterator';\nimport { Iterable } from './iterable';\nimport * as _ from 'lodash';\n\n//emulvate Java vector (somewhat)\nexport class Vector<E = any> implements Iterable {\n  private data: Array<E> = [];\n\n  constructor(size?: number | Array<E>) {\n    if (Array.isArray(size)) {\n      this.data = size;\n    }\n  }\n\n  toArray(): Array<E> {\n    return this.data;\n  }\n\n  setData(data: Array<E>) {\n    this.data = data;\n  }\n\n  size(): number {\n    return this.data == null ? 0 : this.data.length;\n  }\n\n  get<T extends E> (idx: number): T {\n    if (this.size() > idx) {\n      return this.data[idx] as T;\n    }\n\n    return null;\n  }\n\n  add(element: E, insertionIndex: number = -1): number {\n    if (insertionIndex === -1) {\n      return this.data.push(element);\n    } else {\n      this.data.splice(insertionIndex, 0, element);\n      return insertionIndex;\n    }\n  }\n\n  delete(idx: number): void {\n    if (this.get(idx)) {\n      this.data.splice(idx, 1);\n    }\n  }\n\n  addElement(element: E): number {\n    return this.add(element);\n  }\n\n  addAll(vec: Vector<E>) {\n    let it: Iterator<E> = vec.iterator();\n    while(it.hasNext()) {\n      this.add(it.next());\n    }\n  }\n\n  firstElement(): E {\n    return this.data != null && this.data.length > 0 ? this.data[0] : null;\n  }\n\n  lastElement(): E {\n    return this.data != null && this.data.length > 0 ? this.data[this.data.length - 1] : null;\n  }\n\n  contains(element: E): boolean {\n    return this.data != null && this.data.indexOf(element) >= 0 ? true: false;\n  }\n\n  elementAt(idx: number): E {\n    return this.get(idx);\n  }\n\n  isEmpty(): boolean {\n    return this.data == null || this.data.length === 0;\n  }\n\n  iterator(): Iterator<E> {\n    return new ListIterator<E>(_.clone(this.data));\n  }\n}\n","import { BaseComponent } from \"./base.component\";\n\nexport class AttributeChangeEvent {\n    constructor(\n        private name: string,\n        private oldValue: any,\n        private newValue: any,\n        private sourceElement: BaseComponent\n    ) {}\n\n    getName(): string {\n        return this.name;\n    }\n\n    getOldValue(): any {\n        return this.oldValue;\n    }\n\n    getNewValue(): any {\n        return this.newValue;\n    }\n\n    getSourceElement(): BaseComponent {\n        return this.sourceElement;\n    }\n    \n}","import { AttributeNameValue } from \"./attribute-name-value\";\nimport { ClientEvent } from \"../event-handler/client-event\";\nimport { BaseComponent } from \"./base.component\";\n\n// @dynamic\nexport class AppUtils {\n    static readonly domParser = new DOMParser();\n\n    /** ã¯ã©ã¹å±æ§å¤æç¨ããã */\n    static _classOverrideMap: Map<any, any> = new Map();\n    static attributeOverrideClassInitializer: () => void  = null;\n    static attributeOverrideClass: (value: string) => Array<AttributeNameValue> = null;\n    /** ããªãã¼ãå±æ§å¤æç¨ããã */\n    static _validateOverrideMap: Map<any, any> = new Map();\n    static attributeOverrideValidateInitializer: () => void  = null;\n    static attributeOverrideValidate: (value: string) => Array<AttributeNameValue> = null;\n\n    static customizeClientEvent: (source: any, clientEvent: ClientEvent) => void = null;\n    static validateField: (source: BaseComponent) => boolean = null;\n    static parseDom(str: string) {\n        return this.domParser.parseFromString(str, \"application/xml\").firstElementChild;\n    }\n    /**\n     * Validate HTML attribute to see if they should be pass to the server. This is needed\n     * because Nexaweb framework allow passing of custom attributes\n     */\n    static validateAttribute: (attributeName: string) => boolean = null;\n    static setCustomAttribute: (json: { [name: string]: string }, el: Element) => void;\n    static enableLogging: boolean = true;\n    static maxFindElementCache: number = 500;\n    static isCloseBtn: boolean = false;\n\n    /** attributeOverrideInitializer */\n    static attributeOverrideInitializer(): void {\n        this.attributeOverrideClassInitializer();\n        this.attributeOverrideValidateInitializer();\n    }\n}\n","export class HashMap<K, V> implements Map<K, V> {\n    private _internalMap: Map<K, V> = new Map<K, V>();\n\n    constructor() {\n\n    }\n\n    get size(): number {\n        return this._internalMap.size;\n    }\n\n    put(key: K, value: V) {\n        this._internalMap.set(key, value);\n    }\n\n    get(key: K): V {\n        return this._internalMap.get(key);\n    }\n\n    set(key: K, value: V) {\n        this._internalMap.set(key, value);\n        return this;\n    }\n\n    delete(key: K): boolean {\n        return this._internalMap.delete(key);\n    }\n\n    remove(key: K): void {\n        this.delete(key);\n    }\n\n    clear() {\n        return this._internalMap.clear();\n    }\n\n    entries() {\n        return this._internalMap.entries();\n    }\n\n    forEach(cb: (value: V, key: K, map: Map<K, V>)=>void, thisArg: any) {\n        return this._internalMap.forEach(cb, thisArg);\n    }\n\n    has(key: K) {\n        return this._internalMap.has(key);\n    }\n\n    keys() {\n        return this._internalMap.keys();\n    }\n\n    values() {\n        return this._internalMap.values();\n    }\n\n    toJson(): {[name: string]: any} {\n      const json = {};\n      const keys = this.keys();\n      let key = keys.next();\n\n      while(key.done !== true) {\n        json[key.value as any] = this.get(key.value);\n        key = keys.next();\n      }\n\n      return json;\n    }\n\n    get [Symbol.iterator]() {\n        return this._internalMap[Symbol.iterator];\n    }\n\n    get [Symbol.toStringTag]() {\n        return this._internalMap[Symbol.toStringTag];\n    }\n}\n","import { HashMap } from \"./hash-map\";\n\nexport class Hashtable<K, V> extends HashMap<K, V> {\n    constructor() {\n        super();\n    }\n}","import { AppUtils } from \"./app-utils\";\n\nexport class Logger {\n    static warn(e: any) {\n        if (AppUtils.enableLogging === true) {\n            console.warn(e);\n        }\n    }\n\n    static log(e: any) {\n        if (AppUtils.enableLogging === true) {\n            console.log(e);\n        }\n    }\n\n    static info(e: any) {\n        if (AppUtils.enableLogging === true) {\n            console.info(e);\n        }\n    }\n\n    static error(e: any) {\n        if (AppUtils.enableLogging === true) {\n            console.error(e);\n        }\n    }\n\n    static debug(e: any) {\n        if (AppUtils.enableLogging === true) {\n            console.debug(e);\n        }\n    }\n}","import { Component, Optional, SkipSelf, AfterViewInit, Input, OnDestroy, ElementRef, OnInit, ChangeDetectorRef, ComponentRef, Output, EventEmitter, Renderer2 } from \"@angular/core\";\n\nimport * as _ from 'lodash';\nimport { SessionService } from \"../session/session.service\";\nimport { KeyUtils } from \"./key-utils\";\nimport { AttributesEnum } from \"./attributes.enum\";\nimport { JavaUtils } from \"../java/java-utils\";\nimport { ClientEvent } from \"../event-handler/client-event\";\nimport { BorderPosition } from \"./style-literals\";\nimport { Vector } from \"../java/vector\";\nimport { AttributeChangeListener } from \"./attribute-change-listener\";\nimport { AttributeChangeEvent } from \"./attribute-change-event\";\nimport { AppUtils } from \"./app-utils\";\nimport { Hashtable } from \"../java/hashtable\";\nimport { HashMap } from \"../java/hash-map\";\nimport { ViewComponent } from \"../view/view.component\";\nimport { Logger } from \"./logger\";\nimport { HTMLElementWrapper } from \"../tree-table/html-element-wrapper\";\nimport { AttributeNameValue } from \"./attribute-name-value\";\nimport { TrustedStyleString } from \"@angular/core/src/sanitization/bypass\";\nimport { TabComponent } from \"../tab-pane/tab/tab.component\";\nimport { TabPaneComponent } from \"../tab-pane/tab-pane.component\";\n\n/**\n * Main class that all core components should inherit.\n */\n@Component({\n  selector: 'vt-base',\n  template: 'nothing here'\n})\nexport class BaseComponent implements AfterViewInit, OnDestroy, OnInit {\n  @Input() autoWrap: boolean;\n  @Input() borderPosition: BorderPosition;\n  @Input() id: string;\n  @Input() disabled: boolean = false;\n  @Input() sort: string = \"\";\n  @Input() visible: boolean = true;\n  @Input() text: string = \"\";\n  @Input() set cssClass(css: string) {\n    this._cssClass = this.cleanCss(css);\n    this.initBorderLayout();\n  }\n\n  @Input() controlWidth: string;\n  @Input() controlHeight: string;\n  @Input() maxHeight: string;\n  @Input() lineHeight: string;\n  @Input() marginRight: string;\n  @Input() marginLeft: string;\n  @Input() marginTop: string;\n  @Input() marginBottom: string;\n  @Input() controlMargin: string;\n  @Input() controlPadding: string;\n  @Input() controlOverflow: string;\n  @Input() panelWidth: string;\n  @Input() panelMinWidth: string;\n  @Input() panelMinHeight: string;\n  @Input() controlFloat: string;\n  @Input() required: boolean = false;\n  @Input() pattern: string;\n  @Input() min: number | string;\n  @Input() max: number | string;\n  @Input() minLength: number | string;\n  @Input() maxLength: number | string;\n  @Input() inputLocale: string;\n  @Input() inputCharsets: string;\n  @Input() focusOnActivation: boolean;\n  @Input() focused: boolean;\n  @Input() orderIndex: number = -1;\n  @Input() x: string;\n  @Input() y: string;\n  @Input() set require(req: boolean) {\n    this.required = req;\n  }\n  @Input() controlWidthComboBox: string;\n\n  /**\n   * Accessor for [[required]] property\n   */\n  get require(): boolean {\n    return this.required;\n  }\n\n  /* istanbul ignore next */\n  //add to prevent confusion\n  @Input() class(css: string) {\n    this.cssClass = css;\n  }\n\n  /**\n   * Accessor for [[cssClass]] property\n   */\n  get cssClass(): string {\n    return this._cssClass;\n  }\n\n  //TODO need to figure out what these do\n  @Input() hGrabSpace: boolean;\n  @Input() vGrabSpace: boolean;\n\n  @Input() bgColor: string;\n\n  //use by <defs ....>\n  //e.g. <vt-combo-box id=\"foo\" editor=\"#fooBar\" ...>\n  @Input() editor: string;\n\n  //popup menu id that should pop when this comp is right click (if there is any)\n  @Input() popup: string;\n\n  /**\n   * Align horizontally? TODO need is a major regression test\n   */\n  @Input() alignHorizontal: string;\n\n  private _cssClass: string;\n\n  /* istanbul ignore next */\n  compRef: ComponentRef<any>;\n\n  /* istanbul ignore next */\n  private _tempFreezeCd: boolean;\n\n  //alias for disabled\n  @Input() set enabled(boo: boolean) {\n    if (typeof boo === 'string') {\n      //if enabled is false, disabled is true\n      this.disabled = boo === 'true' ? false : true;\n    } else {\n      this.disabled = !boo;\n    }\n  }\n\n  get enabled(): boolean {\n    return !this.disabled;\n  }\n\n  @Input() set sortValue(value: string) {\n    this.sort = value\n  }\n\n  get sortValue(): string {\n    return this.sort;\n  }\n\n  //looks like Nexaweb support custom attributes key/value\n  @Input() customAttributes: { [name: string]: any };\n\n  //font\n  @Input() fontBold: boolean | string;\n  @Input() fontColor: string;\n  @Input() fontItalic: boolean | string;\n  @Input() fontSize: number;\n  @Input() fontUnderline: boolean | string;\n  @Input() fontColorDisabled: string;\n  @Input() opacity: string;\n\n  //border\n  @Input() borderColor: string;\n  @Input() borderWidth: number | string;\n  @Input() borderStyle: string;\n  @Input() borderHeight: number | string;\n\n  //skip emiting context menu event\n  @Input() skipEmitContextMenuEvent: boolean;\n\n  /* istanbul ignore next */\n  @Output() onContextMenu: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n  @Output() onActiveLost: EventEmitter<void> = new EventEmitter<void>();\n  @Output() onBeforeActiveLost: EventEmitter<void> = new EventEmitter<void>();\n\n  styles: { [name: string]: string } = {};\n\n  //for table use\n  tableRowNo: number;\n\n  /* istanbul ignore next */\n  private _uniqueId: string;\n\n  /* istanbul ignore next */\n  /**\n   * This is for use when setAttribute(onCommand is set)\n   */\n  protected _internalOnCommand: (param?: any) => void;\n  protected _internalOnActiveLost: (param?: any) => void;\n\n  //internal use only, do not use externally\n  _internalChangeCb: (comp: BaseComponent) => void;\n\n  get uniqueId(): string {\n    return this._uniqueId;\n  }\n\n  protected _children: Map<string, BaseComponent> = null;\n\n  /* istanbul ignore next */\n  protected _childrenIndex: Array<string> = null;\n\n  get children(): Map<string, BaseComponent> {\n    return this._children;\n  }\n\n  /* istanbul ignore next */\n  private attributeChangeListeners: Array<AttributeChangeListener>;\n\n  private radioButtonGroups: Map<string, Array<BaseComponent>>;\n\n  highlightBgColor: string;\n  highlightFontColor: string;\n\n  parentTableRow: any;\n\n  //cache reduceChildrenIterative\n  // private _reduceChildrenIterativeCache: Array<BaseComponent>;\n\n  //track all children for the view\n  protected _viewChildrenMap: Map<string, BaseComponent>;\n\n  //for TabComponent\n  protected tabChildrenIds: Array<string>;\n\n  private scrollPanes: Array<BaseComponent>;\n\n  _isDying: boolean;\n\n  /**\n   * Constructor where it required minimal injection in order for this class to function properly. Subclass can overload this constructor\n   * but it must provided the minimal required items to be injected.\n   *\n   * @param parent The component where this component will be used. This injection is provided by Angular if the parent component \"provide\" itself.\n   * @param sessionService SessionService needed by this class, this should be injected by Angular.\n   * @param elementRef the element reference that wrap the element (tag) of this component.\n   * @param renderer The renderer (injected by Angular) that we used to perform DOM manipulation.\n   */\n  constructor(@Optional() @SkipSelf() protected parent: BaseComponent, private sessionService: SessionService, protected elementRef: ElementRef, protected renderer: Renderer2) {\n    this._uniqueId = BaseComponent.generateUniqueId();\n\n    //initial id\n    this.id = this._uniqueId;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Got call when this component finished initializing, if you override this, make sure to call super.ngAfterViewInit()\n   */\n  ngAfterViewInit() {\n    if (this.parent != null) {\n      this.parent.addChild(this);\n    }\n\n    this._childrenIndex = _.uniq(this._childrenIndex);\n\n    //commnet out, causing regression b/c the css selector need id of parent window\n    // if (this.renderer != null && typeof this.renderer[\"removeAttribute\"] === \"function\") {\n    //   this.renderer.removeAttribute(this.elementRef.nativeElement, \"id\");\n    // }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Init life cycle of this class, if you override this, make sure to call super.ngOnInit()\n   */\n  ngOnInit() {\n    this.initBorderLayout();\n\n    if (this.fontBold === true || this.fontBold === \"true\") {\n      this.setFontBold(true);\n    }\n\n    if (this.fontItalic === true || this.fontItalic === \"true\") {\n      this.styles[\"font-style\"] = \"italic\";\n      this.setFontItalic(true);\n    }\n\n    if (this.fontSize != null) {\n      this.setFontSize(this.fontSize);\n    }\n\n    if (this.fontUnderline === true || this.fontUnderline === \"true\") {\n      this.setFontUnderline(true);\n    }\n\n    if (this.fontColor != null) {\n      this.setColor(this.fontColor);\n    }\n\n    if (this.autoWrap === true) {\n      this.styles[\"white-space\"] = \"normal\";\n      this.markForCheck();\n    } else if (this.autoWrap === false) {\n      this.styles[\"white-space\"] = \"nowrap\";\n      this.markForCheck();\n    }\n\n    this.checkNxStyling();\n  }\n\n  /* istanbul ignore next */\n  private checkNxStyling(skipAttributeOverride: boolean = false) {\n    if (skipAttributeOverride !== true && this._cssClass != null && this._cssClass.length > 0 && typeof AppUtils.attributeOverrideClass === \"function\") {\n      let newAttributes = AppUtils.attributeOverrideClass(this._cssClass);\n\n      if (newAttributes != null) {\n        // class ã«é¢ãã¦ã¯ãæ¢å­ã®æå®ã¨ãã¼ã¸\n        const newCssClass = _.filter(newAttributes, (attr: AttributeNameValue) => attr.attributeName === AttributesEnum.CLASS).map((attr: AttributeNameValue) => attr.value).join(\" \");\n        newAttributes = _.filter(newAttributes, (attr: AttributeNameValue) => attr.attributeName !== AttributesEnum.CLASS);\n        \n        newAttributes.push({\n          attributeName: AttributesEnum.CLASS,\n          value: (this._cssClass + \" \" + newCssClass).trim(),\n        });\n\n        this.setAttributes(newAttributes, true);\n      }\n    }\n\n    if (this.elementRef != null) {\n      const _validate = this.elementRef.nativeElement.getAttribute(\"validate\");\n\n      if (skipAttributeOverride !== true && _validate != null && _validate.length > 0) {\n        let newAttributes = AppUtils.attributeOverrideValidate(_validate);\n\n        if (newAttributes != null) {\n          // class ã«é¢ãã¦ã¯ãæ¢å­ã®æå®ã¨ãã¼ã¸\n          const newCssClass = _.filter(newAttributes, (attr: AttributeNameValue) => attr.attributeName === AttributesEnum.CLASS).map((attr: AttributeNameValue) => attr.value).join(\" \");\n          newAttributes = _.filter(newAttributes, (attr: AttributeNameValue) => attr.attributeName !== AttributesEnum.CLASS);\n          \n          newAttributes.push({\n            attributeName: AttributesEnum.CLASS,\n            value: (this._cssClass + \" \" + newCssClass).trim(),\n          });\n\n          this.setAttributes(newAttributes, true);\n        }\n      }\n    }\n  }\n\n  /**\n   * Sets border CSS based on borderPosition value (top | left | bottom | right)\n   */\n  private initBorderLayout() {\n    if (this.borderPosition != null && this.borderPosition != '') {\n      if (this._cssClass != null) {\n        this._cssClass = this._cssClass + ' border-' + this.borderPosition;\n      } else {\n        this._cssClass = 'border-' + this.borderPosition;\n      }\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Destroy lifecycle. Clear component references and cache\n   */\n  ngOnDestroy() {\n    this.cleanup();\n    this._isDying = true;\n\n    const parentView = this.getParentView();\n\n    if (parentView != null) {\n      //remove ourself from the view children map\n      if (parentView._viewChildrenMap != null) {\n        parentView._viewChildrenMap.delete(KeyUtils.toMapKey(this.getId()));\n      }\n    }\n\n    this._internalChangeCb = null;\n\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n\n    if (this._viewChildrenMap != null) {\n      this._viewChildrenMap.clear();\n    }\n\n    if (this._children !== null) {\n      this._children.clear();\n    }\n\n    this._childrenIndex = null;\n    this._viewChildrenMap = null;\n    this.parent = null;\n    this.sessionService = null;\n    this.attributeChangeListeners = null;\n    this.radioButtonGroups = null;\n    this.elementRef = null;\n    this.scrollPanes = null;\n  }\n\n  protected cleanup() {\n\n  }\n\n  /**\n   * Get [[SessionService]] instance injected via constructor\n   * @returns SessionService instance\n   */\n  getSession(): SessionService {\n    return this.sessionService;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get child component by id\n   * @param id Component ID\n   * @returns Child [[BaseComponent]]\n   */\n  getChild(id: string) {\n    if (this._children !== null) {\n      return this._children.get(KeyUtils.toMapKey(id));\n    } else {\n      return null;\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set [[disabled]] property value\n   * @param boo Value for disabled property\n   */\n  setDisabled(boo: boolean) {\n    this.disabled = boo;\n    this.markForCheck();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set [[visible]] property value\n   * @param boo Value for visible property\n   */\n  setVisible(boo: boolean) {\n    this.visible = boo;\n    this.markForCheck();\n  }\n\n  setScrollPosVertical(expression) {\n    //TODO\n  }\n\n  /**\n   * Set color of text on the component\n   * @param value Color string. Should be hexadecimal or color name supported by CSS\n   */\n  setFontColor(value) {\n    this.setColor(value);\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Value of [[disabled]] property\n   * @returns Value of disabled\n   */\n  getDisabled(): boolean {\n    return this.disabled;\n  }\n\n  /**\n   * Value of opposite of [[disabled]] value\n   * @returns Value of enabled\n   */\n  getEnabled(): boolean {\n    return !this.getDisabled();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Value of soColumnNo attribute\n   * @returns Column number\n   */\n  getSoColumnNo(): string {\n    return this.getAttribute(\"soColumnNo\");\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get the component ref string value from [[editor]] property\n   * @returns Ref of component\n   */\n  getEditor(): string {\n    return this.editor;\n  }\n\n  /**\n   * Value of soRequire attribute\n   * @returns soRequire value\n   */\n  getSoRequire(): string {\n    return this.getAttribute(\"soRequire\");\n  }\n\n  /**\n   * Value of soValidate attribute\n   * @returns soValidate value\n   */\n  getSoValidate(): string {\n    return this.getAttribute(\"soValidate\");\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Value of soType attribute\n   * @returns soType value\n   */\n  getSoType(): string {\n    return this.getAttribute(\"soType\");\n  }\n\n  /**\n   * Value of soFormat attribute\n   * @returns soFormat value\n   */\n  getSoFormat(): string {\n    return this.getAttribute(\"soFormat\");\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Value of soMin attribute\n   * @returns soMin value\n   */\n  getSoMin(): string {\n    return this.getAttribute(\"soMin\");\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Value of soMax attribute\n   * @returns soMax value\n   */\n  getSoMax(): string {\n    return this.getAttribute(\"soMax\");\n  }\n\n  /**\n   * Value of soMaxLength attribute\n   * @returns soMaxLength value\n   */\n  getSoMaxLength(): string {\n    return this.getAttribute(\"soMaxLength\");\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Value of soPattern attribute\n   * @returns soPattern value\n   */\n  getSoPattern(): string {\n    return this.getAttribute(\"soPattern\");\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Value of soMaxByteLen attribute\n   * @returns soMaxByteLen value\n   */\n  getSoMaxByteLen(): string {\n    return this.getAttribute(\"soMaxByteLen\");\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set [[disabled]] property to opposite of input\n   * @param boo Value of enabled\n   */\n  setEnabled(boo: boolean | string) {\n    if (typeof boo === 'string') {\n      boo = boo === 'true' ? true : false;\n    }\n    this.setDisabled(!boo);\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set value of [[sort]] property\n   * @param value Sort value to set\n   */\n  setSortValue(value: string) {\n    this.sort = value\n  }\n\n  /**\n   * Get value of [[visible]] property\n   * @returns Visble property value\n   */\n  getVisible(): boolean {\n    return this.visible;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Sets value of text attribute and marks component for change detection\n   * @param value Text to set. If it's a null value, it will be converted to an empty string\n   * If it's a number or non-string, it will be converted to a string representation of the value.\n   */\n  setText(value: string | number): void {\n    if (typeof value === 'string') {\n      this.text = value;\n    } else if (value == null) {\n      this.text = '';\n    } else {\n      this.text = value + '';\n    }\n    this.markForCheck();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set callback function for [[onCommand]]\n   * @param fn Function to be invoked for [[onCommand]] event\n   */\n  setOnCommand(fn: () => void): void {\n    this._internalOnCommand = fn;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set callback function for [[onActiveLost]]\n   * @param fn Function to be invoked for [[onActiveLost]] event\n   */\n  setOnActiveLost(fn: () => void): void {\n    this._internalOnActiveLost = fn;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set all attributes in one go\n   *\n   * @param attrs\n   * @param skipAttributeOverride Set to 'true' if you do not want custom attribute to override exisiting HTML attribute\n   */\n  setAttributes(attrs: Array<AttributeNameValue>, skipAttributeOverride: boolean = false) {\n    this._tempFreezeCd = true;\n\n    for (const attr of attrs) {\n      this.setAttribute(attr.attributeName, attr.value, skipAttributeOverride);\n    }\n\n    this._tempFreezeCd = false;\n    this.markForCheck();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set HTML attribute value on component\n   * @param attribute HTML attribute to set\n   * @param value Value of attribute\n   * @param skipAttributeOverride Set to 'true' if you do not want custom attribute to override exisiting HTML attribute\n   */\n  setAttribute(attribute: AttributesEnum | string, value: any, skipAttributeOverride: boolean = false) {\n    if (typeof attribute === 'string') {\n      const originalAttributeName = attribute;\n      attribute = attribute.toLowerCase();\n\n      if (attribute === \"id\") {\n        this.setAttribute(AttributesEnum.ID, value);\n      } else if (attribute === 'visible') {\n        this.setAttribute(AttributesEnum.VISIBLE, value);\n      } else if (attribute === \"class\") {\n        this.setAttribute(AttributesEnum.CLASS, value);\n      } else if (attribute === 'enabled') {\n        this.setAttribute(AttributesEnum.ENABLED, value);\n      } else if (attribute === 'disabled') {\n        this.setAttribute(AttributesEnum.DISABLED, value);\n      } else if (attribute === 'text') {\n        this.setAttribute(AttributesEnum.TEXT, value);\n      } else if (attribute === 'color') {\n        this.setAttribute(AttributesEnum.COLOR, value);\n      } else if (attribute === \"title\") {\n        this.setAttribute(AttributesEnum.TITLE, value);\n      } else if (attribute === \"require\") {\n        this.setAttribute(AttributesEnum.REQUIRE, value);\n      } else if (attribute === \"fontBold\" || attribute === \"fontbold\") {\n        this.setAttribute(AttributesEnum.FONT_BOLD, value);\n      } else if (attribute === \"selected\") {\n        this.setAttribute(AttributesEnum.SELECTED, value);\n      } else if (attribute === \"bgcolor\") {\n        this.setAttribute(AttributesEnum.BG_COLOR, value);\n      } else if (attribute === \"value\") {\n        this.setAttribute(AttributesEnum.VALUE, value);\n      } else if (attribute === \"maxlength\" || attribute === \"max_length\") {\n        this.setAttribute(AttributesEnum.MAX_LENGTH, value);\n      } else if (attribute === \"require\" || attribute === \"required\") {\n        this.setRequire(value);\n      } else if (attribute === \"width\") {\n        this.setControlWidth(value);\n      } else if (attribute === \"height\") {\n        this.setControlHeight(value);\n      } else if (attribute === \"fontSize\" || attribute === \"fontsize\") {\n        this.setFontSize(value);\n      } else if (attribute === \"oncommand\") {\n        this.setOnCommand(value);\n      } else if (attribute === \"onactivelost\") {\n        this.setOnActiveLost(value);\n      } else if (attribute === \"pattern\") {\n        this.setAttribute(AttributesEnum.PATTERN, value);\n      } else if (attribute === \"max\") {\n        this.setAttribute(AttributesEnum.MAX, value);\n      } else if (attribute === \"min\") {\n        this.setAttribute(AttributesEnum.MIN, value);\n      } else if (JavaUtils.isNumber(originalAttributeName) === true) {\n        this.setAttribute(_.parseInt(originalAttributeName), value);\n      } else {\n        this.setCustomAttribute(originalAttributeName, value);\n        // Logger.warn(`Unknown attribute: ${attribute}, setting as custom attribute`);\n\n        if (attribute === \"validate\" && skipAttributeOverride !== true && value != null && value.length > 0) {\n          let newAttributes = AppUtils.attributeOverrideValidate(value);\n\n          if (newAttributes != null) {\n            // class ã«é¢ãã¦ã¯ãæ¢å­ã®æå®ã¨ãã¼ã¸\n            const newCssClass = _.filter(newAttributes, (attr: AttributeNameValue) => attr.attributeName === AttributesEnum.CLASS).map((attr: AttributeNameValue) => attr.value).join(\" \");\n            newAttributes = _.filter(newAttributes, (attr: AttributeNameValue) => attr.attributeName !== AttributesEnum.CLASS);\n            \n            newAttributes.push({\n              attributeName: AttributesEnum.CLASS,\n              value: (this._cssClass + \" \" + newCssClass).trim(),\n            });\n    \n            this.setAttributes(newAttributes, true);\n          }\n        }\n      }\n\n      this.fireSetAttributeEvent(originalAttributeName, value);\n    } else {\n      if (attribute === AttributesEnum.CLASS && skipAttributeOverride !== true && value != null && value.length > 0 && typeof AppUtils.attributeOverrideClass === \"function\") {\n        let newAttributes = AppUtils.attributeOverrideClass(value);\n\n        if (newAttributes != null) {\n          // class ã«é¢ãã¦ã¯ãæ¢å­ã®æå®ã¨ãã¼ã¸\n          const newCssClass = _.filter(newAttributes, (attr: AttributeNameValue) => attr.attributeName === AttributesEnum.CLASS).map((attr: AttributeNameValue) => attr.value).join(\" \");\n          newAttributes = _.filter(newAttributes, (attr: AttributeNameValue) => attr.attributeName !== AttributesEnum.CLASS);\n          \n          newAttributes.push({\n            attributeName: AttributesEnum.CLASS,\n            value: (this._cssClass + \" \" + newCssClass).trim(),\n          });\n  \n          this.setAttributes(newAttributes, true);\n        }\n      }\n\n      if (attribute === AttributesEnum.ID) {\n        this.setId(value);\n      } else if (attribute === AttributesEnum.VISIBLE) {\n        if (value != null && value !== \"\") {\n          this.setVisible(JavaUtils.parseBoolean(value));\n        }\n      } else if (attribute === AttributesEnum.CLASS) {\n        this.setCssClass(value, skipAttributeOverride);\n      } else if (attribute === AttributesEnum.DISABLED) {\n        if (value != null && value !== \"\") {\n          this.setDisabled(JavaUtils.parseBoolean(value));\n        }\n      } else if (attribute === AttributesEnum.ENABLED) {\n        if (value != null && value !== \"\") {\n          this.setDisabled(!JavaUtils.parseBoolean(value));\n        }\n      } else if (attribute === AttributesEnum.TEXT) {\n        this.setText(value);\n      } else if (attribute === AttributesEnum.COLOR) {\n        this.setColor(value);\n      } else if (attribute === AttributesEnum.FONT_BOLD) {\n        this.setFontBold(value);\n      } else if (attribute === AttributesEnum.ON_COMMAND) {\n        this.setOnCommand(value);\n      } else if (attribute === AttributesEnum.REQUIRE) {\n        this.setRequire(value);\n      } else if (attribute === AttributesEnum.TITLE) {\n        this.setTitle(value);\n      } else if (attribute === AttributesEnum.SELECTED) {\n        this.setSelected(value);\n      } else if (attribute === AttributesEnum.BG_COLOR) {\n        this.setBgColor(value);\n      } else if (attribute === AttributesEnum.VALUE) {\n        this.setValue(value);\n      } else if (attribute === AttributesEnum.MAX_LENGTH) {\n        this.setMaxLength(value);\n      } else if (attribute === AttributesEnum.MAX) {\n        this.setMax(value);\n      } else if (attribute === AttributesEnum.MIN) {\n        this.setMin(value);\n      } else if (attribute === AttributesEnum.PATTERN) {\n        this.setPattern(value);\n      } else {\n        Logger.warn('Unable to set attribute, unknown attribute id: ' + attribute);\n      }\n\n      this.markForCheck();\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get value of HTML attribute\n   * @param attribute Name of HTML attribute to get\n   * @returns Value of attribute\n   */\n  getAttribute(attribute: string | AttributesEnum, skipQueryDOMIfNotExists: boolean = false): any {\n    if (typeof attribute === 'string') {\n      const attributeLower = attribute.toLowerCase();\n      if (attributeLower === 'visible') {\n        return this.getVisible() + '';\n      } else if (attributeLower === 'enabled') {\n        return this.getEnabled() + '';\n      } else if (attributeLower === 'disabled') {\n        return this.getDisabled() + '';\n      } else if (attributeLower === 'text') {\n        return this.getText();\n      } else if (attributeLower === 'color') {\n        return this.getColor();\n      } else if (attributeLower === 'require') {\n        return this.getRequired() + '';\n      } else if (attributeLower === \"value\") {\n        return this.getValue();\n      } else if (attributeLower === \"selected\") {\n        return this.getChecked() + '';\n      } else if (attributeLower === \"id\") {\n        return this.getId();\n      } else if (attributeLower === \"pattern\") {\n        return this.getPattern();\n      } else if (attributeLower === \"min\") {\n        return this.getMin();\n      } else if (attributeLower === \"max\") {\n        return this.getMax();\n      } else if (attributeLower === \"max_length\") {\n        return this.getMaxLength();\n      } else if (this.customAttributes != null && this.customAttributes[attribute] !== undefined) {\n        return this.getCustomAttribute(attribute);\n      } else if (attribute === \"isLockedColumn\") {\n        return false;\n      } else if (skipQueryDOMIfNotExists !== true) {\n        Logger.warn(`Attribute ${attribute} does not exists, trying to get from DOM`);\n        if (this.elementRef != null) {\n          return this.elementRef.nativeElement.getAttribute(attribute)\n        }\n      } else {\n        return undefined;\n      }\n    } else if (attribute === AttributesEnum.VISIBLE) {\n      return this.getVisible() + '';\n    } else if (attribute === AttributesEnum.DISABLED) {\n      return this.getDisabled() + '';\n    } else if (attribute === AttributesEnum.ENABLED) {\n      return !this.getDisabled() + '';\n    } else if (attribute === AttributesEnum.TEXT) {\n      return this.getText();\n    } else if (attribute === AttributesEnum.COLOR) {\n      return this.getColor();\n    } else if (attribute === AttributesEnum.REQUIRE) {\n      return this.getRequired() + '';\n    } else if (attribute === AttributesEnum.VALUE) {\n      return this.getValue();\n    } else if (attribute === AttributesEnum.SELECTED) {\n      return this.getChecked() + '';\n    } else if (attribute === AttributesEnum.PATTERN) {\n      return this.getPattern();\n    } else if (attribute === AttributesEnum.MIN) {\n      return this.getMin();\n    } else if (attribute === AttributesEnum.MAX) {\n      return this.getMax();\n    } else if (attribute === AttributesEnum.MAX_LENGTH) {\n      return this.getMaxLength();\n    } else {\n      console.error('Unable to get attribute, unknown attribute id: ' + attribute);\n    }\n\n    return undefined;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Focus the HTML element of this component\n   */\n  requestFocus() {\n    if (this.getElement() != null) {\n      this.getElement().focus();\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Focus the native HTML element of the component and mark for change detection\n   */\n  setFocus() {\n    if (this.elementRef != null) {\n      (this.elementRef.nativeElement as HTMLElement).focus();\n      this.markForCheck();\n    }\n  }\n\n  /**\n   * Event handler for when focus is lost. Invokes onActiveLost event handler\n   * @event [[OnActiveLost]]\n   */\n  focusLost() {\n    this.onActiveLost.emit();\n\n    if (typeof this._internalOnActiveLost === 'function') {\n      this._internalOnActiveLost(this);\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Creates a unique id using an optional prefix\n   * @param prefix String to append to beginning of ID\n   * @returns Unique ID\n   */\n  static generateUniqueId(prefix: string = 'base'): string {\n    return prefix + Date.now() + '_' + _.random(1, 1000) + _.random(1, 100);\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Adds child component to this component\n   * @param child Component to add as child\n   */\n  protected addChild(child: BaseComponent) {\n    if (child.id !== this.id) {\n      const childKey = KeyUtils.toMapKey(child.id);\n\n      if (this._children === null) {\n        this._children = new Map<string, BaseComponent>();\n      }\n\n      if (this._childrenIndex === null) {\n        this._childrenIndex = new Array<string>();\n      }\n\n      this._children.set(childKey, child);\n      this._childrenIndex.push(child.id);\n\n      //check to see if we have ViewComponent, if so, register ourself so that\n      //it can be located faster\n      const parentView = this.getParentView();\n\n      if (parentView != null && (child.isFauxElement() || child.isDialog() !== true)) {\n        if (parentView._viewChildrenMap == null) {\n          parentView._viewChildrenMap = new Map<string, BaseComponent>();\n        }\n\n        parentView._viewChildrenMap.set(childKey, child);\n\n        //track ScrollPane for scroll adjustment\n        if (typeof child.isScrollPane === \"function\" && child.isScrollPane() === true) {\n          parentView.registerScrollPane(child);\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the native element of the component if a reference to it is defined\n   * @returns The HTML native element or 'null' if reference is missing\n   */\n  getElement(): HTMLElement {\n    return this.elementRef ? this.elementRef.nativeElement : null;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get the text property value\n   * @returns Text value\n   */\n  getText(): string {\n    return this.text;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set CSS color style attribute and marks for change detection\n   * @param color CSS color string value. Should be hexadecimal or valid CSS color string\n   */\n  setColor(color: string) {\n    if (color == null || color === \"\") {\n      delete this.styles['color'];\n    } else {\n      this.styles['color'] = color;\n    }\n\n    this.markForCheck();\n  }\n\n  /**\n   * Get the color style attribute value\n   * @returns Color string. Hexadecimal or CSS color string\n   */\n  getColor(): string {\n    return this.styles['color'];\n  }\n\n  /**\n   * Set background color CSS style attribute value\n   * @param bgColor Color string value to set. Should be hexadecimal or valid CSS color string.\n   */\n  setBgColor(bgColor: string) {\n    this.bgColor = bgColor;\n    this.styles[\"background\"] = bgColor;\n    this.markForCheck();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Sets font-weight style property to bold\n   * @param boo Switch for turning bold style on/off\n   */\n  setFontBold(boo: boolean | string) {\n    this.fontBold = boo;\n\n    if (boo === true || boo === \"true\") {\n      this.styles[\"font-weight\"] = \"bold\";\n    } else {\n      delete this.styles[\"font-weight\"];\n    }\n\n    this.markForCheck();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Sets CSS style attribute font-style to italic\n   * @param boo Switch for turning italic style on/off\n   */\n  setFontItalic(boo: boolean | string) {\n    this.fontItalic = boo;\n\n    if (boo === true || boo === \"true\") {\n      this.styles[\"font-style\"] = \"italic\";\n    } else {\n      delete this.styles[\"font-style\"];\n    }\n  }\n\n  /**\n   * Sets CSS style attribute font-size\n   * @param size Number of pixels for font-size\n   */\n  setFontSize(size: number) {\n    this.fontSize = size;\n\n    this.styles[\"font-size\"] = size + \"px\";\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Add/remove CSS style attribute text-decoration to underline\n   * @param underline Switch for turning underline style on/off for text\n   */\n  setFontUnderline(underline: boolean | string) {\n    this.fontUnderline = underline;\n\n    if (this.fontUnderline === \"true\" || this.fontUnderline === true) {\n      this.styles[\"text-decoration\"] = \"underline\";\n    } else {\n      delete this.styles[\"text-decoration\"];\n    }\n  }\n\n  /**\n   * Event handler that registers focus event\n   * @param event\n   */\n  handleFocus(event: FocusEvent) {\n    this.registerClientEvent(event);\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler that registers click event\n   * @param event\n   */\n  handleClick(event: MouseEvent) {\n    this.registerClientEvent(event);\n  }\n\n  /**\n   * Event handler that registers keydown event\n   * @param event\n   */\n  handleKeyDown(event: KeyboardEvent) {\n    this.registerClientEvent(event);\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler that registers keyup event\n   * @param event\n   */\n  handleKeyUp(event: KeyboardEvent) {\n    this.registerClientEvent(event);\n  }\n\n  /**\n   * Event handler that registers mousedown event\n   * @param event\n   */\n  handleMouseDown(event: MouseEvent) {\n    this.registerClientEvent(event);\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Gets custom attribute by name if it exists\n   * @param attributeName Name of custom attribute\n   * @returns Custom attribute if it exists, otherwise undefined\n   */\n  getCustomAttribute(attributeName: string): any {\n    if (this.customAttributes != null) {\n      return this.customAttributes[attributeName];\n    }\n\n    return undefined;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set attribute on customAttribute object using name as key\n   * @param name key name of attribute\n   * @param value value to set for key/name\n   */\n  setCustomAttribute(name: string, value: any) {\n    if (this.customAttributes == null) {\n      this.customAttributes = {};\n    }\n\n    if (value != null) {\n      this.customAttributes[name] = value + '';\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Check if custom attribute exists\n   * @param id Key name of attribute\n   * @returns True if custom attribute with name/key exists\n   */\n  hasCustomAttribute(id: string): boolean {\n    return this.customAttributes != null && this.customAttributes[id] != null;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get child component by index\n   * @param idx Index of child component\n   * @returns Child [[BaseComponent]]\n   */\n  getChildAt(idx: number): BaseComponent {\n    if (this._childrenIndex !== null) {\n      if (this._childrenIndex.length > idx) {\n        return this.getChild(this._childrenIndex[idx]);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Get the number of child components\n   * @returns Number of children\n   */\n  getChildCount(): number {\n    if (this._children !== null) {\n      return this._children.size;\n    } else {\n      return 0;\n    }\n  }\n\n  /**\n   * Get index of child component if it exists\n   * @param child Child component\n   */\n  indexOfChild(child: any): number {\n    //TODO\n    console.error(\"indexOfChild is not implemented\");\n    return -1;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Insert child component to children array at location of index\n   * @param idx Index of insert location\n   * @param row\n   */\n  insertChildAt(idx: number, row: any) {\n    //TODO\n    console.error(\"insertChildAt is not implemented\");\n  }\n\n  /* istanbul ignore next */\n  /**\n   * TODO: Add documentation for emitInternalCommand\n   */\n  protected emitInternalOnCommand() {\n    if (typeof this._internalOnCommand === 'function') {\n      this._internalOnCommand(this);\n      return true;\n    } else if (typeof this._internalOnCommand === \"string\") {\n      this.invokeMcoAction(this._internalOnCommand);\n    }\n\n    return false;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Registers event handler for client event\n   * @param event Event to register\n   */\n  protected registerClientEvent(event: Event) {\n    const clientEvent = new ClientEvent(this, event);\n\n    if (AppUtils.customizeClientEvent != null) {\n      AppUtils.customizeClientEvent(this, clientEvent);\n    }\n\n    this.getSession().getEventHandler().setClientEvent(clientEvent);\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get the native HTML element tag name\n   * @returns Name of HTML element tag\n   */\n  getTagName(): string {\n    return this.elementRef != null ? this.elementRef.nativeElement.tagName : '';\n  }\n\n  /**\n   * Get component tag name without vivify core prefix (i.e. \"vt-\")\n   * @returns Tag name\n   */\n  getLocalName(): string {\n    return this.getTagName().toLowerCase().replace(\"vt-\", \"\");\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get the parent component if it exists\n   * @returns Component or null if there is no parent\n   */\n  getParent() {\n    return this.parent;\n  }\n\n  /**\n   * Get value property if it exists, otherwise return 'null'\n   * @returns Value or 'null'\n   */\n  getValue() {\n    if (this[\"value\"]) {\n      return this[\"value\"];\n    }\n\n    return null;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Removes attribute name name\n   * @param attribute Attribute to remove\n   */\n  removeAttribute(attribute: string | AttributesEnum) {\n    if (typeof attribute === 'string') {\n      const attributeLower = attribute.toLowerCase();\n      if (attributeLower === 'visible') {\n        this.removeAttribute(AttributesEnum.VISIBLE);\n      } else if (attributeLower === 'enabled') {\n        this.removeAttribute(AttributesEnum.ENABLED);\n      } else if (attributeLower === 'disabled') {\n        this.removeAttribute(AttributesEnum.DISABLED);\n      } else if (attributeLower === 'text') {\n        this.removeAttribute(AttributesEnum.TEXT);\n      } else if (attributeLower === 'color') {\n        this.removeAttribute(AttributesEnum.COLOR);\n      } else if (attributeLower === 'pattern') {\n        this.removeAttribute(AttributesEnum.PATTERN);\n      } else if (attributeLower === 'max') {\n        this.removeAttribute(AttributesEnum.MAX);\n      } else if (attributeLower === 'maxlength' || attributeLower === 'max_length') {\n        this.removeAttribute(AttributesEnum.MAX_LENGTH);\n      } else if (attributeLower === 'min') {\n        this.removeAttribute(AttributesEnum.MIN);\n      } else if (attributeLower === 'class') {\n        this.removeAttribute(AttributesEnum.CLASS);\n      } else if (attributeLower === 'oncommand' || attributeLower === 'on_command') {\n        this.removeAttribute(AttributesEnum.ON_COMMAND);\n      } else if (attributeLower === 'require') {\n        this.removeAttribute(AttributesEnum.REQUIRE);\n      } else if (attributeLower === 'title') {\n        this.removeAttribute(AttributesEnum.TITLE);\n      } else if (attributeLower === 'fontbold' || attributeLower === 'font_bold') {\n        this.removeAttribute(AttributesEnum.FONT_BOLD);\n      } else if (attributeLower === 'selected') {\n        this.removeAttribute(AttributesEnum.SELECTED);\n      } else if (attributeLower === 'bgColor') {\n        this.removeAttribute(AttributesEnum.BG_COLOR);\n      } else if (attributeLower === 'value') {\n        this.removeAttribute(AttributesEnum.VALUE);\n      } else if (this.customAttributes != null) {\n        delete this.customAttributes[attribute];\n        Logger.warn(`Unknown attribute: ${attribute}, setting as custom attribute`);\n      }\n\n      this.fireRenoveAttributeEvent(attribute);\n    } else if (attribute === AttributesEnum.VISIBLE) {\n      this.setVisible(true);\n    } else if (attribute === AttributesEnum.DISABLED) {\n      this.setDisabled(false);\n    } else if (attribute === AttributesEnum.ENABLED) {\n      this.setEnabled(true);\n    } else if (attribute === AttributesEnum.TEXT) {\n      delete this.text;\n      this.markForCheck();\n    } else if (attribute === AttributesEnum.COLOR) {\n      this.setColor(\"\");\n    } else if (attribute === AttributesEnum.ON_COMMAND) {\n      delete this._internalOnCommand;\n    } else if (attribute === AttributesEnum.PATTERN) {\n      this.setPattern(undefined);\n    } else if (attribute === AttributesEnum.MAX) {\n      this.setMax(undefined);\n    } else if (attribute === AttributesEnum.MAX_LENGTH) {\n      this.setMaxLength(undefined);\n    } else if (attribute === AttributesEnum.MIN) {\n      this.setMin(undefined);\n    } else {\n      Logger.warn('Unable to set attribute, unknown attribute id: ' + attribute);\n    }\n  }\n\n  /**\n   * Alias of [[setRequired]]\n   * @param boo\n   */\n  setRequire(boo: boolean | string) {\n    this.setRequired(boo);\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set [[required]] to true or false\n   * @param boo\n   */\n  setRequired(boo: boolean | string) {\n    if (boo === 'true' || boo === true) {\n      this.required = true;\n    }\n    else {\n      this.required = false;\n    }\n    this.markForCheck();\n  }\n\n  /**\n   * Set [[pattern]] value\n   * @param pattern\n   */\n  setPattern(pattern: string) {\n    this.pattern = pattern;\n    this.markForCheck();\n  }\n\n  /**\n   * Set [[min]] value\n   * @param val\n   */\n  setMin(val: any) {\n    this.min = val;\n    this.markForCheck();\n  }\n\n  /**\n   * Set [[max]] value\n   * @param val\n   */\n  setMax(val: any) {\n    this.max = val;\n    this.markForCheck();\n  }\n\n  /**\n   * Get [[pattern]] value\n   * @returns [[pattern]]\n   */\n  getPattern(): string {\n    return this.pattern;\n  }\n\n  /**\n   * Get [[min]] value\n   * @returns [[min]]\n   */\n  getMin(): any {\n    return this.min;\n  }\n\n  /**\n   * Get [[max]] value\n   * @returns [[max]]\n   */\n  getMax(): any {\n    return this.max;\n  }\n\n  /**\n   * Get [[inputLocale]] value\n   * @returns [[inputLocale]]\n   */\n  getInputLocale(): string {\n    return this.inputLocale;\n  }\n\n  /** Set [[inputLocale]] value\n   * @param locale\n   */\n  setInputLocale(locale: string) {\n    this.inputLocale = locale;\n    this.markForCheck();\n  }\n\n  /**\n   * Get [[inputCharsets]] value\n   * @returns [[inputCharsets]]\n   */\n  getInputCharsets(): string {\n    return this.inputCharsets;\n  }\n\n  /**\n   * Set [[inputCharests]] value\n   * @param inputCharSets\n   */\n  setInputCharsets(inputCharSets: string) {\n    this.inputCharsets = inputCharSets;\n    this.markForCheck();\n  }\n\n  /**\n   * Get [[id]] value\n   * @returns [[id]]\n   */\n  getId(): string {\n    return this.id;\n  }\n\n  /**\n   * Set [[id]] value\n   * @param id\n   */\n  setId(id: string) {\n    if (this.parent != null && this.parent.children.has(this.id)) {\n      this.parent.children.delete(KeyUtils.toMapKey(this.id));\n      this.parent.children.set(KeyUtils.toMapKey(id), this);\n\n      if (this._childrenIndex !== null) {\n        const idx = _.findIndex(this.parent._childrenIndex, (item) => item === this.id);\n\n        if (idx >= 0) {\n          this.parent._childrenIndex[idx] = id;\n        } else {\n          this.parent._childrenIndex.push(id);\n        }\n\n        this.parent._childrenIndex = _.uniq(this.parent._childrenIndex);\n      }\n    }\n\n    this.id = id;\n  }\n\n  /**\n   * Abstract method. Implemented by sub class components\n   * @param title\n   */\n  setTitle(title: string) {\n    //impl. by sub class\n  }\n\n  /**\n   * Set [[cssClass]] of component.\n   * @param css Class (CSS) name to set on component. For multiple CSS classes, join with DOT (.)\n   * ```\n   * .class1.class2.class3\n   * ```\n   */\n  setCssClass(css: string, skipAttributeOverride: boolean = false) {\n    if (css != null && css.indexOf(\".\") >= 0) {\n      const temp = css.split(\"\\.\");\n\n      this.cssClass = temp.join(\"-\");\n\n      if (temp[0] === \"\") {\n        this.cssClass = this.cssClass.substring(1);\n      }\n    }\n\n    this.cssClass = css;\n    this.checkNxStyling(skipAttributeOverride);\n    this.markForCheck();\n  }\n\n  /**\n   * Adds a css class name to the internal [[_cssClass]] property\n   * @param css CSS class name to add\n   */\n  addCssClass(css: string) {\n    if (this._cssClass == null || this._cssClass === \"\") {\n      this._cssClass = css;\n    } else if (this._cssClass.indexOf(css) == -1) {\n      this._cssClass = `${this._cssClass} ${css}`;\n    }\n    this.checkNxStyling();\n    this.markForCheck();\n  }\n\n  /**\n   * Removes css class name from internal [[_cssClass]] property\n   * @param css CSS class name to remove\n   */\n  removeCssClass(css: string) {\n\n    if (this._cssClass != null)\n      this._cssClass = this._cssClass.replace(css, '');\n    this.checkNxStyling();\n    this.markForCheck();\n  }\n\n  /**\n   * Get the [[require]] property value\n   * @returns Value of [[require]]\n   */\n  getRequired(): string | boolean {\n    return this.require;\n  }\n\n  /**\n   * Remove all references to the component and invokes Angulars [[ngOnDestroy]] method\n   */\n  destroyComponent() {\n    if (this.compRef != null) {\n      this.compRef.destroy();\n    } else if (this.elementRef != null) {\n      (this.elementRef.nativeElement as HTMLElement).remove();\n      this.ngOnDestroy();\n      Logger.warn(\"Memory leak! Please use ngIf if you want to remove component!\");\n    }\n  }\n\n  /**\n   * Gets JSON representation of the component\n   * @returns JSON object\n   */\n  toJson(): {} {\n    const retVal: any = {};\n\n    //get custom attributes binded to our tag\n    if (this.elementRef != null && this.elementRef.nativeElement != null) {\n      const el = this.elementRef.nativeElement;\n      let attributes: Array<string> = null;\n\n      if (typeof el.getAttributeNames === \"function\") {\n        attributes = el.getAttributeNames();\n      } else if (el.attributes) {\n        attributes = [];\n\n        for (let i = 0; i < el.attributes.length; i++) {\n          attributes.push(el.attributes[i].name);\n        }\n      }\n\n      if (attributes != null) {\n        _.forEach(attributes, (attributeName) => {\n          if (typeof AppUtils.validateAttribute === \"function\" && AppUtils.validateAttribute(attributeName)) {\n            this.setJson(retVal, attributeName, el.getAttribute(attributeName));\n          }\n        });\n      } else if (typeof AppUtils.setCustomAttribute === \"function\") {\n        AppUtils.setCustomAttribute(retVal, el);\n      }\n    }\n\n    this.setJson(retVal, \"nxTagName\", this.getNxTagName());\n    this.setJson(retVal, \"tagName\", this.getTagName());\n    this.setJson(retVal, \"id\", this.id);\n    this.setJson(retVal, \"disabled\", this.getDisabled());\n    this.setJson(retVal, \"enabled\", this.getEnabled());\n    this.setJson(retVal, \"visible\", this.getVisible());\n    this.setJson(retVal, \"text\", this.getText());\n    this.setJson(retVal, \"cssClass\", this.cssClass);\n    this.setJson(retVal, \"customAttributes\", this.customAttributesToJson());\n\n    if (this.getValue() != null) {\n      this.setJson(retVal, \"value\", this.getValue());\n    }\n\n    if (this._children !== null) {\n      if (this._children.size > 0) {\n        //need to return children in proper order\n        retVal[\"children\"] = [];\n\n        if (this._childrenIndex !== null) {\n          for (let id of this._childrenIndex) {\n            const c = this.getChild(id);\n\n            //getChild can return null?\n            if (c != null) {\n              const childJson = this.childToJson(c);\n\n              if (childJson != null) {\n                retVal[\"children\"].push(childJson);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return retVal;\n  }\n\n  /**\n   * Convert child to JSON\n   * @param child child to be converted to JSON\n   */\n  protected childToJson(child: BaseComponent) {\n    return child.toJson();\n  }\n\n  /**\n   * Gets JSON representation of [[customAttributes]]\n   * @returns JSON Object\n   */\n  protected customAttributesToJson() {\n    return BaseComponent.mapToJson(this.customAttributes);\n  }\n\n  static mapToJson(map: { [name: string]: any }) {\n    const customAttributes = {};\n\n    if (map) {\n      const keys = _.keys(map);\n\n      for (let key of keys) {\n        let value = map[key];\n\n        if (typeof value !== \"string\" && value != null) {\n          value = value + \"\";\n        }\n\n        customAttributes[key] = value;\n      }\n    }\n\n    return customAttributes;\n  }\n\n  /**\n   * Should be implemented by sub class otherwise returns default value of \"none\"\n   * @returns NxTagName as string\n   */\n  protected getNxTagName() {\n    return \"none\";\n  }\n\n  /**\n   * Sets JSON values. Mutates JSON object that is passed in\n   * @param json Object to add key to\n   * @param key Key to set\n   * @param value Value to set for key param\n   */\n  protected setJson(json: any, key: any, value: any) {\n    if (key != null) {\n      json[key] = this.toJsonValue(value);\n    }\n  }\n\n  /**\n   * Converts value to a valid JSON property string\n   * @param value Value to convert to string\n   * @returns Value as a valid JSON property string\n   */\n  protected toJsonValue(value: any) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (typeof value === 'number' || typeof value === 'boolean') {\n      return value + '';\n    } else {\n      return value;\n    }\n  }\n\n  /**\n   * Sets [[id]] property to a unique string ID generated by [[_uniqueId]]\n   */\n  resetId() {\n    this.id = this._uniqueId;\n  }\n\n  /**\n   * Get value of checked property. Should be implemented in sub class components that have checked state\n   * @returns Value of [[checked]] property\n   */\n  getChecked(): boolean {\n    return false;\n  }\n\n  /**\n   * Abstract method. Should be implemented by sub class components that have checked state\n   * @param boo Toggle [[checked]] on/off\n   */\n  setChecked(boo: boolean | string) {\n    // NO-OP\n  }\n\n  /**\n   * Abstract method. Should be implemented by sub class components that have selected state\n   * @param boo Toggle [[checked]] on/off\n   */\n  setSelected(boo: boolean | string) {\n    // NO-OP\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get [[maxLength]] property. Returns -1 if it is null\n   * @returns Value of maxLength as integer if it's set, otherwise returns null\n   */\n  getMaxLength(): number {\n    return this.maxLength == null ? -1 : JavaUtils.intValue(this.maxLength);\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get [[minLength]] property. Returns -1 if it is null\n   * @returns Value of minLength as integer if it's set, otherwise returns null\n   */\n  getMinLength(): number {\n    return this.minLength == null ? -1 : JavaUtils.intValue(this.minLength);\n  }\n\n  /**\n   * Get a list of child components\n   * @returns Child components\n   */\n  getChildren() {\n    const children = new Vector<BaseComponent>();\n    if (this._childrenIndex !== null) {\n      for (let id of this._childrenIndex) {\n        const c = this.getChild(id);\n\n        if (c != null) {\n          children.add(c);\n        }\n      }\n    }\n\n    return children;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Remove child component from list of children and remove children of child\n   * @param child Child component to remove\n   */\n  removeChild(child: BaseComponent) {\n    //if somehow send it as string (via type any)\n    if (typeof child === \"string\") {\n      child = this.getElementById(child) as BaseComponent;\n    }\n\n    if (child != null) {\n      //first hide it\n      if (child.setVisible) {\n        child.setVisible(false);\n      }\n\n      if (this.children) {\n        this.children.delete(KeyUtils.toMapKey(child.id));\n        if (this._childrenIndex !== null) {\n          this._childrenIndex = _.uniq(_.filter(this._childrenIndex, (item) => item !== child.id));\n        }\n      }\n\n      const parentView = this.getParentView();\n\n      //remove ourself from the view children map\n      if (parentView != null && parentView._viewChildrenMap != null) {\n        parentView._viewChildrenMap.delete(KeyUtils.toMapKey(child.getId()));\n      }\n\n      //move children of children\n      if (child.removeAllChildren) {\n        child.removeAllChildren();\n      }\n    }\n  }\n\n  /**\n   * Removes child component by ID\n   * @param id Child [[id]]\n   */\n  removeChildById(id: string) {\n    const child = this.getElementById(id);\n\n    if (child != null) {\n      this.removeChild(child);\n    }\n  }\n\n  /**\n   * Remove all child components\n   */\n  private removeAllChildren() {\n    if (this.children != null) {\n      const cit = this.children.values();\n      let cr = cit.next();\n\n      while (cr.done !== true) {\n        this.removeChild(cr.value);\n        cr = cit.next();\n      }\n    }\n\n    if (this.tabChildrenIds != null) {\n      this.tabChildrenIds.forEach(cid => {\n        this.removeChildById(cid);\n      });\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Finds the child component by ID. Deep search\n   * @param id Child component [[id]]\n   */\n  getElementById(id: string) {\n    return this.findElementById(id);\n  }\n\n  /**\n   * Check if a child component with id exists\n   * @param id Child component [id]\n   */\n  hasChild(id: string) {\n    return this.findElementById(id) != null;\n  }\n\n  /**\n   * Set validate attribute for input component. Implement on sub class component\n   * @param attr\n   */\n  setValidate(attr: string) {\n    //TODO\n    console.error(\"setValidate is not implemented\");\n  }\n\n  /**\n   * Set type attribute for input component. Implement on sub class component\n   * @param type\n   */\n  setType(type: string) {\n    //TODO\n    console.error(\"setType is not implemented\");\n  }\n\n  /**\n   * Set format attribute for input component. Implement on sub class component\n   * @param format\n   */\n  setFormat(format: string) {\n    //TODO\n    console.error(\"setFormat is not implemented\");\n  }\n\n  /**\n   * Set [[maxLength]] for input component\n   * @param maxLength Input max length property. Should be numeric string\n   */\n  setMaxLength(maxLength: string) {\n    this.maxLength = maxLength;\n    this.markForCheck();\n  }\n\n  /**\n   * Set [[minLength]] for input component\n   * @param minLength Input max length property. Should be numeric string\n   */\n  setMinLength(minLength: string) {\n    this.minLength = minLength;\n    this.markForCheck();\n  }\n\n  /**\n   * Set [[maxLength]] as byte length for input component\n   * @param bl Should be numeric string\n   */\n  setMaxByteLen(bl: string) {\n    this.setMaxLength(bl);\n  }\n\n  /**\n   * Abstract method. Set value of input component\n   * @param val Value to set\n   */\n  setValue(val: any) {\n\n  }\n\n  /**\n   * Set focusable property value for component. Implement on sub class\n   * @param focusable Toggle focusable on/off\n   */\n  setFocusable(focusable: boolean | string) {\n    //TODO\n  }\n\n  /**\n   * Abstract. Select parent component tab. Implement on sub class\n   */\n  selectParentTab() {\n    function findTabBelong(item: BaseComponent) {\n      if (item != null) {\n        const parent = item.getParent();\n        if (parent != null && parent.getLocalName() !== 'tab')\n          return findTabBelong(parent);\n        return parent;\n      }\n    }\n    const tab = findTabBelong(this.getElementById(this.id)) as TabComponent;\n\n    function findTabPaneBelong(tab: BaseComponent) {\n      if (tab != null) {\n        const parent = tab.getParent();\n        if (parent != null && parent.getLocalName() !== 'tab-pane')\n          return findTabPaneBelong(parent);\n        return parent;\n      }\n    }\n    const tabPane = findTabPaneBelong(this.getElementById(this.id)) as TabPaneComponent;\n    if (tab != null) {\n      tabPane.setSelectedTab(tab.id);\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Perform a deep search (that is, looks up descendants)\n   * @param id element id to search\n   */\n  findElementById(id: string): BaseComponent {\n    const mappedChildId = KeyUtils.toMapKey(id);\n\n    let comp: BaseComponent = null;\n    //first check for cache\n    // let comp: BaseComponent = UiDocument.getFromCache(mappedChildId);\n\n    if (comp == null) {\n      //check for radio button group\n      const radioGroup = this.getRadioButtonGroupComponent(id);\n\n      if (radioGroup != null) {\n        comp = radioGroup;\n      }\n\n      if (comp == null) {\n        //get all children from View\n        // const allChildren = this.getParentView().reduceChildrenIterative();\n        // const editorId = `#{id}`;\n\n        // for (let child of allChildren) {\n        //   if (\n        //     KeyUtils.toMapKey(child.getId()) === mappedChildId ||\n        //     //by editor id (e.g. editor=\"#editorId\")\n        //     child.editor === editorId\n        //   ) {\n        //     comp = child;\n        //     break;\n        //   }\n        // }\n        if (this._viewChildrenMap != null) {\n          comp = this._viewChildrenMap.get(mappedChildId);\n        }\n\n        if (comp == null && this.isView() !== true) {\n          const parentView = this.getParentView();\n\n          if (parentView != null) {\n            comp = parentView.findElementById(mappedChildId);\n          }\n        }\n      }\n\n      //if we find component, add to cache\n      // if (comp != null) {\n      //   UiDocument.addToCache(mappedChildId, comp);\n      // }\n    }\n\n    if (comp === undefined) {\n      comp = null;\n    }\n\n    return comp;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get radio button group component by id\n   * @param id Radio button group ID\n   */\n  getRadioButtonGroupComponent(id: string): BaseComponent {\n    if (id === (this as any).group) {\n      //radio button group\n      return this;\n    } else {\n      const radioGroup = this.getRadioButtonGroup(id);\n\n      if (radioGroup != null) {\n        let retVal = radioGroup[0];\n\n        for (let radio of radioGroup) {\n          if (radio.getChecked() === true) {\n            retVal = radio;\n            break;\n          }\n        }\n        return retVal;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Add change listener on attributes\n   * @param listener\n   */\n  addAttributeChangeListener(listener: AttributeChangeListener): void {\n    if (this.attributeChangeListeners == null) {\n      this.attributeChangeListeners = [];\n    }\n\n    listener._internalId = BaseComponent.generateUniqueId('listener');\n\n    this.attributeChangeListeners.push(listener)\n  }\n\n  /**\n   * Remove change listener on attributes\n   * @param listener\n   */\n  removeAttributeChangeListener(listener: AttributeChangeListener): void {\n    if (this.attributeChangeListeners != null) {\n      this.attributeChangeListeners = _.filter(this.attributeChangeListeners, (item: AttributeChangeListener) => item._internalId !== listener._internalId);\n    }\n  }\n\n  /**\n   * Set attribute and emit change event\n   * @param attributeName\n   * @param newValue\n   * @event AttributeChangeEvent\n   */\n  protected fireSetAttributeEvent(attributeName: string, newValue: any) {\n    if (this.attributeChangeListeners && this.attributeChangeListeners.length > 0) {\n      const event: AttributeChangeEvent = new AttributeChangeEvent(\n        attributeName, this.getAttribute(attributeName), newValue, this\n      );\n\n      _.forEach(this.attributeChangeListeners, (listener: AttributeChangeListener) => {\n        listener.onAttributeSet(event);\n      });\n    }\n  }\n\n  /**\n   * Remove attribute and emit change event\n   * @param attributeName\n   * @event AttributeChangeEvent\n   */\n  protected fireRenoveAttributeEvent(attributeName: string) {\n    if (this.attributeChangeListeners && this.attributeChangeListeners.length > 0) {\n      const event: AttributeChangeEvent = new AttributeChangeEvent(\n        attributeName, this.getAttribute(attributeName), null, this\n      );\n\n      _.forEach(this.attributeChangeListeners, (listener: AttributeChangeListener) => {\n        listener.onAttributeRemoved(event);\n      });\n    }\n  }\n\n  /**\n   * Alias for static [[cleanCss]] method\n   * @param css\n   */\n  private cleanCss(css: string) {\n    return BaseComponent.cleanCss(css);\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Format css selectors. Remove dot\n   * @param css\n   * @returns New CSS selector string\n   */\n  static cleanCss(css: string) {\n    if (css != null && css.indexOf(\".\") >= 0) {\n      //more than one style?\n      if (css.indexOf(\" \") > 0) {\n        return _.map(css.split(\" \"), (item) => this.cleanCss(item)).join(\" \");\n      } else {\n        //only one style\n        return css.replace(/\\./g, '-').replace(/^\\-/, '');\n      }\n    }\n\n    return css;\n  }\n\n  /**\n   * Abstract method gets the instance's [[ChangeDetectorRef]]. Should be implemented in sub class\n   */\n  protected getChangeDetector(): ChangeDetectorRef {\n    //sub-class override\n    return null;\n  }\n\n  /**\n   * Mark component for change detection\n   */\n  markForCheck() {\n    if (this._tempFreezeCd !== true && this._isDying !== true) {\n      if (this.getChangeDetector() != null) {\n        this.getChangeDetector().markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Invoke change detection on component\n   */\n  detectChanges() {\n    if (this._tempFreezeCd !== true && this._isDying !== true) {\n      if (this.getChangeDetector() != null) {\n        this.getChangeDetector().detectChanges();\n      }\n    }\n  }\n\n  /**\n   * Set CSS height and width style value. Either 'height/width' or 'max-height/max-width'\n   * @param heightStyleName\n   * @param widthStyleName\n   */\n  protected initWidthHeightStyle(heightStyleName: string = 'height', widthStyleName: string = 'max-width') {\n    if (this.controlHeight != null && this.controlHeight != \"\" && parseInt(this.controlHeight) > 0) {\n      this.styles[\"height\"] = parseInt(this.controlHeight) + \"px\";\n    }\n\n    if (this.controlWidth != null && this.controlWidth != \"\" && parseInt(this.controlWidth) > 0) {\n      this.styles[widthStyleName] = parseInt(this.controlWidth) + \"px\";\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Add a radio button component to this component\n   * @param radio\n   */\n  addRadioButtonGroup(radio: BaseComponent) {\n    //radio group need to be at ViewComponent level\n    if (this.isView() !== true && this.getParent() != null) {\n      return this.getParent().addRadioButtonGroup(radio);\n    }\n\n    if (this.radioButtonGroups == null) {\n      this.radioButtonGroups = new Map<string, Array<BaseComponent>>();\n    }\n\n    //ignore type to prevent circular ref\n    let groupId: string = (radio as any).group;\n\n    if (this.radioButtonGroups.get(groupId) == null) {\n      this.radioButtonGroups.set(groupId, [radio]);\n    } else {\n      this.radioButtonGroups.get(groupId).push(radio);\n    }\n\n    return;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get radio button group by group ID\n   * @param groupId\n   * @returns  Radio button group component\n   */\n  getRadioButtonGroup(groupId: string) {\n    let view = this.getParentView();\n\n    return view != null && view.radioButtonGroups != null ? view.radioButtonGroups.get(groupId) : null;\n  }\n\n  /**\n   * Sets [[controlWidth]] property\n   * @param width Should be numeric value\n   */\n  setControlWidth(width: any) {\n    this.controlWidth = width;\n\n    this.initWidthHeightStyle();\n    this.markForCheck();\n  }\n\n  /**\n   * Sets [[controlHeight]] property\n   * @param height Should be numeric value\n   */\n  setControlHeight(height: any) {\n    this.controlHeight = height;\n\n    this.initWidthHeightStyle();\n    this.markForCheck();\n  }\n\n  /**\n   * Alias for [[setControlWidth]] method\n   * @param width Should be a numeric value\n   */\n  setWidth(width: any) {\n    this.setControlWidth(width);\n  }\n\n  /**\n   * Get [[controlWidth]] property\n   * @returns Value of [[controlWidth]]\n   */\n  getWidth(): string {\n    return this.controlWidth;\n  }\n\n  /**\n   * Alias for [[setControlHeight]] method\n   * @param height Should be a numeric value\n   */\n  setHeight(height: any) {\n    this.setControlHeight(height);\n  }\n\n  /**\n   * Get [[controlHeight]] property\n   * @returns Value of [[controlHeight]]\n   */\n  getHeight(): string {\n    return this.controlHeight;\n  }\n\n  /**\n   * Sets value of [[x]] property for horizontal position.\n   * Sets CSS \"left\" property to [[x]] px.\n   * @param x Horizontal coordinate position\n   */\n  setX(x: string) {\n    this.x = x;\n    this.styles[\"left\"] = x + \"px\";\n    this.markForCheck();\n  }\n\n  /**\n   * Get [[x]] property\n   * @returns Value of [[x]]\n   */\n  getX() {\n    return this.x;\n  }\n\n  /**\n   * Sets value of [[y]] property for vertical position.\n   * Sets CSS \"top\" property to [[y]] px.\n   * @param y Vertical coordinate position\n   */\n  setY(y: string) {\n    this.y = y;\n    this.styles[\"top\"] = y + \"px\";\n    this.markForCheck();\n  }\n\n  /**\n   * Get [[y]] property\n   * @returns Value of [[y]]\n   */\n  getY() {\n    return this.y;\n  }\n\n  /**\n   * Set [[borderWidth]] property value\n   * @param borderWidth Should be numeric\n   */\n  setBorderWidth(borderWidth: string) {\n    this.borderWidth = borderWidth;\n    this.markForCheck();\n  }\n\n  /**\n   * Check if component is view component.\n   * Implement in sub class\n   */\n  isView(): boolean {\n    return false;\n  }\n\n  /**\n   * Check if there are active views.\n   * Implement in sub class\n   */\n  isNoneActiveView(): boolean {\n    return false;\n  }\n\n  /**\n   * Check if this component is an instance of [[DialogComponent]]\n   */\n  protected isDialog(): boolean {\n    return false;\n  }\n\n  /**\n   * Check if this component is a dynamic view\n   */\n  isDynamicView(): boolean {\n    return false;\n  }\n\n  /**\n   * Get the parent view of this component\n   * @returns Parent view component\n   */\n  getParentView(): BaseComponent {\n    if (this.isView()) {\n      return this;\n    }\n\n    let parentView: BaseComponent = null;\n\n    if (this.parent != null) {\n      let stack: Array<BaseComponent> = [this.parent];\n\n      while (stack.length > 0) {\n        const temp = stack.pop();\n\n        if (temp.isView() === true) {\n          parentView = temp;\n          break;\n        }\n\n        if (temp.parent != null) {\n          stack.push(temp.parent);\n        }\n      }\n    }\n\n    return parentView;\n  }\n\n  getParentScrollView(): BaseComponent {\n    if (this.isScrollView()) {\n      return this;\n    }\n\n    let parentView: BaseComponent = null;\n\n    if (this.parent != null) {\n      let stack: Array<BaseComponent> = [this.parent];\n\n      while (stack.length > 0) {\n        const temp = stack.pop();\n\n        if (temp.isScrollView() === true) {\n          parentView = temp;\n          break;\n        }\n\n        if (temp.parent != null) {\n          stack.push(temp.parent);\n        }\n      }\n    }\n\n    return parentView;\n  }\n\n  isScrollView(): boolean {\n    return false;\n  }\n\n  /**\n   * Return the parent container component (for subview), not the actual parent view. This is the parent\n   * ViewComponent where canBeActiveView is false\n   */\n  _getNoneActiveViewParent(): BaseComponent {\n    if (this.isNoneActiveView()) {\n      return this;\n    }\n\n    let parentView: BaseComponent = null;\n\n    if (this.parent != null) {\n      let stack: Array<BaseComponent> = [this.parent];\n\n      while (stack.length > 0) {\n        const temp = stack.pop();\n\n        if (temp.isNoneActiveView() === true) {\n          parentView = temp;\n          break;\n        }\n\n        if (temp.parent != null) {\n          stack.push(temp.parent);\n        }\n      }\n    }\n\n    return parentView;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for context menu click (right click).\n   * Delegates to [[SessionService]] to display popup.\n   * @param event Click event\n   * @param force always emit\n   */\n  handleOnContextMenu(event: MouseEvent, force: boolean = false) {\n    //allow component to skip emit event and let parent (i.e. table cell to emit it)\n    if (force === true || this.skipEmitContextMenuEvent !== true) {\n      if (this.getSession() != null) {\n        this.getSession().setMousePosition(event);\n      }\n\n      const parentView = this.getParentView();\n      let popupMenuId: string = null;\n\n      if (parentView != null) {\n        popupMenuId = (parentView as ViewComponent).getFirstPopupMenuId();\n      }\n\n\n      this.onContextMenu.emit(event);\n\n\n      if (this.popup != null && this.popup !== \"\") {\n        if (this.popup.indexOf(\"#\") === 0) {\n          this.popup = this.popup.substring(1);\n        }\n\n        popupMenuId = this.popup;\n\n        this.getSession()._currentPopupMenuId = this.popup;\n      }\n\n      if (popupMenuId != null) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const tm = setTimeout(() => {\n          clearTimeout(tm);\n\n          if (this.getSession()._currentPopupMenuId != null) {\n            popupMenuId = this.getSession()._currentPopupMenuId;\n          }\n\n          this.getSession().showContextMenu(popupMenuId);\n          this.getSession()._currentPopupMenuId = null;\n        });\n      }\n    }\n  }\n\n  /**\n   * Emits focus lost event for components that require validation\n   * @param event\n   * @event BeforeActiveLost\n   */\n  validateField(event: FocusEvent) {\n    if (AppUtils.validateField != null && AppUtils.validateField(this) !== true) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.onBeforeActiveLost.emit();\n\n    this.focusLost();\n  }\n\n  //iteratative function to prevent stack overflow\n  // reduceChildrenIterative() {\n  //   if (this._reduceChildrenIterativeCache != null && this._reduceChildrenIterativeCache.length > 0) {\n  //     return this._reduceChildrenIterativeCache;\n  //   }\n\n  //   this._reduceChildrenIterativeCache = [];\n\n  //   if (this.children == null) {\n  //     Logger.warn(\"reduceChildrenIterative, children is null\");\n  //     return this._reduceChildrenIterativeCache;\n  //   }\n\n  //   //skip DialogComponent\n  //   let stack: Array<BaseComponent> = _.filter(Array.from(this.children.values()), (comp: BaseComponent)=>{\n  //     return comp.isFauxElement() || comp.isDialog() !== true;\n  //   });\n\n  //   this._reduceChildrenIterativeCache = this._reduceChildrenIterativeCache.concat(stack);\n  //   let counter = 0;\n\n  //   while(stack.length > 0) {\n  //     const child = stack.pop();\n\n  //     if (child.children != null && child.children.size > 0) {\n  //       //get grandchildren\n  //       const grandChildren = Array.from(child.children.values());\n  //       this._reduceChildrenIterativeCache = this._reduceChildrenIterativeCache.concat(grandChildren);\n\n  //       //push to our stack to iterate our grandchildren to look for great grandchildren\n  //       stack = stack.concat(grandChildren);\n  //     }\n\n  //     counter++;\n\n  //     if (counter > 10000 || stack.length > 10000) {\n  //       throw new Error(\"BaseComponent.reduceChildrenIterative: stack overflow\");\n  //     }\n  //   }\n\n  //   return this._reduceChildrenIterativeCache;\n  // }\n\n  /**\n   * Get children of a table component.\n   * @returns Array of table children\n   */\n  getTableChildren(): Array<any> {\n    return [];\n  }\n\n  /**\n   * Get [[bgColor]] property\n   * @returns Value of [[bgColor]]\n   */\n  getBgColor() {\n    return this.bgColor;\n  }\n\n  protected setAttributeFromDef() {\n    const compDef = this.getSession().getDef(this.id);\n\n    if (compDef != null && compDef.attribute != null) {\n      if (\n        compDef.attribute instanceof Map ||\n        compDef.attribute instanceof Hashtable ||\n        compDef.attribute instanceof HashMap\n      ) {\n        const keys = compDef.attribute.keys();\n        let key = keys.next();\n\n        while (key.done !== true) {\n          this.setAttribute(key.value, compDef.attribute.get(key));\n          key = keys.next();\n        }\n      } else {\n        const keys = _.keys(compDef.attribute);\n\n        for (let key of keys) {\n          this.setAttribute(key, compDef.attribute[key]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Perform an xpath lookup on the element. This will be evaluated against the actual HTMLElement.\n   *\n   * @warning PLEASE ENSURE TO FREE UP THE THE RESULT SO WE DON'T HAVE ANY DANGLING HTML ELEMENT\n   *\n   * @param xpathExpression\n   */\n  evaluateXPath(xpathExpression: string): Vector<Node> {\n    return null;\n  }\n\n  /**\n   * Set color of hightlighted text background\n   * @param color Should be a valid CSS color value (e.g. \"#FF0000\" or \"red\")\n   */\n  setHighlightBgColor(color: string) {\n    this.highlightBgColor = color;\n  }\n\n  /**\n   * Set color of highlighted text foreground\n   * @param color Should be a valid CSS color value (e.g. \"#FF0000\" or \"red\")\n   */\n  setHighlightFontColor(color: string) {\n    this.highlightFontColor = color;\n  }\n\n  /**\n   * Get [[hightlightBgColor]] property\n   * @returns Color string\n   */\n  getHighlightBgColor() {\n    return this.highlightBgColor;\n  }\n\n  /**\n   * Get [[highlightFontColor]] property\n   * @returns Color string\n   */\n  getHighlightFontColor() {\n    return this.highlightFontColor;\n  }\n\n  /**\n   * Get [[parentTableRow]] property\n   */\n  getParentTableRow() {\n    return this.parentTableRow;\n  }\n\n  //clear reduce children iterative cache\n  // resetReduceChildrenIterativeCache() {\n  //   this._reduceChildrenIterativeCache = null;\n  // }\n\n  /**\n   * Check if change detection is frozen\n   * @returns Boolean If component change detection is frozen\n   */\n  isChangeDetectionFrozen() {\n    return false;\n  }\n\n  /**\n   * Check if component is a faux element\n   * @returns Boolean If component is faux element\n   */\n  isFauxElement() {\n    return false;\n  }\n\n  /**\n   * Get internal [[_viewChildrenMap]] member\n   * @returns Value of [[_viewChildrenMap]]\n   */\n  getViewChildrenMap(): Map<string, BaseComponent> {\n    return this._viewChildrenMap;\n  }\n\n  /**\n   * Removes view child with id from [[_viewChildrenMap]]\n   * @param id ID of child to remove\n   */\n  removeViewChildFromMap(id: string) {\n    if (this._viewChildrenMap != null) {\n      this._viewChildrenMap.delete(KeyUtils.toMapKey(id));\n    }\n  }\n\n  /**\n   * Adds a component to [[_viewChildrenMap]]\n   * @param obj Child to add to [[_viewChildrenMap]]\n   */\n  addViewChildToMap(obj: BaseComponent | HTMLElementWrapper) {\n    if (this._viewChildrenMap != null) {\n      this._viewChildrenMap.set(KeyUtils.toMapKey(obj.getId()), obj as any);\n    }\n  }\n\n  /**\n   * Invoke an MCO method by name. If a function is passed as argument, it will be called with\n   * this component as an argument.\n   * @param action Name of action method to invoke or a function to invoke\n   */\n  protected invokeMcoAction(action: string | ((arg?: any) => any)) {\n    if (typeof action === \"function\") {\n      action(this);\n    } else if (action.indexOf(\"mco://\") === 0) {\n      const mcoName = action.substring(6, action.indexOf(\".\"));\n      const methodName = action.substring(action.indexOf(\".\") + 1, action.indexOf(\"(\"));\n      const arg = action.substring(action.indexOf(\"(\") + 1, action.indexOf(\")\"));\n\n      if (arg != null && arg.length > 0) {\n        const mco = this.sessionService.getMcoContainer().getMco(mcoName);\n\n        if (mco != null) {\n          if (arg === \"this\") {\n            mco[methodName].apply(mco, [this]);\n          } else {\n            mco[methodName].apply(mco, [arg]);\n          }\n        } else {\n          console.error(\"Unable to execute MCO action, mco not found: \" + mcoName);\n        }\n      } else {\n        const mco = this.sessionService.getMcoContainer().getMco(mcoName);\n\n        if (mco != null) {\n          mco[methodName].apply(mco);\n        } else {\n          console.error(\"Unable to execute MCO action, mco not found: \" + mcoName);\n        }\n      }\n    }\n  }\n\n  protected _notifyInternalChangeCb() {\n    if (typeof this._internalChangeCb === \"function\") {\n      this._internalChangeCb(this);\n    }\n  }\n\n  emptyChildren() {\n    if (this._viewChildrenMap != null) {\n      const cit = this._viewChildrenMap.values();\n      let val = cit.next();\n\n      while (val.done !== true) {\n        //some children are not actual BaseComponent\n        if (typeof val.value.emptyChildren === \"function\") {\n          val.value.emptyChildren();\n          val.value._isDying = true;\n        }\n\n        val = cit.next();\n      }\n    }\n\n    if (this.children != null) {\n      this.children.clear();\n    }\n\n    if (this._viewChildrenMap != null) {\n      this._viewChildrenMap.clear();\n      delete this._viewChildrenMap;\n    }\n\n    // this._viewChildrenMap = null;\n  }\n\n  /**\n   * Check to see if this is a ScrollPaneComponent\n   */\n  isScrollPane() {\n    return false;\n  }\n\n  /**\n   * Reset the scroll position to the previous captured\n   */\n  resetScrollTopToPreviousPosition() {\n    //implement by scrollpane\n  }\n\n  /**\n   * Reset all scrollpane pos\n   */\n  resetAllScrollPanesPositionToPrevious() {\n    if (this.scrollPanes != null) {\n      this.scrollPanes.forEach((scrollPane) => scrollPane.resetScrollTopToPreviousPosition());\n    }\n  }\n\n  resetScrollTopPosition() {\n  }\n  resetAllScrollPanesPositionToTop() {\n    if (this.scrollPanes != null) {\n      this.scrollPanes.forEach((scrollPane) => scrollPane.resetScrollTopPosition());\n    }\n  }\n\n  /**\n   * Notify parent view that there is a validation error on this, this should only be applicabled to disabled element\n   */\n  notifyParentOfError() {\n    if (this.getDisabled() === true) {\n      const parentView = this.getParentView();\n\n      if (parentView != null && parentView[\"dialog\"] != null) {\n        if (parentView[\"dialog\"]._disabledErrorElementId == null) {\n          parentView[\"dialog\"]._disabledErrorElementId = [];\n        }\n\n        if (parentView[\"dialog\"]._disabledErrorElementId.indexOf(this.getId()) < 0) {\n          parentView[\"dialog\"]._disabledErrorElementId.push(this.getId());\n        }\n      }\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Focus the parent tab\n   */\n  focusParentTab() {\n    //get parent view\n    const parentView = this._getNoneActiveViewParent() || this.getParentView();\n\n    if (parentView != null) {\n      //check to see if this view is in a TabPane\n      const tabPane = parentView.getParent();\n\n      //check to see if the parent is a Tab\n      if (tabPane != null && tabPane.getNxTagName() === \"tab\") {\n        tabPane.setFocus();\n      }\n    }\n  }\n\n  /**\n   * Register scrollpane\n   *\n   * @param scrollPane scrollPane to register\n   */\n  private registerScrollPane(scrollPane: BaseComponent) {\n    if (typeof scrollPane.isScrollPane === \"function\" && scrollPane.isScrollPane() === true) {\n      if (this.scrollPanes == null) {\n        this.scrollPanes = [];\n      }\n\n      this.scrollPanes.push(scrollPane);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { McoContainerService } from './mco-container.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [\n    McoContainerService\n  ]\n})\nexport class McoContainerModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EventHandlerService } from './event-handler.service';\nimport { McoContainerModule } from '../mco-container/mco-container.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    McoContainerModule\n  ],\n  declarations: [],\n  providers: [\n    EventHandlerService\n  ]\n})\nexport class EventHandlerModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SessionService } from './session.service';\nimport { McoContainerModule } from '../mco-container/mco-container.module';\nimport { EventHandlerModule } from '../event-handler/event-handler.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    McoContainerModule,\n    EventHandlerModule\n  ],\n  declarations: [],\n  providers: [\n    SessionService\n  ]\n})\nexport class SessionModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: []\n})\nexport class JavaModule { }\n","import { Directive, ContentChild, OnInit, ElementRef, EventEmitter, Output, ViewChild, forwardRef, ViewContainerRef, NgZone, Input } from '@angular/core';\nimport { OnCreateEvent } from './on-create-event';\n\n@Directive({\n  selector: '[vtOnCreate]'\n})\nexport class OnCreateDirective implements OnInit {\n  @Input() runOutsideZone: boolean;\n  @Output() vtOnCreate: EventEmitter<OnCreateEvent> = new EventEmitter<OnCreateEvent>();\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private zone: NgZone\n  ) {\n\n  }\n\n  ngOnInit() {\n    if (this.runOutsideZone === true) {\n      this.zone.runOutsideAngular(()=>{\n        this.vtOnCreate.emit({\n          element: this.elementRef\n        });\n      });\n    } else {\n      this.vtOnCreate.emit({\n        element: this.elementRef\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BaseComponent } from './base.component';\nimport { SessionModule } from '../session/session.module';\nimport { JavaModule } from '../java/java.module';\nimport { EventHandlerModule } from '../event-handler/event-handler.module';\nimport { OnCreateDirective } from './on-create.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SessionModule,\n    JavaModule,\n    EventHandlerModule\n  ],\n  declarations: [BaseComponent, OnCreateDirective],\n  exports: [BaseComponent, OnCreateDirective]\n})\nexport class BaseModule { }\n","export enum ComponentType {\n  LABEL,\n  BUTTON,\n  TEXT_FIELD,\n  COMBOBOX,\n  CHECKBOX,\n  RADIO,\n  TEXTAREA\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, ElementRef, SkipSelf, Optional, ChangeDetectorRef, Renderer2, forwardRef } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\n/* istanbul ignore next */\nimport { SessionService } from '../session/session.service';\n/* istanbul ignore next */\nimport { AppUtils } from '../base/app-utils';\n\n/**\n * Button component class. Inherits from [[BaseComponent]]\n */\n@Component({\n  selector: 'vt-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>ButtonComponent)\n    }\n  ]\n})\nexport class ButtonComponent extends BaseComponent implements OnInit {\n  @Input() focused: boolean = true;\n\t@Output() onCommand = new EventEmitter();\n\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, private cd: ChangeDetectorRef, renderer: Renderer2) {\n    super(parent, sessionService, elementRef, renderer);\n  }\n\n  /**\n   * Init lifecycle. Must call parent ngOnInit\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    if(this.marginTop != null){\n      this.marginTop = this.marginTop + 'px';\n    }\n\n    if(this.marginRight != null){\n      this.marginRight = this.marginRight + 'px';\n    }\n\n    if(this.marginLeft != null){\n      this.marginLeft = this.marginLeft + 'px';\n    }\n  }\n\n  /**\n   * After view init lifecycle. Must call parent ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    this.initWidthHeightStyle(\"height\", \"width\");\n    this.setAttributeFromDef();\n    this.cd.detectChanges();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for click event\n   * @param event\n   * @event OnCommand\n   */\n\tonClick(event: MouseEvent) {\n\n    event.stopPropagation();\n\n    //register client event for mco\n    this.handleClick(event);\n\n    this.onCommand.emit();\n\n    //it looks like you can change onCommand binding at runtime and since we are code\n    //we add another fn to do it (we may removed this later once we have a better of usage)\n    this.emitInternalOnCommand();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for mousedown event\n   * @param e\n   */\n  onMouseDown(e: MouseEvent) {\n    let currentTarget: string = e.currentTarget['id'];\n    if (currentTarget != null && currentTarget.indexOf(\"BtnClose\") > 0) {\n      AppUtils.isCloseBtn = true;\n    } else {\n      AppUtils.isCloseBtn = false;\n    }\n    this.handleMouseDown(e);\n  }\n\n  /* istanbul ignore next */\n  handleOnBlur() {\n    AppUtils.isCloseBtn = false;\n  }\n\n  /**\n   * Get change detector reference for the button instance\n   * @returns [[cd]] property (Change detector)\n   */\n  protected getChangeDetector(): ChangeDetectorRef {\n    return this.cd;\n  }\n\n  /**\n   * Get Nexaweb tag name\n   * @returns String\n   */\n  protected getNxTagName() {\n    return \"button\";\n  }\n\n  /**\n   * Get JSON representation of the button component\n   * @returns Json object\n   */\n  toJson(): {} {\n    const json: any = super.toJson();\n    this.setJson(json, \"focused\", this.focused);\n\n    return json;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from './button.component';\nimport { BaseModule } from '../base/base.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BaseModule\n  ],\n  declarations: [ButtonComponent],\n  exports: [ButtonComponent],\n  entryComponents: [\n    ButtonComponent\n  ]\n})\nexport class ButtonModule { }\n","import { Component, OnInit, Output, EventEmitter, ElementRef, Input, ChangeDetectionStrategy, Optional, SkipSelf, ChangeDetectorRef, Renderer2, forwardRef } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\n\n/**\n * Check box component class\n */\n@Component({\n  selector: 'vt-check-box',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>CheckboxComponent)\n    }\n  ]\n})\nexport class CheckboxComponent extends BaseComponent implements OnInit {\n  @Input() value: any;\n  @Input() checked: boolean = false;\n  //alias for checked\n  @Input() set isChecked(boo: boolean) {\n    this.checked = boo;\n  }\n\n  get isChecked(): boolean {\n    return this.checked;\n  }\n\n  @Output() onCommand: EventEmitter<any> = new EventEmitter();\n  @Output() onStateChange: EventEmitter<any> = new EventEmitter();\n  \n  @Output() onSelect: EventEmitter<any> = new EventEmitter();\n\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, private cd: ChangeDetectorRef, renderer: Renderer2) {\n    super(parent, sessionService, elementRef, renderer);\n  }\n\n  /**\n   * Init lifecycle. Must call parent class ngOnInit\n   */\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  /**\n   * After view init lifecycle. Must call parent class ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.setAttributeFromDef();\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Event handler for click event\n   * @param event\n   * @event OnCommand\n   */\n  onClick(event: MouseEvent) {\n    //consume the event, do not propagate any further\n    event.stopPropagation();\n    \n    this.handleClick(event);\n    this.onCommand.emit();\n  }\n\n  /**\n   * Event handler for mousedown event\n   * @param event \n   */\n  onMouseDown(event: MouseEvent) {\n    //consume the event, do not propagate any further\n    event.stopPropagation();\n\n    this.handleMouseDown(event);\n  }\n\n  /**\n   * Event handler for state change (check/uncheck)\n   * @event OnStateChange\n   * @event OnSelect If the checkbox is set to selected state\n   */\n  handleStateChange() {\n    this.onStateChange.emit();\n\n    if (this.checked === true) {\n      this.onSelect.emit();\n    }\n\n    //notify internal changes (for internal use only)\n    this._notifyInternalChangeCb();\n  }\n\n  /**\n   * Get component name\n   * @returns Name of component\n   */\n  getLocalName(): string {\n    return \"checkBox\";\n  }\n\n  /**\n   * Get [[checked]] property\n   * @returns Value of [[checked]]\n   */\n  getChecked(): boolean {\n    return this.checked;\n  }\n\n  /**\n   * Set [[checked]] property value\n   * @param shouldChecked Value should be true/false or \"true\"/\"false\" to set [[checked]]\n   */\n  setChecked(shouldChecked: boolean | string, skipInternalChange: boolean = false) {\n    this.checked = shouldChecked === true || shouldChecked === 'true';\n\n    this.markForCheck();\n\n    //notify internal changes (for internal use only)\n    if (skipInternalChange !== true) {\n      this._notifyInternalChangeCb();\n    }\n  }\n\n  /**\n   * Alias for [[setChecked]] method\n   * @param boo Toggle [[checked]]\n   */\n  setSelected(boo: boolean | string) {\n    this.setChecked(boo);\n  }\n\n  /**\n   * Get [[value]] property\n   * @returns Value of [[value]]\n   */\n  getValue() {\n    return this.value;\n  }\n\n  /**\n   * Get JSON representation of component state\n   * @returns Object Json object\n   */\n  toJson() {\n    const json = super.toJson();\n\n    if (this.getChecked() === true) {\n      json[\"selected\"] = \"true\";\n    } else {\n      json[\"selected\"] = \"false\";\n    }\n\n    if (this.value != null) {\n      json[\"value\"] = this.value + '';\n    }\n\n    return json;\n  }\n\n  /**\n   * Get Nexaweb tag name\n   * @returns String Tag name\n   */\n  protected getNxTagName() {\n    return \"checkBox\";\n  }\n\n  /**\n   * Get [[cd]] (Change detector) property\n   * @returns The component's change detector reference\n   */\n  protected getChangeDetector(): ChangeDetectorRef {\n    return this.cd;\n  }\n    /**\n   * Set background-color\n   * @param String background color\n   */\n  setBgColor(color:string){\n    this['elementRef'].nativeElement.children[0]['style']['background-color'] = color;\n  }\n  getBgColor(){\n   return  this['elementRef'].nativeElement.children[0]['style']['background-color'];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CheckboxComponent } from './checkbox.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [CheckboxComponent],\n  exports: [\n    CheckboxComponent,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    CheckboxComponent\n  ]\n})\nexport class CheckboxModule { }\n","import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'vt-list-item'\n})\nexport class ListItemDirective {\n  @Input() value: string;\n  @Input() text: string;\n  @Input() selected: boolean | string;\n  @Input() isChecked: boolean | string;\n\n  constructor() { }\n\n}\n","import { ContentChildren, Directive, QueryList } from '@angular/core';\nimport { ListItemDirective } from './list-item.directive';\n\n@Directive({\n  selector: 'vt-list-box'\n})\nexport class ListBoxDirective {\n  @ContentChildren(ListItemDirective)\n  listItems: QueryList<ListItemDirective>;\n\n  constructor() { }\n\n}\n","import { ComboBoxComponent } from \"./combo-box.component\";\nimport { ValuePair } from \"./value-pair\";\nimport { AttributesEnum } from \"../base/attributes.enum\";\n\n/* istanbul ignore next */\nexport class FauxComboElement {\n    static readonly LOCAL_NAME: string = \"listItem\";\n    constructor(private comboBox: ComboBoxComponent, private valuePair: ValuePair) {\n\n    }\n\n    /* istanbul ignore next */\n    setAttribute(name: any, value: any) {\n        if (name === AttributesEnum.SELECTED || name === \"selected\") {\n            if (value == true || value == \"true\") {\n                this.comboBox.setSelectItem(this.valuePair, true);\n            } else {\n                this.comboBox.setSelectItem(null, true);\n            }\n\n            this.valuePair.selected = value == true || value == \"true\";\n\n            this.comboBox.detectChanges();\n        } else if (name === AttributesEnum.VISIBLE || name === \"visible\") {\n            this.valuePair.visible = value;\n        } else if (name === AttributesEnum.TEXT || name === \"text\") {\n            this.valuePair.text = value;\n        } else if (name === AttributesEnum.VALUE || name === \"value\") {\n            this.valuePair.value = value;\n        } else {\n            console.error(\"FauxComboElement: Unknown attribute: \" + name);\n        }\n    }\n\n    getLocalName(): string {\n        return FauxComboElement.LOCAL_NAME;\n    }\n\n    /* istanbul ignore next */\n    getAttribute(name: any) {\n        if (name === \"value\" || name === AttributesEnum.VALUE) {\n            return this.valuePair.value;\n        }\n\n        if (name === \"text\" || name === AttributesEnum.TEXT) {\n            return this.valuePair.text;\n        }\n\n        if (name === \"selected\" || name === AttributesEnum.SELECTED) {\n            return this.valuePair.selected == true ? \"true\" : \"false\";\n        }\n    }\n\n    /* istanbul ignore next */\n    getValue() {\n        return this.getAttribute(\"value\");\n    }\n\n    /* istanbul ignore next */\n    getText() {\n        return this.getAttribute(\"text\");\n    }\n\n    isSelected() {\n        return this.getAttribute(\"selected\");\n    }\n\n    setChecked(boo: boolean) {\n        this.setAttribute(\"selected\", boo);\n    }\n}","import { Component, ContentChild, OnInit, ElementRef, ChangeDetectionStrategy, SkipSelf, Optional, ChangeDetectorRef, Output, EventEmitter, Renderer2, Input, ViewEncapsulation, ViewChild, forwardRef, NgZone } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\n/* istanbul ignore next */\nimport { SessionService } from '../session/session.service';\n/* istanbul ignore next */\nimport { ListBoxDirective } from './list-box.directive';\nimport { ValuePair } from './value-pair';\n\nimport * as _ from 'lodash';\nimport { Vector } from '../java/vector';\nimport { FauxComboElement } from './faux-combo-element';\nimport { ViewComponent } from '../view/view.component';\nimport { BsDropdownDirective } from 'ngx-bootstrap';\n\n/* istanbul ignore next */\ndeclare var $: any;\n\n/* istanbul ignore else */\n/**\n * Class for combo box component\n */\n@Component({\n  selector: 'vt-combo-box',\n  templateUrl: './combo-box.component.html',\n  styleUrls: ['./combo-box.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(() => ComboBoxComponent)\n    }\n  ]\n})\nexport class ComboBoxComponent extends BaseComponent implements OnInit {\n  @Output() onCommand = new EventEmitter();\n\n  @ContentChild(ListBoxDirective)\n  listBox: ListBoxDirective;\n  @ViewChild('input') inputElement: ElementRef;\n\n  @ViewChild(\"dropdown\", { read: BsDropdownDirective }) dropdown: BsDropdownDirective;\n\n  hoveredItem: number;\n\n  hoveredStyle = {\n    'color': '#0000cd',\n    'background-color': '#ff9c00'\n  };\n\n  defaultStyle = {\n    'color': '#333333',\n    'background-color': '#ffffff'\n  };\n\n  dropdownElementId = `dropdown-${this.id}`;\n\n  @Input() set listItems(items: Array<ValuePair>) {\n    this._listItems = items;\n\n    if (this._listItems != null) {\n      const selectedItem = _.find(this._listItems, (item: ValuePair) => item.selected === true);\n\n      if (selectedItem != null) {\n        this.setSelectItem(selectedItem);\n      }\n    }\n  }\n  isDropup = false;\n\n  /**\n   * Accessor method for [[_listItems]] property\n   */\n  get listItems() {\n    return this._listItems;\n  }\n\n  private _listItems: Array<ValuePair>;\n  private isDropdownOpen = false;\n  selectedItem: ValuePair;\n  /* istanbul ignore next */\n  dropdownMenuStyle: { [key: string]: string } = {};\n  /* istanbul ignore next */\n  hasInputFocus: boolean = false;\n\n  /**\n   * Accessor method for [[selectedItem.text]] property\n   */\n  get selectedItemText(): string {\n    return this.selectedItem ? this.selectedItem.text : '';\n  }\n\n  private parentScrollHanlder: () => void;\n  private parentScroller: HTMLElement;\n\n// V3R1-UT-NSD-643 ä¿®æ­£ START\n  private isFirstKeyDown: boolean = true;\n// V3R1-UT-NSD-643 ä¿®æ­£ END\n\n  /**\n   *\n   * @param parent see [[BaseComponent]]\n   * @param sessionService see [[BaseComponent]]\n   * @param elementRef see [[BaseComponent]]\n   * @param cd ChangeDetector reference provided by Angular to control change detection\n   * @param renderer see [[BaseComponent]]\n   */\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, private cd: ChangeDetectorRef, renderer: Renderer2, private ngZone: NgZone) {\n    super(parent, sessionService, elementRef, renderer);\n\n    this.parentScrollHanlder = () => {\n      /* istanbul ignore else */\n      if (this.dropdown != null) {\n        this.dropdown.hide();\n      }\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.parentScrollHanlder != null && this.parentScroller != null) {\n      this.ngZone.runOutsideAngular(() => {\n        this.parentScroller.removeEventListener(\"scroll\", this.parentScrollHanlder);\n      });\n    }\n\n    this.parentScrollHanlder = null;\n    this.parentScroller = null;\n    if(this.dropdown && this.dropdown.isOpen) {\n      this.dropdown.hide();\n    }\n    this.dropdown = null;\n\n    super.ngOnDestroy();\n  }\n\n  /**\n   * Initialize component and set css stye attribute for dropdown element\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.dropdownElementId = `dropdown-${this.id}`;\n\n    // Ensure controlWidth is exists and is a number\n    if (parseInt(this.controlWidth, 10)) {\n      this.dropdownMenuStyle['min-width'] = this.controlWidth + 'px !important';\n    }\n\n    if (this.alignHorizontal) {\n      this.alignHorizontal = this.alignHorizontal;\n    }\n  }\n  /**\n   * Set up list items and set value/text on them. Sets selected item\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    if (this.listBox != null && this.listBox.listItems != null) {\n      this._listItems = [];\n\n      this.listBox.listItems.forEach((item) => {\n        let text = item.text || '',\n          value = item.value || '';\n        this._listItems.push({\n          text: text ? text : value,\n          value: value ? value : text,\n          selected: item.selected === true || item.selected === \"true\" || item.isChecked === true || item.isChecked === \"true\"\n        });\n      });\n\n      //selectd first item that is selected\n      const selectedItem = _.find(this._listItems, (item: ValuePair) => item.selected === true);\n\n      if (selectedItem != null) {\n        this.setSelectItem(selectedItem);\n      }\n    }\n\n    this.loadDataFromDef();\n\n    this.cd.detectChanges();\n\n    this.subscribeToParentScroller();\n\n  }\n\n  /**\n   * Sets combobox list using array of values\n   * @param values Array of [[ValuePairs]] to set combobox options.\n   */\n  initializeComboboxValues(values: Array<ValuePair>) {\n    if (values != null) {\n      this._listItems = _.map(values, (item) => {\n        item.text = item.text || '';\n\n        return {\n          text: item.text,\n          value: item.value,\n          selected: item.selected\n        }\n      });\n\n      //selectd first item that is selected\n      const selectedItem = _.find(this._listItems, (item: ValuePair) => item.selected === true);\n\n      if (selectedItem != null) {\n        this.setSelectItem(selectedItem);\n      }\n      else {\n        this.setSelectItem(this._listItems[0]);\n      }\n    } else {\n      this._listItems = [];\n    }\n\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Focuses and selects item that is clicked\n   * @param item Item to focus and select\n   * @param event Mouse click event on item\n   * @event onCommand\n   */\n  selectItem(item: ValuePair, event: MouseEvent) {\n    this.inputElement.nativeElement.focus();\n    this.setSelectItem(item);\n    if (this.emitInternalOnCommand() === false) {\n      this.onCommand.emit();\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Sets selected item that matches item [[ValuePair]] parameter\n   * @param item Item to set as selected\n   * @param forceCd Force change detection\n   */\n  setSelectItem(item: ValuePair, forceCd: boolean = false) {\n    this.selectedItem = item;\n\n    if (forceCd === true) {\n      this.cd.markForCheck();\n    }\n\n    //notify internal changes (for internal use only)\n    this._notifyInternalChangeCb();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Sets selected item based on value\n   * @param value Value to set\n   */\n  setSelectValue(value: string | number) {\n    if (this._listItems != null) {\n      const temp = _.find(this._listItems, (item: ValuePair) => item.value == value || (value != null && value !== \"\" && value === item.text));\n\n      if (temp != null) {\n        this.setSelectItem(temp);\n        this.cd.markForCheck();\n      }\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for mouse click on input\n   * @param event Mouse click event on input element.\n   */\n  onInputClick(event: MouseEvent, dropdown: BsDropdownDirective) {\n    event.stopPropagation();\n    this.hoveredStyle = {\n      'color': '#0000cd',\n      'background-color': '#ff9c00'\n    };\n    dropdown.toggle(true);\n \n    if (parseInt(this.controlWidthComboBox, 10)) {\n      this.dropdownMenuStyle['width'] = (parseInt(this.controlWidthComboBox)) + 'px';\n    }else{\n      this.dropdownMenuStyle['width'] = (parseInt(this.elementRef.nativeElement.children[0].children[0].children[0].clientWidth) + 20) + 'px';\n    }\n  }\n\n  /* istanbul ignore next */\n  onKeyDown(e: KeyboardEvent, dropdown: BsDropdownDirective) {\n    if (!this.isDropdownOpen && (e.keyCode === 38 || e.keyCode === 40)) { // 38 = UP arrow, 40 = DOWN arrow\n      this.hoveredStyle = this.defaultStyle;\n      e.preventDefault();\n      dropdown.toggle(true);\n// V3R1-UT-NSD-643 ä¿®æ­£ START\n      // è¨­å®ãããã«ãã¦ã³ã®ã¤ã³ããã¯ã¹\n      let idx: number = 0;\n      // ãã°ã«ãéãããã¦ããç¶æã§ã­ã¼ãã¼ãã®UPãDOWNãæ¼ä¸ãããå ´å\n      if (e.keyCode === 38) {\n        // UPã®å ´åããã«ãã¦ã³ã®æçµã«ç§»åãã¦ãã¾ããããæå¾ã®è¦ç´ ãè¨­å®ã¨ãã\n        idx = this._listItems.length - 1;\n      } else {\n        // DOWNã®å ´åãæåã®è¦ç´ ãè¨­å®ã¨ãã\n        idx = 0;\n      }\n      // :hoverç¶æã®ã¤ã³ããã¯ã¹ãæ´æ°\n      this.hoveredItem = idx;\n      // ãã«ãã¦ã³ãè¨­å®\n      this.selectItem(this._listItems[idx], null);\n      // ãã©ã°ãæ´æ°\n      this.isFirstKeyDown = false;\n\n    } else if (this.isDropdownOpen && (e.keyCode === 38 || e.keyCode === 40)) { // 38 = UP arrow, 40 = DOWN arrow\n      // ãã°ã«ãéãã¦ããç¶æãã¤ã­ã¼ãã¼ãã®UPãDOWNãæ¼ä¸ãããå ´å\n      this.hoveredStyle = this.defaultStyle;\n      e.preventDefault();\n\n      // è¨­å®ãããã«ãã¦ã³ã®ã¤ã³ããã¯ã¹\n      let idx: number = 0;\n      if (e.keyCode === 38) { // 38 = UP arrow\n        if (this.isFirstKeyDown || this.hoveredItem === 0) {\n          // ãã°ã«ãéãããç¶æã§ãåãã¦ã­ã¼ãæ¼ä¸ãããå ´å\n          // :hoverç¶æã®ãã«ãã¦ã³è¦ç´ ãä¸çªä¸ã®å ´å\n          // UPã¯æå¾ã®è¦ç´ ãè¨­å®ãã\n          idx = this._listItems.length - 1;\n        } else {\n          // ä¸è¨ä»¥å¤\n          // :hoverç¶æã®è¦ç´ ã®ï¼ã¤ä¸ãè¨­å®\n          idx = this.hoveredItem - 1;\n        }\n      } else { // 40 = DOWN arrow\n        if (this.isFirstKeyDown || this.hoveredItem === (this._listItems.length - 1)) {\n          // ãã°ã«ãéãããç¶æã§ãåãã¦ã­ã¼ãæ¼ä¸ãããå ´å\n          // :hoverç¶æã®ãã«ãã¦ã³è¦ç´ ãä¸çªä¸ã®å ´å\n          // åãã®è¦ç´ ãè¨­å®\n          idx = 0;\n        } else {\n          // ä¸è¨ä»¥å¤\n          // :hoverç¶æã®è¦ç´ ã®ï¼ã¤ä¸ãè¨­å®\n          idx = this.hoveredItem + 1;\n        }\n      }\n      // :hoverç¶æã®ã¤ã³ããã¯ã¹ãæ´æ°\n      this.hoveredItem = idx;\n      // ãã«ãã¦ã³ãè¨­å®\n      this.selectItem(this._listItems[idx], null);\n      // ãã©ã°ãæ´æ°\n      this.isFirstKeyDown = false;\n    }\n    this.cd.markForCheck();\n// V3R1-UT-NSD-643 ä¿®æ­£ END\n  }\n\n  adjustPulldownWidth() {\n    this.hoveredStyle = {\n      'color': '#0000cd',\n      'background-color': '#ff9c00'\n    };\n    if (parseInt(this.controlWidthComboBox, 10)) {\n      this.dropdownMenuStyle['width'] = (parseInt(this.controlWidthComboBox)) + 'px';\n    }else{\n      this.dropdownMenuStyle['width'] = (parseInt(this.elementRef.nativeElement.children[0].children[0].children[0].clientWidth) + 20) + 'px';\n    }\n  }\n\n  /* istanbul ignore next */\n  toggleStatus() {\n    if (!this.isDropdownOpen) {\n      let id = _.get(this.getParentScrollView(), \"id\");\n      let _this = this;\n      $(`#${id}`).on('scroll mousewheel', function(e) {\n        if (_this.dropdown != null) {\n          _this.dropdown.hide();\n        }\n        // return false;\n      });\n\n      const parentView: ViewComponent = this.getParentView() as ViewComponent;\n      if (parentView != null && parentView.dialog != null && parentView.dialog.modalContent && parentView.dialog.modalContent != null) {\n        let parentPanel = parentView.dialog && parentView.dialog.modalContent.nativeElement;\n        let comboBox = this.inputElement.nativeElement.parentElement;\n        let parentPos = parentPanel.getBoundingClientRect()\n        let childrenPos = comboBox.getBoundingClientRect()\n        let distanceToBottom = parentPos.bottom - childrenPos.bottom;\n        let distanceToTop = childrenPos.top - parentPos.top;\n        let heightOfBox = this._listItems ? Math.min(18 * this._listItems.length, 200) : 200;\n        if (distanceToBottom < 200) {\n          if (distanceToTop > 200) {\n            $(\".dropdown-menu\").parent().attr(\"class\", \"dropup\")\n          } else if (distanceToTop > distanceToBottom) {\n            $(\".dropdown-menu\").parent().attr(\"class\", \"dropup\")\n          } else {\n            $(\".dropdown-menu\").parent().attr(\"class\", \"dropdown\")\n          }\n        } else {\n          $(\".dropdown-menu\").parent().attr(\"class\", \"dropdown\")\n        }\n      } else if (parentView != null) {\n        let dialog = $(`#${parentView[\"mainScreenId\"]}`);\n        if (dialog != null && dialog.children() && dialog.children()[0] && dialog.children()[0] != null) {\n          let comboBox = this.inputElement.nativeElement.parentElement;\n          let parentPos = dialog.children()[0].getBoundingClientRect()\n          let childrenPos = comboBox.getBoundingClientRect()\n          let distanceToBottom = parentPos.bottom - childrenPos.bottom;\n          let distanceToTop = childrenPos.top - parentPos.top;\n          let heightOfBox = this._listItems ? Math.min(18 * this._listItems.length, 200) : 200;\n          if (distanceToBottom < 200) {\n            if (distanceToTop > 200) {\n              $(\".dropdown-menu\").parent().attr(\"class\", \"dropup\")\n            } else if (distanceToTop > distanceToBottom) {\n              $(\".dropdown-menu\").parent().attr(\"class\", \"dropup\")\n            } else {\n              $(\".dropdown-menu\").parent().attr(\"class\", \"dropdown\")\n            }\n          } else {\n            $(\".dropdown-menu\").parent().attr(\"class\", \"dropdown\")\n          }\n        }\n      }\n    } else {\n      let id = _.get(this.getParentScrollView(), \"id\");\n      $(`#${id}`).off('scroll mousewheel');\n// V3R1-UT-NSD-643 ä¿®æ­£ START\n      // ãã°ã«ãéããããã¿ã¤ãã³ã°ã§ãã©ã°ãæ»ã\n      this.isFirstKeyDown = true;\n// V3R1-UT-NSD-643 ä¿®æ­£ END\n      this.dropdown.hide();\n    }\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n  /**\n   * Sets the selected combobox option to 'val' parameter.\n   * @param val Value to set.\n   */\n  setValue(val: any) {\n    this.setSelectValue(val);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Sets the selected combobox option that matches 'text' parameter.\n   * @param text Text of option to mark as selected.\n   */\n  setText(text: string) {\n    if (text == null) {\n      this.setSelectItem(null);\n      this.cd.markForCheck();\n    } else if (this._listItems != null) {\n      const temp = _.find(this._listItems, (item: ValuePair) => item.text == text);\n\n      if (temp != null) {\n        this.setSelectItem(temp);\n        this.cd.markForCheck();\n      }\n    }\n  }\n\n  /**\n   * Returns the selected item value.\n   * @returns Value of the selected item in the combobox.\n   */\n  getValue(): any {\n    return this.selectedItem ? this.selectedItem.value : null;\n  }\n\n  /**\n   * Returns the text of the selected item.\n   * @returns String value of selected item text.\n   */\n  getText(): string {\n    return this.selectedItem ? this.selectedItem.text : \"\";\n  }\n\n  /**\n   * Focuses the native input element\n   */\n  setFocus() {\n    this.inputElement.nativeElement.focus();\n  }\n\n  /**\n   * Set the background color of the input element.\n   * @param bgColor A CSS color string value. Should be hexadecimal or valid color name.\n   */\n  setBgColor(bgColor: string) {\n    this.inputElement.nativeElement.style.backgroundColor = bgColor;\n  }\n\n  /**\n   * Finds a list item by text.\n   * @param text Item text to search for\n   * @returns [[ValuePair]] in [[_listItems]] that matches text\n   */\n  findItemByText(text: string) {\n    return _.find(this._listItems, (item: ValuePair) => item.text == text);\n  }\n\n  /**\n   * Gets all list items that are children of the combobox component.\n   * @returns Collection of list items.\n   */\n  getChildren(): Vector<any> {\n    const result = new Vector<any>();\n\n    if (this._listItems != null) {\n      _.forEach(this._listItems, (item) => {\n        result.add(new FauxComboElement(this, item));\n      });\n    }\n\n    return result;\n  }\n\n  /**\n   * Outputs JSON object that describes component\n   * @returns Object\n   */\n  toJson() {\n    const json: any = super.toJson();\n    json.value = this.getValue();\n\n    return json;\n  }\n\n  /**\n   * Returns string name of the component\n   * @returns String\n   */\n  getLocalName() {\n    return \"comboBox\";\n  }\n\n  /**\n   * Returns string tag name of component\n   */\n  protected getNxTagName() {\n    return \"comboBox\";\n  }\n\n  /* istanbul ignore next */\n  /**\n   * @returns [[ChangeDetector]] for the component\n   */\n  protected getChangeDetector() {\n    return this.cd;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Sets combobox values based on definition map\n   */\n  private loadDataFromDef() {\n    let defId: string = this.getId();\n\n    if (this.editor != null && this.editor.length > 0) {\n      defId = this.editor.substring(1);\n    }\n\n    const def = this.getSession().getDef(defId);\n\n    if (def != null && def.valueList != null) {\n      const attribute = def.attribute;\n\n      this.initializeComboboxValues(_.map(def.valueList, (item) => {\n        return {\n          value: item[\"value\"],\n          text: item[\"name\"],\n          selected: item[\"selectFlg\"] === \"true\" || item[\"selectFlg\"] === true\n        }\n      }));\n\n      this.setAttributeFromDef();\n    }\n  }\n\n  /**\n   * Removes focus from input element and sets unfocus background\n   * @event OnBeforeActiveLost\n   */\n  inputFocusOut() {\n    if (!this.hasInputFocus) return;//On the IE, prevent to fire focusout event without focusin event.(this occurs when error-dialog is showed.)issue#1433NG(2)\n    if (this.inputElement.nativeElement.ownerDocument.activeElement === this.inputElement.nativeElement) return;//prevent focuslost whenever active process is changed.\n    this.setBgColor('');\n    this.onBeforeActiveLost.emit();\n    this.hasInputFocus = false;\n    setTimeout(() => {\n      let $active = $(\":focus\");\n      if($active.length > 0 && !$active.is(\"body\") && $active.closest(\".vt-combo-box,[vt-arrow-navigatable-container]\").length == 0) {\n        if(this.dropdown && this.dropdown.isOpen) {\n          this.dropdown.hide();\n        }\n      }\n    }, 10);\n  }\n\n  /**\n   * if the interval between focusin and focusout event is less than 200ms, don't fire focusin.\n   */\n  inputFocusIn() {\n    this.hasInputFocus = true;\n  }\n\n  /**\n   * Delegate method wrapper for native browser preventDefault\n   * @param event Event object\n   */\n  preventDefault(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.inputElement.nativeElement.focus();\n  }\n\n  private subscribeToParentScroller() {\n    const scrollParent = $(this.elementRef.nativeElement).scrollParent();\n\n    if (scrollParent != null && scrollParent[0] instanceof HTMLElement) {\n      this.parentScroller = scrollParent[0];\n\n      this.ngZone.runOutsideAngular(() => {\n        this.parentScroller.addEventListener(\"scroll\", this.parentScrollHanlder);\n      });\n    }\n  }\n}\n","import { Directive, ElementRef, NgZone, OnDestroy, Renderer2, HostListener, Output, EventEmitter } from '@angular/core';\n\ndeclare var $: any;\n\n@Directive({\n  selector: '[vt-arrow-navigatable-item]',\n})\nexport class ArrowNavigatableItemDirective implements OnDestroy {\n  @Output() vtArrowOnMouseEnter: EventEmitter<void> = new EventEmitter<void>();\n  @Output() vtArrowOnMouseLeave: EventEmitter<void> = new EventEmitter<void>();\n\n  parent: any;\n  jq: any;\n\n  @HostListener(\"blur\")\n  handleOnBlur() {\n    this.blur();\n  }\n\n  @HostListener(\"focus\")\n  handleOnFocus() {\n    if (this.parent != null) {\n      this.parent.activeItem = this;\n    }\n  }\n\n  constructor(\n    public element: ElementRef,\n    private zone: NgZone,\n    private renderer: Renderer2\n  ) {\n    this.jq = $(this.element.nativeElement);\n\n    this.renderer.setAttribute(this.element.nativeElement, \"tabindex\", \"-1\");\n  }\n\n  ngOnDestroy() {\n    this.jq = null;\n    this.element = null;\n    this.zone = null;\n  }\n\n  focus() {\n    this.zone.run(()=>{\n      this.jq.mouseover();\n      this.jq.focus();\n      this.renderer.addClass(this.element.nativeElement, \"mouse-hover\");\n    });\n  }\n\n  blur() {\n    this.zone.run(()=>{\n      this.jq.mouseout();\n      this.jq.blur();\n      this.renderer.removeClass(this.element.nativeElement, \"mouse-hover\");\n    });\n  }\n\n  select() {\n    (this.element.nativeElement as HTMLElement).click();\n  }\n\n  hover() {\n    this.zone.run(()=>{\n      //(this.element.nativeElement as HTMLElement).dispatchEvent(new Event(\"mouseenter\"));\n      this.vtArrowOnMouseEnter.emit();\n    });\n  }\n\n  leave() {\n    this.zone.run(()=>{\n      this.vtArrowOnMouseLeave.emit();\n    });\n  }\n}\n","import { Directive, ContentChildren, QueryList, NgZone, ElementRef, OnDestroy, Output, EventEmitter, Input } from '@angular/core';\nimport { ArrowNavigatableItemDirective } from './arrow-navigatable-item.directive';\n\nimport * as _ from \"lodash\";\n\n@Directive({\n  selector: '[vt-arrow-navigatable-container]'\n})\n/**\n * Usage.\n * <ul vt-arrow-navigatable-container ...>\n *  <li vt-arrow-navigatable-item ...>\n *  <li vt-arrow-navigatable-item ...>\n * </ul>\n */\nexport class ArrowNavigatableContainerDirective implements OnDestroy {\n  @Input() activeParent: HTMLElement;\n  @Output() onItemHover: EventEmitter<ArrowNavigatableItemDirective> = new EventEmitter<ArrowNavigatableItemDirective>();\n  @Output() onTab: EventEmitter<void> = new EventEmitter<void>();\n\n  @ContentChildren(ArrowNavigatableItemDirective)\n  set navigatableItemsQuery(items: QueryList<ArrowNavigatableItemDirective>) {\n    if (items == null) {\n      this.navigatableItems = null;\n    } else {\n      this.navigatableItems = items.toArray();\n    }\n  }\n\n  private keydownHandler: (event: KeyboardEvent)=>void;\n\n  private activeItem: ArrowNavigatableItemDirective;\n\n  private navigatableItems: Array<ArrowNavigatableItemDirective>;\n\n  constructor(private zone: NgZone, private element: ElementRef) {\n    this.keydownHandler = (event)=>this.handleKeydown(event);\n    this.zone.runOutsideAngular(()=>{\n      (document).addEventListener(\"keydown\", this.keydownHandler);\n    });\n  }\n\n  ngOnDestroy() {\n    this.navigatableItems = null;\n    this.zone.runOutsideAngular(()=>{\n      (document).removeEventListener(\"keydown\", this.keydownHandler);\n    });\n\n    this.element = null;\n    this.keydownHandler = null;\n    this.navigatableItems = null;\n    this.activeItem = null;\n  }\n\n  private handleKeydown(event: KeyboardEvent) {\n    if (document.activeElement === this.element.nativeElement || document.activeElement === this.activeParent || this.isActiveElementDirectChildren()) {\n      //check for arrow key and do stuff\n      if (event.keyCode === 38 || event.key === \"ArrowUp\") {\n        this.moveUp();\n      } else if (event.keyCode === 40 || event.key === \"ArrowDow\") {\n        this.moveDown();\n      } else if (\n        event.keyCode === 13 || event.key === \"Enter\" ||\n        event.keyCode === 32 || event.key === \"Space\"\n      ) {\n        this.select();\n      } else if (event.keyCode === 39 || event.key === \"ArrowRight\") {\n        if (this.activeItem != null) {\n          this.activeItem.hover();\n        }\n      } else if (event.keyCode === 37 || event.key === \"ArrowLeft\") {\n        if (this.activeItem != null) {\n          this.activeItem.leave();\n        }\n      } else if (event.keyCode === 9 || event.key === \"Tab\") {\n        this.onTab.emit();\n      }\n    }\n  }\n\n  private moveUp() {\n    //can only go up if there are any items above\n    if (this.hasItems()) {\n      let idx = 0;\n\n      if (this.activeItem != null) {\n        this.activeItem.blur();\n        idx = _.findIndex(this.navigatableItems, (item)=>item === this.activeItem);\n      } else if (this.isActiveElementDirectChildren()) {\n        idx = _.findIndex(this.navigatableItems, (item)=> item.element.nativeElement === document.activeElement);\n\n        if (idx >= 0) {\n          this.navigatableItems[idx].blur();\n        }\n      }\n\n      if (idx < this.navigatableItems.length && idx > 0) {\n        this.activeItem = this.navigatableItems[idx - 1];\n        this.activeItem.focus();\n        this.onItemHover.emit(this.activeItem);\n      } else if (idx === 0) {\n        this.activeItem = this.navigatableItems[this.navigatableItems.length - 1];\n        this.activeItem.focus();\n        this.onItemHover.emit(this.activeItem);\n      }\n    }\n  }\n\n  private moveDown() {\n    if (this.hasItems()) {\n      let idx = -1;\n\n      if (this.activeItem != null) {\n        idx = _.findIndex(this.navigatableItems, (item)=>item === this.activeItem);\n\n        this.activeItem.blur();\n      } else if (this.isActiveElementDirectChildren()) {\n        idx = _.findIndex(this.navigatableItems, (item)=> item.element.nativeElement === document.activeElement);\n      }\n\n      if (idx < this.navigatableItems.length - 1) {\n        this.activeItem = this.navigatableItems[idx + 1];\n        this.activeItem.focus();\n        this.onItemHover.emit(this.activeItem);\n      } else if (idx == this.navigatableItems.length - 1) {\n        this.activeItem = this.navigatableItems[0];\n        this.activeItem.focus();\n        this.onItemHover.emit(this.activeItem);\n      }\n    }\n  }\n\n  private select() {\n    if (this.activeItem != null) {\n      this.activeItem.select();\n    }\n  }\n\n  private hasItems(): boolean {\n    return this.navigatableItems != null && this.navigatableItems.length > 0;\n  }\n\n  private isActiveElementDirectChildren() {\n    let retVal: boolean = false;\n\n    if (document.activeElement != null && this.navigatableItems != null && this.navigatableItems.length > 0) {\n      retVal = _.findIndex(this.navigatableItems, (item)=>item.element.nativeElement === document.activeElement) >= 0;\n    }\n\n    return retVal;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ArrowNavigatableContainerDirective } from './arrow-navigatable-container.directive';\nimport { ArrowNavigatableItemDirective } from './arrow-navigatable-item.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    ArrowNavigatableItemDirective,\n    ArrowNavigatableContainerDirective\n  ],\n  exports: [\n    ArrowNavigatableItemDirective,\n    ArrowNavigatableContainerDirective\n  ]\n})\nexport class KeyboardModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComboBoxComponent } from './combo-box.component';\nimport { ListBoxDirective } from './list-box.directive';\nimport { ListItemDirective } from './list-item.directive';\nimport { BsDropdownModule } from 'ngx-bootstrap';\nimport { KeyboardModule } from '../keyboard/keyboard.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot(),\n    KeyboardModule\n  ],\n  declarations: [ComboBoxComponent, ListBoxDirective, ListItemDirective],\n  exports: [\n    ComboBoxComponent,\n    ListBoxDirective,\n    ListItemDirective,\n    BsDropdownModule,\n    KeyboardModule\n  ],\n  entryComponents: [\n    ComboBoxComponent\n  ]\n})\nexport class ComboBoxModule { }\n","import { Directive, ElementRef, Input, Renderer2, AfterViewInit, OnDestroy, Host, ContentChild, NgZone } from '@angular/core';\nimport { SessionService } from '../session/session.service';\nimport { TableComponent } from '../table/table.component';\nimport { UiDocument } from '../base/ui-document';\nimport * as _ from 'lodash';\n\ninterface Position {\n  x: number,\n  y: number\n}\n\n@Directive({\n  selector: '[vtDraggable]',\n  host: {\n    // '(dragstart)': 'onDragStart($event)',\n    // '(dragend)': 'onDragEnd($event)',\n    // '(drag)': 'onDrag($event)',\n    '(click)': 'onClick($event)'\n  }\n})\nexport class DraggableDirective implements AfterViewInit, OnDestroy {\n  public positionAttrValues: Array<string> = ['absolute', 'fixed', 'relative'];\n  @Input() vtDraggable: boolean;\n  @Input(\"modal\") modal: boolean;\n  @Input() isView: boolean = true;\n\n  private viewId: string;\n  private tableId: string; //ãªãµã¤ãºæã«æä½ãããã¼ãã«ã¿ã°ã®ID\n\n  private parentElement:any;\n\n  @Input() title: string;\n\n  screenIndex: number;\n\n    /** @Input */ @Input() canDrag: boolean = true; //this is dumn but work around for now (for main mdi window where we don't want to drag)\n  @ContentChild('draggablePanel', { read: ElementRef }) draggablePanel: ElementRef;\n  @ContentChild('myModal', { read: ElementRef }) parentPanel: ElementRef;\n\n  mouseDownHandler: (event) => void;\n  mouseMoveHandler: (event) => void;\n  mouseUpHandler: (event) => void;\n\n  private canTrackMouseMove: boolean = false;\n  private mousePosition: Position = {\n    x: 0,\n    y: 0\n  };\n\n  constructor(\n    public renderer: Renderer2,\n    public ngZone: NgZone,\n    private sessionService: SessionService) {\n      this.mouseDownHandler = (event) => this.onMouseDownHandler(event);\n      this.mouseMoveHandler = _.throttle((event) => this.onMouseMoveHandler(event),75);\n      this.mouseUpHandler = (event) => this.onMouseUpHandler(event);\n  }\n\n  public addDragListeners() {\n    let dragElement: HTMLElement = this.getDragElement();\n\n    if (dragElement) {\n      this.ngZone.runOutsideAngular(() => {\n          dragElement.addEventListener('mousedown', this.mouseDownHandler, true);\n          document.addEventListener('mouseup', this.mouseUpHandler, true);\n          dragElement = null;\n      });\n    }\n  }\n\n  public removeDragListeners() {\n    let dragElement: HTMLElement = this.getDragElement();\n\n    if (dragElement) {\n        dragElement.removeEventListener('mousedown', this.mouseDownHandler, true);\n        document.removeEventListener('mousemove', this.mouseMoveHandler, true); // å¿µã®ããç½®ãã¦ãã\n        document.removeEventListener('mouseup', this.mouseUpHandler, true);\n        dragElement = null;\n    }\n  }\n\n  public ngAfterViewInit(): void {\n    this.addDragListeners();\n    if(this.isView){\n      this.parentElement = this.parentPanel.nativeElement;\n    }\n    else{\n      this.parentElement = this.parentPanel.nativeElement.parentElement.parentElement.parentElement;//get div('modal-dialog')\n    }\n    if (this.canDrag && this.parentElement != null) {\n      // const bound = this.getBound((this.parentPanel.nativeElement as HTMLElement).firstChild as HTMLElement);\n      // console.error(bound);\n      //this.parentPanel.nativeElement.style.position = \"absolute\";\n      //this.applyTranslate(bound.x, bound.y);\n    } else {\n      this.canDrag = false;\n    }\n\n  }\n\n  public ngOnDestroy(): void {\n    this.removeDragListeners();\n\n    delete this.renderer;\n    delete this.ngZone;\n    delete this.draggablePanel;\n    delete this.mouseDownHandler;\n    delete this.mouseMoveHandler;\n    delete this.mouseUpHandler;\n    delete this.parentPanel;\n  }\n\n  onMouseDownHandler(event: any) {\n    let dragElement: HTMLElement = this.getDragElement();\n\n    if (dragElement) {\n      this.ngZone.runOutsideAngular(() => {\n          document.addEventListener('mousemove', this.mouseMoveHandler, true);\n          dragElement = null;\n      });\n    }\n    this.mousePosition = {\n      x: event.pageX,\n      y: event.pageY\n    };\n\n    if (this.canDrag) {\n      if(this.isView){//for main dialog\n        const bound = this.getBound(this.parentElement);\n        this.renderer.setStyle(this.parentElement, \"position\", \"absolute\");\n        this.renderer.setStyle(this.parentElement, \"margin\", \"0\");\n        this.applyTranslate(bound.x, bound.y);\n        this.moveWindowToTop();\n        this.canTrackMouseMove = true;\n      }\n      else{//for error/info dialog\n        const bound = this.getBound(this.parentElement);\n        const height = this.parentElement.offsetHeight + 'px';\n        const width = this.parentElement.offsetWidth + 'px';\n        this.renderer.setStyle(this.parentElement, \"position\", \"absolute\");\n        this.renderer.setStyle(this.parentElement, \"margin\", \"0\");\n        this.renderer.setStyle(this.parentElement,'height', height);\n        this.renderer.setStyle(this.parentElement,'width', width);\n        this.applyTranslate(bound.x, bound.y);\n        this.canTrackMouseMove = true;\n      }\n    }\n  }\n\n  onMouseMoveHandler(event: MouseEvent) {\n    if (this.canDrag && this.canTrackMouseMove) {\n      const currentMousePosition: Position = {\n        x: event.pageX,\n        y: event.pageY\n      }\n\n      const diffX = currentMousePosition.x - this.mousePosition.x;\n      const diffY = currentMousePosition.y - this.mousePosition.y;\n\n      const parentBound = this.getBound(this.parentElement);\n\n      const newX = parentBound.x + diffX;\n      const newY = parentBound.y + diffY;\n      this.applyTranslate(newX, newY);\n      this.mousePosition = currentMousePosition;\n    }\n  }\n\n  onMouseUpHandler(event: any) {\n    let dragElement: HTMLElement = this.getDragElement();\n\n    if (dragElement) {\n        document.removeEventListener('mousemove', this.mouseMoveHandler, true);\n        dragElement = null;\n    }\n\n    if (this.canDrag && this.canTrackMouseMove) {\n      this.canTrackMouseMove = false;\n    }\n\n  }\n\n  onClick(event: MouseEvent) {\n    if (this.canDrag) {\n      if(this.isView) this.moveWindowToTop();\n    }\n  }\n\n  applyTranslate(x: number, y: number) {\n    if (y > 0) {\n      this.ngZone.runOutsideAngular(() => {\n        let top: number = 0;\n        // let left: number = 0;\n\n        // This is height of app header\n        let topMax = 82;\n\n        if(this.isView) {\n          top = Math.max(y, topMax);\n        } else {\n          top = Math.max(y, 0);\n        }\n\n        if (this.sessionService.dialogMaxTopPosition > 0 && top > this.sessionService.dialogMaxTopPosition) {\n          top = this.sessionService.dialogMaxTopPosition;\n        }\n\n        //#1587: in the as-is, there is no limit to where you can drag the window to the left/right\n        //left = Math.max(x, 0);\n\n        this.renderer.setStyle(this.parentElement, 'top', top + 'px');\n        this.renderer.setStyle(this.parentElement, 'left', x + 'px');\n      });\n    }\n  }\n\n  moveWindowToTop() {\n    this.sessionService.getMcoContainer().reStackView(this.viewId, this.screenIndex);\n  }\n\n  setViewId(id: string) {\n    if (id != null) {\n      this.viewId = id;\n    }\n  }\n\n  setTableId(id: string) {\n    if (id != null) {\n      this.tableId = id;\n    }\n  }\n\n  private getDragElement(): HTMLElement {\n    if (this.vtDraggable === true && this.draggablePanel) {\n      return this.draggablePanel.nativeElement;\n    }\n\n    return null;\n  }\n\n  private getBound(el: HTMLElement): Position {\n    const bound = el.getBoundingClientRect() as DOMRect;\n\n    return {\n      x: bound.x || bound.left,\n      y: bound.y || bound.top\n    }\n  }\n}\n","import { Injectable, ViewContainerRef, ComponentFactoryResolver, Type, ComponentRef } from '@angular/core';\n\nimport * as _ from \"lodash\";\nimport { ViewComponent } from './view.component';\nimport { SessionService } from '../session/session.service';\n\n/**\n * Class for managing dynamic views\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicPagesService {\n  private viewContainer: ViewContainerRef;\n  private dynamicViewsMap: Array<ComponentRef<ViewComponent>> = [];\n  static onCreateViewCloser: (sessionService: SessionService, viewType: Type<ViewComponent>, routeId: string) => void = null;\n\n  /**\n   * \n   * @param viewFactory \n   */\n  constructor(\n    private viewFactory: ComponentFactoryResolver,\n    private sessionService: SessionService\n  ) { }\n\n  /* istanbul ignore next */\n  /**\n   * Set the [[viewContainer]] property to reference a [[ViewContainer]]\n   * @param viewContainer \n   */\n  registerViewContainer(viewContainer: ViewContainerRef) {\n    this.viewContainer = viewContainer;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Create a new [[ViewComponent]] instance\n   * @param viewType \n   * @param routeId \n   */\n  createDynamicView(viewType: Type<ViewComponent>, routeId: string = null): Promise<ViewComponent> {\n    // For suppress warning (Circular dependency), it is not able to call ViewComponent's method directly here.\n    if(DynamicPagesService.onCreateViewCloser) {\n      DynamicPagesService.onCreateViewCloser(this.sessionService, viewType, routeId);\n    }\n\n    if (this.sessionService.getMessagingService() != null) {\n      this.sessionService.getMessagingService().setFreezePushService(true);\n    }\n\n    const view = this.viewContainer.createComponent(this.viewFactory.resolveComponentFactory(viewType));\n    this.dynamicViewsMap.push(view);\n    view.instance.isDynamicPage = true;\n\n    view.changeDetectorRef.detectChanges();\n    return new Promise<ViewComponent>((r, j)=>{\n      //has route id?\n      if (routeId != null && routeId !== \"\") {\n        view.instance[\"routeId\"] = routeId;\n      }\n\n      if (view.instance.viewIsInitialized === true) {\n        if (this.sessionService.getMessagingService() != null) {\n          this.sessionService.getMessagingService().setFreezePushService(false);\n        }\n\n        r(view.instance);\n      } else {\n        const sub = view.instance.viewInitialized.subscribe(()=>{\n          sub.unsubscribe();\n          \n          if (this.sessionService.getMessagingService() != null) {\n            this.sessionService.getMessagingService().setFreezePushService(false);\n          }\n\n          r(view.instance);\n        });\n      }\n    });\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Destroy [[ViewComponent]] instance reference\n   * @param viewToRemove \n   * @param immediate\n   */\n  removeView(viewToRemove: ViewComponent, immediate: boolean) {\n    const deadView = _.find(this.dynamicViewsMap, (view: ComponentRef<ViewComponent>)=>{\n      return view.instance.uniqueId == viewToRemove.uniqueId;\n    });\n\n    this.dynamicViewsMap = _.filter(this.dynamicViewsMap, (view: ComponentRef<ViewComponent>)=>{\n      return view.instance.uniqueId != viewToRemove.uniqueId;\n    });\n\n    if (viewToRemove.isDestroyed !== true && deadView != null) {\n      if(immediate) {\n        deadView.destroy();\n      } else {\n        setTimeout(() => {\n          deadView.destroy();\n        }, 1);\n      }\n    }\n  }\n}\n","import { appInjector } from \"../session/app-injector\";\nimport { McoContainerService } from \"../mco-container/mco-container.service\";\nimport { BaseComponent } from \"../base/base.component\";\nimport { AttributesEnum } from \"./attributes.enum\";\nimport { MenuItemComponent } from \"../popup-menu/menu-item/menu-item.component\";\nimport { Logger } from \"./logger\";\nimport { ComboBoxComponent } from \"../combo-box/combo-box.component\";\nimport { ValuePair } from \"../combo-box/value-pair\";\nimport { ContextMenuService } from \"../popup-menu/context-menu.service\";\nimport { MenuItemBuilder } from \"../popup-menu/menu-item-builder\";\nimport { NgZone } from \"@angular/core\";\n\n/**\n * Document object class to access virtual DOM\n */\n\n// @dynamic -- this line comment is necessary to prevent packagr error\nexport class UiDocument {\n  static menuItemElementMap: Map<string, MenuItemComponent> = null;\n\n  /**\n   * Get [[MenuItemComponent]] by id key in [[menuItemElementMap]]\n   * @param id\n   */\n  static getMenuComponent(id: string): any {\n    if (this.menuItemElementMap == null) {\n      return null;\n    }\n\n    return this.menuItemElementMap.get(id);\n  }\n\n  /**\n   * Alias for [[findElementById]]\n   * @param id\n   */\n  static getElementById(id: string) {\n    return UiDocument.findElementById(id);\n  }\n\n  /**\n   * Search for and return a component by id\n   * @param id ViewComponent id\n   */\n  static findElementById(id: string): BaseComponent {\n    if (id == null) return null;\n\n    //WARNING: We can't cache here as we don't id here is NOT unique!!\n    let comp: BaseComponent = null;\n\n    if (!appInjector()) return;\n    const mcoContainer: McoContainerService = appInjector().get(McoContainerService);\n\n    if (mcoContainer != null) {\n      comp = mcoContainer.getViewById(id);\n\n      if (comp == null && mcoContainer.activeView() != null) {\n        comp = mcoContainer.activeView().findElementById(id);\n      }\n\n      if (comp == null) {\n        comp = this.getMenuComponent(id);\n      }\n\n      if (comp == null) {\n        const views = mcoContainer.getViews();\n\n        for (let view of views) {\n          if (view.id === id) {\n            comp = view;\n          } else {\n            comp = view.findElementById(id);\n          }\n\n          if (comp != null) {\n            break;\n          }\n        }\n      }\n\n      //our component is in a subview?\n      if (comp == null && mcoContainer.getActionForwardHandlerMap() != null) {\n        const actionForwardIt = mcoContainer.getActionForwardHandlerMap().values();\n        let forwardItResult = actionForwardIt.next();\n\n        while(forwardItResult.done !== true) {\n          comp = forwardItResult.value.findElementById(id);\n\n          if (comp != null) {\n            break;\n          }\n\n          forwardItResult = actionForwardIt.next();\n        }\n      }\n    } else {\n      comp = this.getMenuComponent(id);\n    }\n\n    /////////////////WARNING!!!!!!!!!!!!!!!!!!!!!!!\n    //MenuItem???? for special case where right click event of inner comp of table column\n    //is trigger before row context menu is trigger (row context menu display popup menu)\n    //this special component is MenuItemBuilder so it only support setAttribute\n    if (comp == null) {\n      const mcoContainer: McoContainerService = appInjector().get(McoContainerService);\n\n      if (mcoContainer != null) {\n        const activeView = mcoContainer.activeView();\n\n        if (activeView != null && activeView.hasPopupMenu()) {\n          const contextMenuService = appInjector().get(ContextMenuService);\n\n          if (contextMenuService != null) {\n            const popupMenuItems = contextMenuService.getContextMenuItems(activeView.getFirstPopupMenuId());\n\n            if (popupMenuItems != null) {\n              const menuItem = popupMenuItems.find(item=>{\n                return item.id === id;\n              });\n\n              if (menuItem != null) {\n                //fake component, specifically for menu\n                comp = MenuItemBuilder.fromMenuItem(menuItem) as any;\n\n                contextMenuService._trackMenuItemBuilderForMemRelease(comp as any);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return comp;\n  }\n\n  /**\n   * Get JSON representation of component\n   * @returns Object JSON metadata for this component\n   */\n  static toJson(): {} {\n    const views = appInjector().get(McoContainerService).getViews();\n    const json = {};\n\n    for (let view of views) {\n      json[view.getId()] = view.toJson();\n    }\n\n    return json;\n  }\n\n  /**\n   * Set attribute with value on component by id\n   * @param id Component id\n   * @param attributeName Name of attribute to set\n   * @param value Value of attribute to set\n   */\n  static setElementAttribute(id: string, attributeName: string | AttributesEnum, value: any) {\n    const element = this.getElementById(id);\n\n    if (element != null) {\n      element.setAttribute(attributeName, value);\n    } else {\n      Logger.warn(`Unable to set attribute to element id: ${id}, doesn't exists`);\n    }\n  }\n\n  /**\n   * Get the value of an attribute if it exists, otherwise return null\n   * @param id Component id\n   * @param attributeName Name of attribute value to get\n   */\n  static getElementAttribute(id: string, attributeName: string | AttributesEnum) {\n    const element = this.getElementById(id);\n\n    if (element != null) {\n      return element.getAttribute(attributeName);\n    } else {\n      Logger.warn(`Unable to get attribute to element id: ${id}, doesn't exists`);\n    }\n\n    return null;\n  }\n\n  /**\n   * Add a [[MenuItemComponent]] to internal [[menuItemElementMap]]\n   * @param id Key to use in map for menu item being added\n   * @param menuItemElement Component to add to map\n   */\n  static registerMenuItemElement(id: string, menuItemElement: MenuItemComponent) {\n    if (this.menuItemElementMap == null) {\n      this.menuItemElementMap = new Map();\n    }\n\n    this.menuItemElementMap.set(id, menuItemElement);\n\n    //track menu item for sending to server\n    if (menuItemElement.item != null && menuItemElement.item.parentScreenId != null) {\n      const mcoContainer: McoContainerService = appInjector().get(McoContainerService);\n\n      if (mcoContainer != null) {\n        const activeView = mcoContainer.getViewById(menuItemElement.item.parentScreenId);\n\n        if (activeView != null) {\n          activeView.trackInactiveMenuItem(menuItemElement);\n        }\n      }\n    }\n  }\n\n  /**\n   * Remove [[MenuItemComponent]] from internal [[menuItemElementMap]]\n   * @param id Key of menu item to remove from map\n   */\n  static unregisterMenuItemElement(id: string) {\n    if (this.menuItemElementMap != null) {\n      this.menuItemElementMap.delete(id);\n    }\n  }\n\n  /**\n   * Sets [[ComboboxComponent]] values\n   * @param id Combobox component id\n   * @param values Initial values to set on combobox component\n   */\n  static initializeComboBoxValues(id: string, values: Array<ValuePair>) {\n    const comp: ComboBoxComponent = this.findElementById(id) as any;\n\n    if (comp != null) {\n      comp.initializeComboboxValues(values);\n    } else {\n      console.warn(\"Unable to initialie combo: \" + id);\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Focus the parent tab of this [[elementId]]\n   * @param elementId the element id where we want its parent tab to be focused\n   */\n  static focusParentTab(elementId: string) {\n    if (elementId != null) {\n      const comp = this.findElementById(elementId);\n\n      if (comp != null && typeof comp[\"focusParentTab\"] === \"function\") {\n        comp[\"focusParentTab\"]();\n      }\n\n      if (comp != null) {\n        appInjector().get(NgZone).runOutsideAngular(()=>{\n          setTimeout(()=>{\n            comp.setFocus();\n          }, 100);\n        });\n      }\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  OnInit,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  Inject,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  SkipSelf,\n  Optional,\n  ViewContainerRef,\n  TemplateRef,\n  ContentChild,\n  Renderer2,\n  Output,\n  EventEmitter,\n  NgZone\n} from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\nimport { InitialPosition } from '../base/initial-position';\nimport { DraggableDirective } from './draggable.directive';\nimport { DynamicPagesService } from '../view/dynamic-pages.service';\nimport { TableComponent } from '../table/table.component';\nimport { UiDocument } from '../base/ui-document';\n\nimport * as _ from 'lodash';\n\n//this stupid thing is needed b/c ng-packagr is complained about namespace\nimport * as tabbableFRollup from \"tabbable\";\nimport { JavaUtils } from '../java/java-utils';\n\nconst tabbable = tabbableFRollup;\n\ndeclare var $: any;\n\n/*\n * Modal markup placement.\n * Always try to place a modal's HTML code in a top-level position in your document to\n * avoid other components affecting the modal's appearance and/or functionality.\n*/\n\n/**\n * Class for dialog component\n */\n@Component({\n  selector: 'vt-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DialogComponent extends BaseComponent implements OnInit, AfterViewInit {\n  @ViewChild('modalBody') body: ElementRef;\n  @ViewChild(\"modalDialog\") modalDialog: ElementRef;\n  @ViewChild(\"modalContent\") modalContent: ElementRef;\n\n  @Input() title: String;\n  @Input() draggable: boolean = true; //default to true\n  @Input() initialPosition: InitialPosition;\n\n  //modal is default to false, when true, it is blocking\n  @Input()\n  set modal(modal: string | boolean) {\n    this._modal = modal;\n\n    this.updateModalDialogStyle();\n  }\n\n  get modal() {\n    return this._modal;\n  }\n\n  private _modal: string | boolean = \"false\";\n\n  @Input() set centered(boo: boolean | string) {\n    if (typeof boo === 'string') {\n      this._center = boo === 'true' ? true : false;\n    } else {\n      this._center = boo;\n    }\n  }\n\n  //alias\n  @Input() set windowTitle(title: string) {\n    this.title = title;\n  }\n\n  _center: boolean = false;\n  @Input() modalSize: string = 'large';\n\n  @Input() resizeable: boolean = false;\n\n  @Output() onClosing: EventEmitter<void> = new EventEmitter<void>();\n\n  @ViewChild('myModal', {read: ElementRef}) modalElement: ElementRef;\n  @ViewChild('viewContainer', {read: ViewContainerRef}) viewContainer: ViewContainerRef;\n  @ViewChild('draggablePanel', {read: ViewContainerRef}) draggablePanel: ViewContainerRef;\n  @ViewChild(DraggableDirective) draggableDirective: DraggableDirective;\n\n  modalWidth: number | string = '100%';\n  modalHeight: number | string = '100%';\n  modalBodyHeight: number | string = '100%';\n  isMaximize: boolean = false;\n  isUnMaximize: boolean = false;\n  contentWidth: string;\n  contentHeight: string;\n\n  static readonly UNMAXIMIZE_HEGHT: string =\"20px\";\n\n  // ç»é¢ãªãµã¤ãºå¯¾å¿ Start\n  @Input() resizeDialog: boolean = false;\n  modalBodyMinHeight: string = null;\n  modalBodyDivHeight: string = null;\n  modalBodyDivWidth: string = null;\n  modalBodyPercentHeight: string = null;\n  // ç»é¢ãªãµã¤ãºå¯¾å¿ End\n  resizeFlg: boolean = false;\n\n  modalOriginalLeft: number = 0;\n  modalOriginalTop: number = 0;\n\n  /* istanbul ignore next */\n  bsModalClass = [\"vt-dialog\", \"modal\", \"fade\", \"in\"];\n\n  private viewRouteUrl: string = '';\n\n  private viewId: string;\n  @Input() tableId: string; //ãªãµã¤ãºæã«æä½ããå¯¾è±¡ã¨ãªããã¼ãã«ã¿ã°ã®ID\n\n  screenIndex: number;\n\n  //sophia 1803: track disabled element that has error background\n  _disabledErrorElementId: Array<string>;\n  _canTrackFocusLostOnErrorDisabled: boolean;\n\n  //tab cycling\n  private _tabbables: Array<HTMLElement>;\n  private wasClickOutside: boolean;\n  private docClickHandler: (event: MouseEvent)=>void;\n  private modalFocusOutHandler: (event: FocusEvent)=>void;\n  private keydownHandler: (event: KeyboardEvent)=>void;\n\n  /* istanbul ignore next */\n  /**\n   *\n   * @param parent see [[BaseComponent]] constructor\n   * @param sessionService see [[BaseComponent]] constructor\n   * @param elementRef see [[BaseComponent]] constructor\n   * @param cd [[ChangeDetectorRef]] to inject\n   * @param renderer see [[BaseComponent]]\n   * @param dynamicPageService [[DynamicPageService]] instance to inject\n   * @param zone Angular zone\n   */\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, private cd: ChangeDetectorRef, renderer: Renderer2, private dynamicPageService: DynamicPagesService, private zone: NgZone) {\n    super(parent, sessionService, elementRef, renderer);\n\n    this.docClickHandler = (event: MouseEvent)=>{\n      this.handleDocClickEvent(event);\n    };\n\n    this.modalFocusOutHandler = (event: FocusEvent)=>{\n      this.checkFocusOut(event);\n    };\n\n    this.keydownHandler = (event: KeyboardEvent)=>{\n      this.checkKey(event);\n    }\n  }\n\n  /**\n   * Set [[viewRouteUrl]] property\n   * @param viewRouteUrl\n   */\n  setViewRouteUrl(viewRouteUrl: string) {\n    this.viewRouteUrl = viewRouteUrl;\n  }\n\n  /**\n   * Set draggable directive id and [[id]]\n   */\n  resetId() {\n    this.updateDraggableDirectiveId();\n    super.resetId();\n\n    this.cd.detectChanges();\n  }\n\n  /**\n   * ä¸è¦§ç»é¢ããã³ãã¬ã¼ããè¡¨ç¤ºãã¦ããç»é¢ã§æ¨ªã¹ã¯ã­ã¼ã«ãã§ã¦ãã¾ãäºè±¡ãåé¿ããããã®ã¡ã½ãã\n   * ååãªãµã¤ãºãã\n   */\n  dialogResize() {\n    /* istanbul ignore else */\n    if (this.resizeFlg === false) {\n      //this.resizeExecute();\n      this.resizeFlg = true;\n      this.setDisabledDialogWidth();\n    }\n  }\n\n    /**\n   * ä¸è¦§ç»é¢ããã³ãã¬ã¼ããè¡¨ç¤ºãã¦ããç»é¢ã§æ¨ªã¹ã¯ã­ã¼ã«ãã§ã¦ãã¾ãäºè±¡ãåé¿ããããã®ã¡ã½ãã\n   * ãªãµã¤ãºãè¡ã\n   */\n  resizeExecute() {\n    const bound: DOMRect = (this.modalElement.nativeElement.firstChild.lastElementChild as HTMLElement).getBoundingClientRect() as DOMRect;\n    const newX = bound.right - bound.left + 20;\n    this.zone.runOutsideAngular(() => {\n      this.renderer.setStyle(this.modalElement.nativeElement.firstChild.lastElementChild, 'width', newX + 'px');\n    });\n    this.cd.detectChanges();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Init lifecycle. Sets [[viewId]]\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.viewId = this.id;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Destroy lifecycle. Cleans up references\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    this.modalDialog = null;\n    this.modalContent = null;\n\n    if (this.viewContainer != null) {\n      this.viewContainer.clear();\n      this.viewContainer = null;\n    }\n\n    if (this.draggablePanel != null) {\n      this.draggablePanel.clear();\n      this.draggablePanel = null;\n    }\n\n    if (this.docClickHandler != null) {\n      document.removeEventListener(\"mousedown\", this.docClickHandler);\n    }\n\n    if (this.modalFocusOutHandler != null) {\n      (this.modalElement.nativeElement as HTMLElement).removeEventListener(\"focusout\", this.modalFocusOutHandler, true);\n    }\n\n    if (this.keydownHandler) {\n      (this.modalElement.nativeElement as HTMLElement).removeEventListener(\"keydown\", this.keydownHandler, true);\n    }\n\n    this.docClickHandler = null;\n    this.modalFocusOutHandler = null;\n    this.keydownHandler = null;\n\n    this.draggableDirective = null;\n    this.modalElement = null;\n    this._tabbables = null;\n  }\n\n  /**\n   * After view init lifecycle. Sets initial dialog height/width and positioning\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    //add 80px for grid padding\n    this.modalWidth = parseInt(this.controlWidth) + 80;\n    this.modalHeight = parseInt(this.controlHeight) + 80;\n\n    // ç»é¢ãªãµã¤ãºå¯¾å¿ Start\n    if (this.resizeDialog) {\n      this.modalBodyPercentHeight = \"calc(100% - 25px)\"; //modal-headeråãåã£ã¦è¨­å®\n      this.modalBodyDivHeight = \"100%\";\n      this.modalBodyDivWidth = \"100%\";\n      this.modalBodyMinHeight = \"auto\";\n    } else {\n      this.modalBodyHeight = parseInt(this.controlHeight) - 25; //modal-headeråãåã£ã¦è¨­å®\n    }\n    // ç»é¢ãªãµã¤ãºå¯¾å¿ End\n\n    this.cd.detectChanges();\n\n    if (this.modal !== \"true\" && this.modal !== true) {\n      this.setModalLessPosition();\n      this.bsModalClass.push(\"modaless\");\n      this.cd.detectChanges();\n    } else {\n      //disable buttons\n      $(\".header\").addClass(\"header-disabled\");\n      $(\".footer\").addClass(\"footer-disabled\");\n    }\n\n    this.setInitialPosition(this.initialPosition);\n    this.updateDraggableDirectiveId();\n\n    this.setDisabledDialogWidth();\n    // if(this.resizeDialog){ ä¸æçã«ã³ã¡ã³ãã¢ã¦ã\n      $(this.modalElement.nativeElement).resizable({\n        handles: 'n, e, s, w, ne, se, sw, nw',\n        minWidth: 150,\n        minHeight: 20,\n        resize: (event, ui)=>{\n          //topå ´æå¶éè¨­å®\n          if (ui.position.top <= 82){\n            ui.position.top = 82;\n            return;\n          }\n          ui.element.css(\"min-height\", \"\");\n          ui.element.css(\"min-width\", \"\");\n\n          $(this.modalDialog.nativeElement).css(\"height\", ui.size.height);\n          $(this.modalDialog.nativeElement).css(\"width\", ui.size.width);\n\n          $(this.modalContent.nativeElement).css(\"height\", ui.size.height);\n          $(this.modalContent.nativeElement).css(\"width\", ui.size.width);\n\n          $(this.body.nativeElement).css(\"min-height\", \"calc(100% - 25px)\");\n\n          if (this.tableId != null) {\n            const table: TableComponent = UiDocument.getElementById(this.tableId) as TableComponent;\n            if (table != null) {\n              table.tableResize();\n            }\n          }\n        }\n      });\n      $(this.modalElement.nativeElement).on( \"resizestop\", ()=> {\n        this.setDisabledDialogWidth();\n      });\n    // }\n\n    this._tabbables= tabbable(this.body.nativeElement);\n\n    this.zone.runOutsideAngular(()=>{\n      document.addEventListener(\"mousedown\", this.docClickHandler);\n      (this.modalElement.nativeElement as HTMLElement).addEventListener(\"focusout\", this.modalFocusOutHandler, true);\n      (this.modalElement.nativeElement as HTMLElement).addEventListener(\"keydown\", this.keydownHandler, true);\n    });\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set the width of disabled-dialog with the width of the modal-content\n   */\n  private setDisabledDialogWidth(){\n    const element = this.modalElement.nativeElement;\n    this.renderer.setStyle(element.querySelector('.disabled-dialog'),'width', element.querySelector('.modal-content').offsetWidth+'px');\n    this.renderer.setStyle(element.querySelector('.disabled-dialog'),'height', element.querySelector('.modal-content').offsetHeight+'px');\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Sets the [[draggableDirective]] view id to the dialog instance [[id]]\n   */\n  private updateDraggableDirectiveId() {\n    if (this.draggableDirective != null) {\n      this.draggableDirective.setViewId(this.id);\n      this.draggableDirective.setTableId(this.tableId);\n      this.draggableDirective.screenIndex = this.screenIndex;\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set position of window component\n   */\n  private setModalLessPosition() {\n    const bound: DOMRect = (this.modalElement.nativeElement.firstChild as HTMLElement).getBoundingClientRect() as DOMRect;\n    const left = (bound.x || bound.left) + \"px\";\n    const top = (Math.max(bound.y || bound.top, 120)) + \"px\";\n\n    this.renderer.setStyle(this.modalElement.nativeElement, \"left\", left);\n    this.renderer.setStyle(this.modalElement.nativeElement, \"top\", top);\n  }\n\n  /**\n   * Get the native HTML element of this dialog\n   * @returns DOM element\n   */\n  getElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for click on close button. Closes the window\n   * @param event\n   * @param immediate\n   */\n  close(event: MouseEvent = null, immediate: boolean = false) {\n    // this.bsModalClass = [\"vt-dialog\", \"modal\", \"fade\", \"out\"];\n\n    //this.cd.detectChanges();\n\n    if (event != null) {\n      event.stopPropagation();\n    }\n\n    if (this.modal === \"true\" || this.modal === true) {\n      $(\".header\").removeClass(\"header-disabled\");\n      $(\".footer\").removeClass(\"footer-disabled\");\n    }\n\n    if (this.getParent() != null && this.getParent().isView() && this.getParent().isDynamicView()) {\n      this.dynamicPageService.removeView(this.getParent() as any, immediate);\n    } else {\n      if (this.getSession() != null && this.getSession().getRouteNavigatorService() != null) {\n        this.getSession().getRouteNavigatorService().destroyRoute(this.viewRouteUrl);\n      } else {\n        console.error(\"Unable to change route, session or route navigation service is not defined\");\n      }\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set [[disabled]] property value\n   * @param boo Value for disabled property\n   */\n  setDisabled(boo: boolean){\n    this.disabled = boo;\n    $(this.modalElement.nativeElement).resizable( \"option\", \"disabled\", boo );//Don't remove this. This makes disabled-dialog not to be resizable.\n    $(this.modalElement.nativeElement.querySelector('.modal-content')).disabled = boo;//I am not sure why this is needed.\n  }\n\n  /**\n   * Sets the dialogs 'z-index' CSS property\n   * @param newZIndex\n   */\n  updateZIndex(newZIndex: number) {\n    if (this.modalElement != null && this.renderer != null) {\n      this.renderer.setStyle(this.modalElement.nativeElement, \"z-index\", newZIndex);\n    }\n\n    this.setInactiveDialogStyle();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set inactive window style if this dialog is not the current active dialog\n   */\n  setInactiveDialogStyle() {\n    const inactiveDialogClass = 'inactive-dialog';\n\n    // Apply inactive dialog class when other window is focused\n    if (\n      this.getSession().getMcoContainer().activeView() == null ||\n      this.getSession().getMcoContainer().activeView().id != this.viewId\n    ) {\n      this.bsModalClass.push(inactiveDialogClass);\n    } else {\n      this.bsModalClass = _.filter(this.bsModalClass, (c)=> {\n        return c !== inactiveDialogClass;\n      });\n    }\n\n    //we used OnPush and change detector only know that it needs to do something if\n    //our style array is immutable, so we need to tell it that changes happen.\n    this.cd.markForCheck();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set position of this dialog when it is first opened\n   * @param position Window position\n   */\n  setInitialPosition(position: InitialPosition) {\n    if (position != null) {\n      if (position.left >= 0) {\n        this.renderer.setStyle(this.modalElement.nativeElement, \"left\", position.left + \"px\");\n      } else {\n        this.renderer.setStyle(this.modalElement.nativeElement, \"left\", \"auto\");\n      }\n\n      if (position.right >= 0) {\n        this.renderer.setStyle(this.modalElement.nativeElement, \"right\", position.right + \"px\");\n      }\n\n      if (position.top >= 0) {\n        this.renderer.setStyle(this.modalElement.nativeElement, \"top\", position.top + \"px\");\n      } else {\n        this.renderer.setStyle(this.modalElement.nativeElement, \"top\", \"auto\");\n      }\n\n      if (position.bottom >= 0) {\n        this.renderer.setStyle(this.modalElement.nativeElement, \"bottom\", position.bottom + \"px\");\n      } else {\n        this.renderer.setStyle(this.modalElement.nativeElement, \"bottom\", \"auto\");\n      }\n    }\n\n    // header height and footer height\n    const appHeader = $(\".header\")[0];\n\n    /* istanbul ignore if */\n    //appHeader can be null (in unit test, etc)\n    if (appHeader) {\n      let headerH = appHeader.clientHeight + appHeader.offsetTop;\n      // init position\n      this.renderer.setStyle(this.modalElement.nativeElement, \"top\", headerH + \"px\");\n      if ((position != null)) {\n        if ( !(position.left > 0)  ) {\n          this.renderer.setStyle(this.modalElement.nativeElement, \"left\", \"0\");\n        }\n      } else {\n        this.renderer.setStyle(this.modalElement.nativeElement, \"left\", \"0\");\n      }\n\n      // If 'centered' input is true, override initialPosition and modalLessPosition\n      if (this._center) {\n        let modelH = $(this.modalElement.nativeElement).height();\n        let footerH = $(\".footer\")[0].clientHeight;\n        this.renderer.setStyle(this.modalElement.nativeElement, \"top\", `calc(((100vh - ${headerH}px - ${footerH}px - ${modelH}px) / 2) + ${headerH}px)`);\n        this.renderer.setStyle(this.modalElement.nativeElement, \"left\", \"calc((100vw / 2) - \" + ($(this.modalElement.nativeElement).width() / 2) + \"px\");\n      }\n    }\n  }\n\n  /**\n   * Event handler for close event\n   * @event OnClosing\n   */\n  handleOnClosing() {\n    this.onClosing.emit();\n  }\n\n  /**\n   * Get the Nexaweb tag name of this component\n   */\n  protected getNxTagName() {\n    return \"dialog\";\n  }\n\n  /**\n   * Get JSON representation of dialog state\n   */\n  toJson(): {} {\n    const json: any = super.toJson();\n    this.setJson(json, \"title\", this.title);\n    this.setJson(json, \"modal\", this.modal);\n    this.setJson(json, \"centered\", this._center);\n\n    return json;\n  }\n\n  /**\n   * Check whether or not this dialog is a container\n   * @returns Boolean\n   */\n  protected isContainer() {\n    return true;\n  }\n\n  /**\n   * Check whether or not this is a dialog. Implementation of BaseComponent method\n   * @returns Boolean\n   */\n  protected isDialog() {\n    return true;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get the [[cd]] (ChangeDetectorRef) property\n   * @returns ChangeDetectorRef\n   */\n  getChangeDetector() {\n    return this.cd;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for minimize button click. Minimizes dialog\n   * @param event\n   */\n  minimize(event: MouseEvent) {\n    if (event != null) {\n      event.stopPropagation();\n    }\n    if((JavaUtils.parseBoolean(this.modal))){\n      if (!this.isUnMaximize){\n        let minHeightLoc = DialogComponent.UNMAXIMIZE_HEGHT;\n        this.isUnMaximize =true;\n        if (this.isMaximize) {\n          $(this.modalElement.nativeElement).css(\"top\", `${this.modalOriginalTop}px`);\n          $(this.modalElement.nativeElement).css(\"left\", `${this.modalOriginalLeft}px`);\n          this.isMaximize =false;\n        }        \n        $(this.body.nativeElement).css(\"min-height\", \"\");\n        $(this.body.nativeElement).css(\"height\", minHeightLoc);\n        $(this.modalElement.nativeElement).css(\"min-height\", \"\");\n        $(this.modalElement.nativeElement).css(\"height\", minHeightLoc);\n        $(this.modalElement.nativeElement.querySelector('.modal-content')).css(\"height\", minHeightLoc);\n        this.bsModalClass = [\"vt-dialog\", \"modal\", \"fade\", \"in\", \"unmaximize\"];\n      }else{\n        this.isUnMaximize =false;\n        let minHeightLoc =$(this.modalElement.nativeElement.querySelector('.modal-dialog')).css(\"height\");\n        $(this.body.nativeElement).css(\"min-height\", \"calc(100% - 25px\");\n        $(this.body.nativeElement).css(\"height\", \"auto\");\n        $(this.modalElement.nativeElement).css(\"min-height\", minHeightLoc);\n        $(this.modalElement.nativeElement).css(\"height\", minHeightLoc);\n        $(this.modalElement.nativeElement.querySelector('.modal-content')).css(\"height\", minHeightLoc);\n        this.bsModalClass = [\"vt-dialog\", \"modal\", \"fade\", \"in\", \"unmaximize\"];       \n      }\n    }else{\n      this.isUnMaximize =false;\n      this.bsModalClass = [\"vt-dialog\", \"modal\", \"fade\", \"out\", \"minimize\"];\n      this.getSession().getMcoContainer().minimizeView(this.viewId);\n    }\n    this.cd.detectChanges();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for maximize button click. Maximizes dialog\n   * @param event\n   */\n  maximize(event: MouseEvent) {\n    \n    if (event != null) {\n      event.stopPropagation();\n    }\n\n    if (this.isMaximize) {\n      this.bsModalClass = [\"vt-dialog\", \"modal\", \"fade\", \"in\"];\n      $(this.modalElement.nativeElement).css(\"top\", `${this.modalOriginalTop}px`);\n      $(this.modalElement.nativeElement).css(\"left\", `${this.modalOriginalLeft}px`);\n      this.isMaximize = false;\n      if(JavaUtils.parseBoolean(this.modal) &&  $(this.modalElement.nativeElement.querySelector('.modal-content'))[0].style.height === DialogComponent.UNMAXIMIZE_HEGHT){\n        this.bsModalClass = [\"vt-dialog\", \"modal\", \"fade\", \"in\", \"unmaximize\"];\n        this.isUnMaximize =true;\n      }else{\n        this.isUnMaximize =false;\n      }\n      \n      this.cd.detectChanges();\n    } else {\n      $(this.body.nativeElement).css(\"min-height\", \"calc(100% - 25px)\");\n      $(this.modalElement.nativeElement).css(\"height\", \"auto\");\n      this.modalOriginalLeft = (this.modalElement.nativeElement as HTMLElement).getBoundingClientRect().left;\n      this.modalOriginalTop = (this.modalElement.nativeElement as HTMLElement).getBoundingClientRect().top;\n      $(this.modalElement.nativeElement).css(\"left\", `${this.modalOriginalLeft}px`);\n      $(this.modalElement.nativeElement).css(\"top\", `${this.modalOriginalTop}px`);\n      this.bsModalClass = [\"vt-dialog\", \"modal\", \"fade\", \"in\", \"maximize\"];\n      this.isMaximize = true;\n      this.isUnMaximize =false;\n      this.cd.detectChanges();\n    }\n    \n    // istanbul ignore if */\n    if (this.tableId != null) {\n      const table: TableComponent = UiDocument.getElementById(this.tableId) as TableComponent;\n      if (table != null) {\n        table.tableResize();\n      }\n    }\n    this.getSession().getMcoContainer().showView(this.viewId);\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Show the view after it has been hidden via minimized\n   */\n  showView() {\n    if(this.disabled) return;\n    if (this.isMaximize) {\n      this.bsModalClass = [\"vt-dialog\", \"modal\", \"fade\", \"in\", \"maximize\"];\n    } else {\n      this.bsModalClass = [\"vt-dialog\", \"modal\", \"fade\", \"in\"];\n    }\n\n    this.cd.detectChanges();\n    this.getSession().getMcoContainer().showView(this.viewId, this.screenIndex);\n  }\n\n  /**\n   * Event handler for mousedown event. Resets dialog view stack\n   */\n  handleMouseDown() {\n    //make this screen top most.\n    this.getSession().getMcoContainer().reStackView(this.viewId, this.screenIndex);\n  }\n  /**\n   * Stop propagation on disabled dialog\n   */\n  onClickDisableContent(event){\n    if(this.disabled) event.stopPropagation();\n  }\n  /**\n   * Stop propagation on modal dialog\n   */\n  onClickBackdrop(event){\n    if(this.modal == true || this.modal == 'true') event.stopPropagation();\n  }\n\n  private updateModalDialogStyle() {\n    if (this.renderer != null && this.elementRef != null) {\n      if (this.modal === true || this.modal === \"true\") {\n        this.renderer.addClass(this.elementRef.nativeElement, \"modal\");\n        this.renderer.setStyle(this.elementRef.nativeElement, \"display\", \"inline-block\");\n      } else {\n        this.renderer.removeClass(this.elementRef.nativeElement, \"modal\");\n        this.renderer.removeStyle(this.elementRef.nativeElement, \"display\");\n      }\n    }\n  }\n\n  private checkFocusOut(event: FocusEvent) {\n    if ((this.elementRef.nativeElement as HTMLElement).contains(event.relatedTarget as HTMLElement)) {\n      this.getSession()._windowLostFocus = false;\n    }\n\n    if (\n      this.getSession()._windowLostFocus !== true &&\n      this._tabbables &&\n      this._tabbables.length > 0 &&\n      this.wasClickOutside !== true &&\n      !((this.elementRef.nativeElement as HTMLElement).contains(event.relatedTarget as HTMLElement))\n      && this.disabled !== true\n    ) {\n\n      if (\n        event.relatedTarget == null ||\n        (\n          !(event.relatedTarget as HTMLElement).classList.contains(\"dropdown-item\") &&\n          !(event.relatedTarget as HTMLElement).classList.contains(\"menuItem\")\n        )\n      ) {\n        event.stopPropagation();\n        this._tabbables[0].focus();\n      }\n    }\n\n    this.getSession()._windowLostFocus = false;\n  }\n\n  private handleDocClickEvent(event: MouseEvent) {\n    this.wasClickOutside = false;\n\n    if (\n      !((this.elementRef.nativeElement as HTMLElement).contains(event.target as HTMLElement))\n    ) {\n      this.wasClickOutside = true;\n    }\n\n    let _leftDisabledErroElementId = [];\n    //if disabled element\n    if (this._canTrackFocusLostOnErrorDisabled === true) {\n      if (\n        this._disabledErrorElementId != null &&\n        this._disabledErrorElementId.length > 0\n      ) {\n\n        for (let elId of this._disabledErrorElementId) {\n          const disabledEl = UiDocument.getElementById(elId);\n          const inputElement = disabledEl.getElement().querySelector('input');\n          if (disabledEl != null) {\n            if(event.target != inputElement)\n              disabledEl.setBgColor(\"\");\n            else\n              _leftDisabledErroElementId.push(elId);\n          }\n        }\n      }\n      if(_leftDisabledErroElementId.length == 0){\n        this._disabledErrorElementId = null;\n        this._canTrackFocusLostOnErrorDisabled = false;\n      }\n      else{\n        this._disabledErrorElementId = _leftDisabledErroElementId;\n      }\n    }\n  }\n\n  checkKey(event){\n    if (this.disabled === true){\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  trackFocusLostOnErrorDisabled() {\n    this._canTrackFocusLostOnErrorDisabled = true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogComponent } from './dialog.component';\nimport { ModalModule } from 'ngx-bootstrap';\nimport { DraggableDirective } from './draggable.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ModalModule.forRoot()\n  ],\n  declarations: [\n    DialogComponent,\n    DraggableDirective\n  ],\n  exports: [\n    DialogComponent,\n    DraggableDirective,\n    ModalModule\n  ]\n})\nexport class DialogModule { }\n","import { Directive, Input, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[vtGridColumn]'\n})\nexport class GridColumnDirective implements OnInit {\n  // ColumnSpan of element\n  @Input() vtGridColumn: number;\n\n  constructor(private el: ElementRef) {\n  }\n\n  /**\n   * Init lifecycle. Set grid column css class\n   */\n  ngOnInit() {\n    let cssClass = this.vtGridColumn ? `col-sm-${this.vtGridColumn}` : 'col-sm';\n    this.el.nativeElement.classList.add(cssClass);\n  }\n\n}\n","import { Component, OnInit, ElementRef, Input, Renderer2, forwardRef, Optional, SkipSelf } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\n\n/**\n * Class for Horizontal line (HR) component\n */\n@Component({\n  selector: 'vt-horizontal-separator',\n  templateUrl: './horizontal-separator.component.html',\n  styleUrls: ['./horizontal-separator.component.css'],\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>HorizontalSeparatorComponent)\n    }\n  ]\n})\nexport class HorizontalSeparatorComponent extends BaseComponent implements OnInit {\n  @Input() borderColor: string;\n\n  /**\n   * \n   * @param parent see [[BaseComponent]]\n   * @param sessionService see [[BaseComponent]]\n   * @param elementRef see [[BaseComponent]]\n   * @param renderer see [[BaseComponent]]\n   */\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, renderer: Renderer2) {\n    super(parent, sessionService, elementRef, renderer);\n  }\n\n  /**\n   * Init lifecycle method\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Get JSON representation for this component\n   */\n  toJson() {\n    const json: any = super.toJson();\n    this.setJson(json, \"borderColor\", this.borderColor);\n\n    return json;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HorizontalSeparatorComponent } from './horizontal-separator.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [HorizontalSeparatorComponent],\n  exports: [HorizontalSeparatorComponent]\n})\nexport class HorizontalSeparatorModule { }\n","export class Integer {\n  static toString(num: string) {\n    return num + '';\n  }\n}\n","import * as momentImported from 'moment';\n\nconst moment = momentImported;\n\n/**\n * Java DateFormat\n */\nexport class DateFormat {\n    static readonly SHORT: string = 'M/D/YY';\n    static readonly MEDIUM: string = 'MMM D, YYYY';\n    static readonly LONG: string = 'MMMM D, YYYY';\n\n    private calendar: momentImported.Moment;\n\n    static getDateInstance(pattern: string) {\n        return new DateFormat(pattern);\n    }\n\n    //if not lenient and date is invalid after being parsed, we throw error\n    private isLenient: boolean = true;\n\n    constructor(public formatPattern: string = null) {\n    }\n\n    static javaToMomentDateFormat(fm: string): string {\n        const s = fm.replace(/y/g, 'Y');\n        return s.replace(/d/g, 'D');\n        //the above is needed b/c ng-packagr is being a b***\n        //it doesn't like return fm.replace(/y/g, 'Y').replace(/d/g, 'D');\n    }\n\n    static now(): momentImported.Moment {\n      return moment();\n    }\n\n    format(date: Date | momentImported.Moment): string {\n        if (date === null) return null;\n        if (date === undefined) return undefined;\n        return this.formatPattern == null ? moment(date).format(): moment(date).format(this.formatPattern);\n    }\n\n    parse(dateString: string): momentImported.Moment {\n        let momentDate: momentImported.Moment = this.formatPattern ? moment(dateString, this.formatPattern) : moment(dateString);\n\n        if (this.isLenient === false && momentDate.isValid() === false) {\n            throw new Error(`Unable to parse date string: ${dateString}, using format: ${this.formatPattern}`);\n        }\n\n        this.calendar = momentDate;\n\n        return momentDate;\n    }\n\n    setLenient(lenient: boolean) {\n        this.isLenient = lenient;\n    }\n\n    setCalendar(date: Date | momentImported.Moment) {\n      this.calendar = moment(date);\n    }\n\n    getCalendar(): momentImported.Moment {\n      return this.calendar;\n    }\n}\n","import { Component, OnInit, Input, ElementRef, ChangeDetectionStrategy, SkipSelf, Optional, ChangeDetectorRef, EventEmitter, Output, Renderer2 } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\nimport { AlignHorizontal } from '../base/style-literals';\n\n/**\n * Class for label component. Renders text\n */\n@Component({\n  selector: 'vt-label,vt-cell',\n  templateUrl: './label.component.html',\n  styleUrls: ['./label.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: LabelComponent\n    }\n  ]\n})\nexport class LabelComponent extends BaseComponent implements OnInit {\n  @Input() alignHorizontal: AlignHorizontal;\n  @Input() set tooltip(tooltip: string) {\n    if (tooltip == null || tooltip === \"undefined\") {\n      this._tooltip = \"\";\n    } else {\n      this._tooltip = tooltip;\n    }\n  }\n\n  /**\n   * Accessor method for internal [[_tootip]] property\n   */\n  get tooltip() {\n    return this._tooltip;\n  }\n\n  private _tooltip: string = '';\n\n  @Output() onCommand = new EventEmitter();\n\n  /**\n   *\n   * @param parent See [[BaseComponent]]\n   * @param sessionService see [[BaseComponent]]\n   * @param elementRef see [[BaseComponent]]\n   * @param cd Change detector ref\n   * @param renderer see [[BaseComponent]]\n   */\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, private cd: ChangeDetectorRef, renderer: Renderer2) {\n\t\tsuper(parent, sessionService, elementRef, renderer);\n\t}\n\n  /**\n   * Init lifecycle method. Runs when component is created\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    if(this.controlWidth) {\n      this.controlWidth = this.controlWidth + 'px';\n    }\n\n    if(this.marginRight) {\n      this.marginRight = this.marginRight + 'px';\n    }\n\n    if(this.marginLeft) {\n      this.marginLeft = this.marginLeft + 'px';\n    }\n  }\n\n  /**\n   * After view init lifecycle method. Runs after component view is created\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    if (this.controlHeight != null && this.controlHeight !== \"\") {\n      this.styles[\"height\"] = this.controlHeight + \"px\";\n    }\n\n    this.setAttributeFromDef();\n\n    //fix expression has changed blah blah blah\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Get JSON representation of component\n   */\n  toJson(): {} {\n    const json: any = super.toJson();\n    this.setJson(json, \"alignHorizontal\", this.alignHorizontal);\n\n    return json;\n  }\n\n  /**\n   * Set value of [[tooltip]] property\n   * @param tooltip\n   */\n  setTooltip(tooltip: string) {\n    this.tooltip = tooltip;\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Event handler for mousedown event. Call parent class [[handleMouseDown]]\n   * @param e Mouse click event\n   */\n  onMouseDown(e: MouseEvent) {\n    this.handleMouseDown(e)\n  }\n\n  /**\n   * Event handler for click event.\n   * @event OnCommand\n   */\n  handleOnClick() {\n    if (this.emitInternalOnCommand() === false) {\n      this.onCommand.emit();\n    }\n  }\n\n  /**\n   * Get value of [[cd]] (ChangeDetectorRef) property\n   * @returns The component's change detector\n   */\n  protected getChangeDetector() {\n    return this.cd;\n  }\n\n  /**\n   * Get NexaWeb tag name\n   * @returns Name of tag\n   */\n  protected getNxTagName() {\n    return \"label\";\n  }\n\n  /**\n   * Check if the text is all space characters\n   * @returns If text is just space characters TRUE, otherwise FALSE\n   */\n  get spaceText() {\n    return this.text && this.text.length > 0 && this.text.trim().length === 0;\n  }\n\n  /**\n   * Set [[visible]] property value\n   * @override\n   * @param value Toggle visibility\n   */\n  setVisible(value: boolean) {\n    this.visible = value;\n    if (this.visible) {\n      this.removeCssClass('hidden');\n      this.getElement().removeAttribute('hidden');\n    } else {\n      this.addCssClass('hidden');\n      this.getElement().setAttribute('hidden', '');\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LabelComponent } from './label.component';\nimport { BaseModule } from '../base/base.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\t\tBaseModule\n  ],\n  declarations: [LabelComponent],\n  exports: [LabelComponent],\n  entryComponents: [\n    LabelComponent\n  ]\n})\nexport class LabelModule { }\n","import { Component, OnInit, Input, Optional, SkipSelf, ElementRef, ChangeDetectionStrategy, forwardRef, ViewContainerRef, ContentChildren, QueryList, ChangeDetectorRef, Renderer2 } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\nimport { BorderPosition, Layout } from '../base/style-literals';\nimport { AttributesEnum } from '../base/attributes.enum';\nimport * as _ from \"lodash\";\n\n@Component({\n  selector: 'vt-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>PanelComponent)\n    }\n  ]\n})\nexport class PanelComponent extends BaseComponent implements OnInit {\n  @Input() layout: Layout;\n  @Input() caption: String;\n  @Input() evenlySpace: boolean; //TODO not sure what this is for\n  /**\n   * For escaping unneeded row & fluid container. This is a trikcy option.\n   * Almost case, fluid container is not needed. it's too late...\n   * @property {boolean}\n   */\n  @Input() noGutter: boolean = false;\n    /**\n   * For escaping fluid container. This is a trikcy option.\n   * should be validated by `(layout !== 'grid')` . it's too late...\n   * @property {boolean}\n   */\n  @Input() noGrid: boolean = false;\n  //children list to keep indexes\n  @ContentChildren(BaseComponent) set childrenList(children: QueryList<BaseComponent>) {\n    this.resetChildIndexes(children.filter(child=>child !== this));\n  }\n\n  panelClasses: Array<string> = ['vt-panel'];\n  panelStyles: {[name: string]: string} = {};\n\n  // ç»é¢ãªãµã¤ãºå¯¾å¿ Start\n  @Input() resizeComponent: boolean = false;\n  @Input() resizeMarginTop: string = null;\n  resizeHeight: string = null;\n  divHeight: string = null;\n  // ç»é¢ãªãµã¤ãºå¯¾å¿ End\n\n  // ç»é¢ã®ã¬ã¤ã¢ã¦ãåºå®åå¯¾å¿ Start\n  @Input() contentDisplayWidth: string = null;\n  // ç»é¢ã®ã¬ã¤ã¢ã¦ãåºå®åå¯¾å¿ End\n\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, private cd: ChangeDetectorRef, renderer: Renderer2) {\n    super(parent, sessionService, elementRef, renderer);\n  }\n\n  /**\n   * Init lifecycle. Set dimensions and css styles\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.cssClass != null) {\n      this.cssClass.split(' ').forEach(css=>this.panelClasses.push(css));\n    }\n\n    if (this.containerLayout === true && !this.noGrid && !this.noGutter) {\n      this.panelClasses.push('container-fluid');\n    }\n\n    /*if (!this.borderColor) {\n      this.borderColor = 'transparent';\n    }*/\n\n    if (this.borderWidth) {\n      this.borderWidth = this.borderWidth + 'px';\n      this.borderStyle = 'solid';\n\n       if(this.borderColor == null){\n         this.borderColor = '#ffffff';\n       }\n    }\n    if (this.controlHeight == null) {\n      this.controlHeight = '100%';\n    }\n\n    this.setVisible(this.visible);\n\n    // ç»é¢ãªãµã¤ãºå¯¾å¿ Start\n    if (this.resizeComponent) {\n      this.resizeHeight = \"calc(100% - \" + this.resizeMarginTop + \"px)\";\n      this.divHeight = \"100%\";\n    }\n\n    if (this.marginLeft) {\n      this.marginLeft = this.marginLeft + 'px';\n    }\n  }\n\n  /**\n   * After view init lifecycle. Set dimensions and trigger change detection\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    this.initWidthHeightStyle();\n\n    this.cd.detectChanges();\n  }\n\n  /**\n   *\n   * @param childrenList Update list of children ids\n   */\n  private resetChildIndexes(childrenList: Array<BaseComponent>) {\n    if (childrenList != null && childrenList.length > 0) {\n      if (this._childrenIndex !== null) {\n        this._childrenIndex = _.uniq(_.concat(childrenList.map(child=>child.getId()), this._childrenIndex));\n      }\n    }\n  }\n\n  /**\n   * Set dimensions of panel based on [[controlHeight]] and [[controlWidth]] properties\n   * @param heightStyleName\n   * @param widthStyleName\n   */\n  protected initWidthHeightStyle(heightStyleName: string = 'height', widthStyleName: string = 'max-width') {\n    if (this.controlHeight != null && this.controlHeight != \"\" && parseInt(this.controlHeight) > 0) {\n      this.panelStyles[\"height\"] = parseInt(this.controlHeight) + \"px\";\n    }\n\n    if (this.controlWidth != null && this.controlWidth != \"\" && parseInt(this.controlWidth) > 0) {\n      this.panelStyles[widthStyleName] = parseInt(this.controlWidth) + \"px\";\n    }\n  }\n\n  /**\n   * Set [[disabled]] property value\n   * @param boo Toggle disabled\n   */\n  setDisabled(boo: boolean){\n    this.disabled = boo;\n    this.getChildren().toArray().forEach(item => {\n      item.setAttribute(AttributesEnum.DISABLED, boo);\n    })\n  }\n\n  /**\n   * Set [[visible]] property value\n   * @param boo Toggle visibility\n   */\n  setVisible(boo: boolean) {\n    this.visible = boo;\n    if (this.visible) {\n      this.removeCssClass('hidden');\n      this.getElement().removeAttribute('hidden');\n    } else {\n      this.addCssClass('hidden');\n      this.getElement().setAttribute('hidden', '');\n    }\n  }\n\n  /**\n   * Check if [[caption]] property exists and is set\n   * @returns True if caption exists and has content, otherwise false\n   */\n  get hasCaption(): boolean {\n    return this.caption != null && this.caption.length > 0;\n  }\n\n  /**\n   * Check if [[layout]] property exists\n   * @returns True if layout exists, otherwise false\n   */\n  get containerLayout(): boolean {\n    return this.layout != null;\n  }\n\n  /**\n   * Get the [[cd]] (ChangeDetectorRef) property\n   * @returns Change detector for this panel\n   */\n  protected getChangeDetector(): ChangeDetectorRef {\n    return this.cd;\n  }\n\n  /**\n   * Check whether or not this component is a container\n   * @returns True since panels are always containers\n   */\n  protected isContainer() {\n    return true;\n  }\n\n  protected getNxTagName(): string {\n    return \"panel\";\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PanelComponent } from './panel.component';\nimport { GridColumnDirective } from './grid-column.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    GridColumnDirective,\n    PanelComponent\n  ],\n  exports: [\n    GridColumnDirective,\n    PanelComponent\n  ]\n})\nexport class LayoutModule { }\n","import { Component, OnInit, Input, Output, EventEmitter, ElementRef, SkipSelf, Optional, ChangeDetectionStrategy, ChangeDetectorRef, Renderer2, forwardRef } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\n\n/**\n * Class for a link component\n */\n@Component({\n  selector: 'vt-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>LinkComponent)\n    }\n  ]\n})\nexport class LinkComponent extends BaseComponent implements OnInit {\n  @Input() idName: string;\n  @Output() onCommand = new EventEmitter();\n\n  /**\n   *\n   * @param parent see [[BaseComponent]] constructor\n   * @param sessionService see [[BaseComponent]] constructor\n   * @param elementRef see [[BaseComponent]] constructor\n   * @param cd Change detector reference for this component\n   * @param renderer see [[BaseComponent]] constructor\n   */\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, private cd: ChangeDetectorRef, renderer: Renderer2) {\n    super(parent, sessionService, elementRef, renderer);\n  }\n\n  /* ã«ã¬ã³ãã¼ãã¿ã³æ´»æ§/éæ´»æ§ã®è²æå® */\n  _disabled:boolean;\n  get disabled(){return this._disabled; }\n  @Input('disabled')\n  set disabled(value){\n    this.opacity = value ? '0.3':'1.0';\n    this._disabled = value;\n  }\n  @Input('innerhtml') innerhtml: string;\n\n  /**\n   * Init lifecycle. Calls parent init method\n   */\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  /**\n   * Event handler for click event. Does not emit event if the panel is disabled\n   * @event OnCommand\n   */\n  onClick() {\n    if (!this.disabled)\n      this.onCommand.emit();\n  }\n\n  /**\n   * Event handler for keydown event. Execute click handler if it's the enter key\n   * @param e Keyboard Event\n   */\n  onKeyUp(e: KeyboardEvent) {\n    // if ENTER key\n    if (e.keyCode === 13) {\n      this.onClick();\n    }\n  }\n\n  /**\n   * Get the JSON representation for panel\n   */\n  toJson(): {} {\n    const json: any = super.toJson();\n\n    if (json[\"customAttributes\"] == null) {\n      json[\"customAttributes\"] = {};\n    }\n\n    this.setJson(json[\"customAttributes\"], \"idName\", this.idName);\n\n    return json;\n  }\n\n  /**\n   * Get the [[cd]] (ChangeDetector) property\n   * @returns Value of [[cd]] property\n   */\n  protected getChangeDetector(): ChangeDetectorRef {\n    return this.cd;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LinkComponent } from './link.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [LinkComponent],\n  exports: [LinkComponent]\n})\nexport class LinkModule { }\n","export class Long {\n  static toString(num: number): string {\n    return num + '';\n  }\n}\n","import * as momentImported from 'moment-timezone';\n\n// Need to do this to prevent packagr namespace error\n// https://github.com/ng-packagr/ng-packagr/issues/217\nconst moment = momentImported;\n\n/**\n * Simple util to parse moment into proper zone (if needed)\n */\n// @dynamic -- this line comment is necessary to prevent packagr error\nexport class MomentUtils {\n  static timeZone: string;\n\n  static moment(dateString: string, format?: string): momentImported.Moment {\n    if (format != null && format != '') {\n      if (MomentUtils.timeZone != null && MomentUtils.timeZone != '') {\n        return moment.tz(dateString, format, MomentUtils.timeZone);\n      }\n\n      return moment(dateString, format);\n    } else {\n      if (MomentUtils.timeZone != null && MomentUtils.timeZone != '') {\n        return moment.tz(dateString, MomentUtils.timeZone);\n      }\n\n      return moment(dateString);\n    }\n  }\n}\n","import { Component, Input, ViewChild, ChangeDetectorRef, AfterViewInit, ChangeDetectionStrategy } from \"@angular/core\";\nimport { DynamicElement } from \"./dynamic-element\";\nimport { BaseComponent } from \"../base/base.component\";\nimport { AppUtils } from \"../base/app-utils\";\nimport { AttributesEnum } from \"../base/attributes.enum\";\nimport * as _ from \"lodash\";\n\n/**\n * DynamicComponent class. Renders components at runtime by definition\n */\n@Component({\n    selector: \"vt-dynamic-component\",\n    templateUrl: \"./dynamic.component.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DynamicComponent implements AfterViewInit {\n    /**\n     * Definition of component to render\n     */\n    @Input() elementDef: DynamicElement;\n    @ViewChild(\"myComponent\", { read: BaseComponent }) myComponent: BaseComponent;\n\n    constructor(private cd: ChangeDetectorRef) {\n\n    }\n\n    /**\n     * After init lifecycle.\n     */\n    ngAfterViewInit() {\n        this.cleanClass();\n\n        this.cd.detectChanges();\n    }\n\n    /**\n     * Check if element is visible\n     * @returns Value of [[DynamicElement]] visible property.\n     */\n    isVisible() {\n        return this.elementDef.visible !== false;\n    }\n\n    /**\n     * Get component ID if it exists, otherwise generate a unique id\n     * @returns Component's id value\n     */\n    getId() {\n        return this.elementDef.id == null ? BaseComponent.generateUniqueId() : this.elementDef.id;\n    }\n\n    /**\n     * Event handler for OnCommand event. Call runtime component's onCommand handler\n     */\n    handleOnCommand() {\n        if (typeof this.elementDef.onCommand === \"function\") {\n            this.elementDef.onCommand(this.myComponent);\n        }\n    }\n\n    /**\n     * Event handler for OnContextMenu (i.e. right click, ctrl click) event. Call runtime component's onContextMenu Handler\n     */\n    handleOnContextMenu() {\n        if (typeof this.elementDef.onContextMenu === \"function\") {\n            this.elementDef.onContextMenu(this.myComponent);\n        }\n    }\n\n    /**\n     * Set runtime component's 'enabled' property value based on cssClass and call parent class cleanCss method\n     */\n    cleanClass() {\n        if (this.elementDef.cssClass != null && this.elementDef.cssClass !== \"\") {\n            if (typeof AppUtils.attributeOverrideClass === \"function\") {\n                const attrs = AppUtils.attributeOverrideClass(this.elementDef.cssClass);\n                \n                if (attrs != null) {\n                    _.forEach(attrs, (val)=>{\n                        if (val != null && val.attributeName === AttributesEnum.ENABLED) {\n                            this.elementDef.enabled = val.value;\n                        }\n                    });\n                }\n            }\n\n            this.elementDef.cssClass = BaseComponent.cleanCss(this.elementDef.cssClass);\n        }\n    }\n}","import { Component, Input, OnInit, Output, ElementRef, EventEmitter, ChangeDetectorRef, AfterViewInit , ChangeDetectionStrategy, SkipSelf, Optional, ViewChild, forwardRef, Renderer2} from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\nimport { AttributesEnum } from '../base/attributes.enum'\n\ndeclare var $ : any;\n\n/**\n * Class for text field component\n */\n@Component({\n  selector: 'vt-text-field',\n  templateUrl: './text-field.component.html',\n  styleUrls: ['./text-field.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>TextFieldComponent)\n    }\n  ]\n})\nexport class TextFieldComponent extends BaseComponent implements OnInit, AfterViewInit {\n  static readonly MAX_LENGTH: number = 9999; //should be 523...but 9999 should be good enough\n\n  /**\n   * Input element's value\n   */\n  @Input() value: string;\n\n  /**\n   * Whether or not text field is editable\n   */\n  @Input() editable: boolean | string = true;\n\n  /**\n   * Max input allowed for characters\n   */\n  @Input() set maxLength(max: number) {\n    this._maxLength = max;\n  }\n\n  /**\n   * HTML input element type attribute. Defaults to 'text'\n   */\n  @Input() type: string = 'text';\n\n  @Output() onTextChange = new EventEmitter();\n  @Output() onEdit = new EventEmitter();\n  @Output() onMouseUp = new EventEmitter();\n\n  get maxLength(): number {\n    return this._maxLength > 0 ? this._maxLength : TextFieldComponent.MAX_LENGTH;\n  }\n\n  private _maxLength: number = TextFieldComponent.MAX_LENGTH;\n  private _textBeforeFocusIn:string;//for onEdit()\n  private _textPreviousKeyInput:string;//for onTextChange()\n  @ViewChild('input') input: ElementRef;\n\n  styleVar: {[key: string]: string} = {};\n\n  /**\n   *\n   * @param parent see [[BaseComponent]] constructor\n   * @param sessionService see [[BaseComponent]] constructor\n   * @param elementRef see [[BaseComponent]] constructor\n   * @param cd Change detector for this component\n   * @param renderer see [[BaseComponent]] constructor\n   */\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, private cd: ChangeDetectorRef, renderer: Renderer2) {\n    super(parent, sessionService, elementRef, renderer);\n\n  }\n\n  /**\n   * Init lifecycle. Set dimensions and style properties\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.disabled && this.fontColorDisabled) {\n      this.styleVar[\"color\"] = this.fontColorDisabled;\n    } else {\n      this.styleVar[\"color\"] = this.fontColor || 'inherit';\n    }\n    // this.styleVar[\"margin-left\"] = \"1px\";\n    this.styleVar[\"margin-right\"] = \"5px\";\n\n    // this.styles[\"margin-left\"] = \"1px\";\n    this.styles[\"margin-right\"] = \"5px\";\n\n    if(this.controlWidth){\n      this.controlWidth = this.controlWidth + 'px';\n    }\n\n    if(this.controlHeight){\n      this.controlHeight = this.controlHeight + 'px';\n    }\n\n    if(this.marginLeft){\n      this.marginLeft = this.marginLeft + 'px';\n    }\n\n    if(this.marginTop){\n      this.marginTop = this.marginTop + 'px';\n    }\n\n  }\n\n  /**\n   * After view init lifecycle. Set dimensions, focus text field\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    this.initWidthHeightStyle();\n\n    this.setAttributeFromDef();\n    this.cd.detectChanges();\n\n    if (this.focusOnActivation) {\n      this.input.nativeElement.focus();\n    }\n\n    if (this.type === 'date') {\n      // Remove native datepicker controls applied by Chrome\n      this.renderer.setProperty(this.input.nativeElement, 'type', 'text');\n    }\n  }\n\n  /**\n   * Event handler for blur (unfocus) event\n   * @param e Input blur event\n   */\n  onBlur(e, value) {\n    if(!document.hasFocus() && $(\":focus\").length > 0) {\n      return;\n    }\n\n    this.text = value;//when the last char is Zenkaku and the user doesn't press 'Enter', this is needed.\n    if(this.text != this._textBeforeFocusIn)\n      this.onEdit.emit();\n    // Checks for numeric date entry without slashes: e.g 20190104\n\n    // If the user enters numbers without slashes auto format as date\n    if (this.type==='date' && /^\\d{8}$/m.test(this.text)) {\n      let formattedDateString = [this.text.substr(0,4), this.text.substr(4,2), this.text.substr(6,2)].join('/');\n      this.text = formattedDateString;\n    }\n\n    this.validateField(e);\n  }\n\n  /**\n   * Event handler for focus event\n   * @param e Input focus event\n   */\n  onFocus(e) {\n    this.input.nativeElement.selectionStart = this.text.length;\n    this.input.nativeElement.selectionEnd = this.text.length;\n\n    if(!this.customAttributes)\n      return;\n    let formatName:string= this.customAttributes['format'];\n    if (formatName && formatName.indexOf(\"add_comma\") >= 0) {\n      let txtMount = this.text.replace(/,/g,\"\")\n      this.text = txtMount;\n    }\n    this._textBeforeFocusIn = this.text;\n    this._textPreviousKeyInput = this.text;\n  }\n\n  /**\n   * Event handler for text input\n   * Emit onTextChange b/c user keep typing (input still has focus)\n   * @param event\n   * @param value\n   * @event onTextChange\n   */\n  onInput(event: KeyboardEvent, value: string) {\n    if(event.keyCode == 8 || event.keyCode == 46)//Backspace || Delete\n    {\n      let pos = this.input.nativeElement.selectionStart;\n      this.text = value;\n      setTimeout(() => {\n        this.input.nativeElement.selectionStart = pos;\n        this.input.nativeElement.selectionEnd = pos;\n      });\n    }\n    if(this._textPreviousKeyInput != this.text)\n      this.onTextChange.emit();\n    this._textPreviousKeyInput = this.text;\n  }\n\n  /**\n   * Focus the input element\n   */\n  /* istanbul ignore next */\n  setFocus(){\n    this.input.nativeElement.focus();\n  }\n\n  /**\n   * Set background color CSS for the text input\n   * @param bgColor CSS color string value for background\n   */\n  setBgColor(bgColor: string)\n  {\n    this.input.nativeElement.style.backgroundColor = bgColor;\n  }\n\n  /**\n   * Get [[_maxLength]] property value\n   */\n  getMaxLength() {\n    return this._maxLength;\n  }\n\n  /**\n   * Set [[_maxLength]] property value\n   * @param max Maximum length of character input\n   */\n  setMaxLength(max: number | string) {\n    if (typeof max === \"number\") {\n      this._maxLength = max;\n    } else {\n      this._maxLength = parseInt(max);\n    }\n\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Get JSON representation for this text-field\n   */\n  toJson(): {} {\n    const json: any = super.toJson();\n    this.setJson(json, \"editable\", this.editable);\n\n    if (this.value != null) {\n      this.setJson(json, \"value\", this.value);\n    }\n\n    return json;\n  }\n\n  /**\n   * Get component name\n   */\n  getLocalName(): string {\n    return \"textField\";\n  }\n\n  /**\n   * Get the text content value of the input element\n   */\n  getValue(): string {\n    return this.getText();\n  }\n\n  /**\n   * Event handler for mouseup\n   * @event OnMouseUp\n   */\n  handleMouseUp() {\n    this.onMouseUp.emit();\n  }\n\n  /**\n   * @returns String Tag name\n   */\n  /* istanbul ignore next */\n  protected getNxTagName() {\n    return \"textField\";\n  }\n\n  /**\n   * Get the [[cd]] (ChangeDetector) property\n   * @returns Change detector\n   */\n  protected getChangeDetector(): ChangeDetectorRef {\n    return this.cd;\n  }\n\n  //angular doesn't like accessing private/public method\n  _notifyInternalChangeCb() {\n    super._notifyInternalChangeCb();\n  }\n\n  /**\n   * Select all text\n   */\n  selectText(){\n    this.input.nativeElement.select();\n  }\n  /**\n   * Set [[visible]] property value\n   * @override\n   * @param value Toggle visibility\n   */\n  setVisible(value: boolean) {\n    this.visible = value;\n    if (this.visible) {\n      this.removeCssClass('hidden');\n      this.getElement().removeAttribute('hidden');\n    } else {\n      this.addCssClass('hidden');\n      this.getElement().setAttribute('hidden', '');\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextFieldComponent } from './text-field.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [TextFieldComponent],\n  exports: [\n    TextFieldComponent,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    TextFieldComponent\n  ]\n})\nexport class TextFieldModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DynamicComponent } from './dynamic.component';\nimport { ButtonModule } from '../button/button.module';\nimport { TextFieldModule } from '../text-field/text-field.module';\nimport { LayoutModule } from '../layout/layout.module';\nimport { LabelModule } from '../label/label.module';\nimport { HorizontalSeparatorModule } from '../horizontal-separator/horizontal-separator.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ButtonModule,\n    LabelModule,\n    TextFieldModule,\n    LayoutModule,\n    HorizontalSeparatorModule\n  ],\n  declarations: [\n    DynamicComponent\n  ],\n  exports: [\n    DynamicComponent,\n    ButtonModule,\n    LabelModule,\n    TextFieldModule,\n    LayoutModule,\n    HorizontalSeparatorModule\n  ]\n})\nexport class DynamicModule { }\n","import { DynamicElement } from \"./dynamic-element\";\n\nexport class DynamicElementBuilder {\n    private dynamicElement: DynamicElement;\n    private dropShadowColor: string;\n    private dropShadowOffset: string;\n\n    static createLabelElement(whiteSpaceWrap: boolean = false, padding: string = null) {\n        const el = new DynamicElementBuilder();\n        el.dynamicElement = {\n            type: \"label\"\n        };\n\n        el.initStyle();\n\n        if (whiteSpaceWrap === true) {\n            el.dynamicElement.styles[\"white-space\"] = \"nowrap\";\n        }\n\n        if (padding != null && padding !== '') {\n            el.dynamicElement.styles[\"padding\"] = padding;\n        }\n\n        return el;\n    }\n\n    toDynamicElement() {\n        return this.dynamicElement;\n    }\n\n    setId(id: string) {\n        this.dynamicElement.id = id;\n    }\n\n    setText(text: string) {\n        this.dynamicElement.text = text;\n    }\n\n    setText2(text: string) {\n        //not sure what this is, for now, custom attribute\n        this.setAttribute(\"text2\", text);\n    }\n\n    setValue(value: string) {\n        this.dynamicElement.value = value;\n    }\n\n    setTooltip(tooltip: string) {\n        this.dynamicElement.tooltip = tooltip;\n    }\n\n    setVisible(visible: boolean) {\n        this.dynamicElement.visible = visible;\n    }\n\n    setEnabled(enabled: boolean) {\n        this.dynamicElement.enabled = enabled;\n    }\n\n    setPopup(popupMenuId: string) {\n        this.dynamicElement.popupMenuId = popupMenuId;\n    }\n\n    setBgColor(bgColor: string) {\n        this.initStyle();\n        this.dynamicElement.styles[\"background-color\"] = this.checkCustomColor(bgColor);\n    }\n\n    addCssClass(cssClass: string) {\n        this.initStyle();\n        if (this.dynamicElement.cssClass == undefined){\n            this.dynamicElement.cssClass = cssClass;\n        } else {\n            this.dynamicElement.cssClass = this.dynamicElement.cssClass + \" \" + cssClass;\n        }\n    }\n\n    setBorderColor(borderColor: string) {\n        this.initStyle();\n        this.dynamicElement.styles[\"border-color\"] = this.checkCustomColor(borderColor);\n        this.initBorderStyle();\n    }\n\n    setBorderWidth(borderWidth: string) {\n        this.initStyle();\n        this.dynamicElement.styles[\"border-width\"] = this.convertStyleUnit(borderWidth);\n        this.initBorderStyle();\n    }\n\n    setBorderStyle(borderStyle: string) {\n        this.initStyle();\n        this.dynamicElement.styles[\"border-style\"] = borderStyle;\n    }\n\n    setHeight(height: string) {\n        this.initStyle();\n        this.dynamicElement.styles[\"height\"] = height + \"px\";\n    }\n\n    setWidth(width: string) {\n        this.initStyle();\n        this.dynamicElement.styles[\"width\"] = width + \"px\";\n    }\n\n    setX(x: string | number) {\n        this.initStyle();\n        this.dynamicElement.styles[\"position\"] = \"absolute\";\n        this.dynamicElement.styles[\"left\"] = x + \"px\";\n    }\n\n    setY(y: string | number) {\n        this.initStyle();\n        this.dynamicElement.styles[\"position\"] = \"absolute\";\n        this.dynamicElement.styles[\"top\"] = y + \"px\";\n    }\n\n    setZ(z: string | string) {\n        this.initStyle();\n        this.dynamicElement.styles[\"z-index\"] = z ;\n    }\n\n\n    setFontBold(boo: string | boolean) {\n        this.initStyle();\n\n        if (boo === \"true\" || boo === true) {\n            this.dynamicElement.styles[\"font-weight\"] = \"bold\";\n        } else {\n            this.dynamicElement.styles[\"font-weight\"] = \"normal\";\n        }\n    }\n\n    setFontSize(size: string | number) {\n        this.initStyle();\n        this.dynamicElement.styles[\"font-size\"] = size + \"px\";\n    }\n\n    setFontColor(color: string) {\n        this.initStyle();\n        this.dynamicElement.styles[\"color\"] = this.checkCustomColor(color);\n    }\n\n    setMargin(margin: string) {\n        this.initStyle();\n        this.dynamicElement.styles[\"margin\"] = this.convertStyleUnit(margin);\n    }\n\n    setAlignVertical(align: string) {\n        this.initStyle();\n\n        if (align === \"center\") {\n            align = \"middle\";\n        }\n\n        this.dynamicElement.styles[\"vertical-align\"] = align;\n    }\n\n    setAlignHorizontal(align: string) {\n        this.initStyle();\n        this.dynamicElement.styles[\"text-align\"] = align;\n    }\n\n    setBorderCorner(borderCorner: string) {\n        this.initStyle();\n        this.dynamicElement.styles[\"border-radius\"] = this.convertStyleUnit(borderCorner);\n    }\n\n    setDropShadowColor(dropShadowColor: string) {\n        this.dropShadowColor = this.checkCustomColor(dropShadowColor);\n        this.setBoxShadow();\n    }\n\n    setDropShadowOffset(dropShadowOffset: string) {\n        this.dropShadowOffset = dropShadowOffset;\n        this.setBoxShadow();\n    }\n\n    setOnContextMenu(fn: (thisArg?: any)=>void) {\n        this.dynamicElement.onContextMenu = fn;\n    }\n\n    setOnCommand(fn: (thisArg?: any)=>void) {\n        this.dynamicElement.onCommand = fn;\n    }\n\n    setAttribute(name: string, value) {\n        if (this.dynamicElement.customAttributes == null) {\n            this.dynamicElement.customAttributes = {};\n        }\n\n        this.dynamicElement.customAttributes[name] = value;\n    }\n\n    setRichText(str: string | boolean) {\n        this.dynamicElement.richText = str === true || str === \"true\";\n    }\n\n    appendChild(child: DynamicElementBuilder) {\n        if (this.dynamicElement.children == null) {\n            this.dynamicElement.children = [child.dynamicElement];\n        } else {\n            this.dynamicElement.children.push(child.dynamicElement);\n        }\n    }\n\n    private initStyle() {\n        if (this.dynamicElement.styles == null) {\n            this.dynamicElement.styles = {};\n        }\n    }\n\n    private initBorderStyle() {\n        if (this.dynamicElement.styles[\"border-style\"] == null || this.dynamicElement.styles[\"border-style\"] == \"\") {\n            this.dynamicElement.styles[\"border-style\"] = \"solid\";\n        }\n    }\n\n    private convertStyleUnit(unit: string) {\n        if (unit != null && unit.indexOf(\",\") > 0) {\n            unit = unit.split(\",\").map(m=>m + \"px\").join(\" \");\n        } else if (unit != null && unit !== \"\") {\n            unit = unit + \"px\";\n        }\n\n        return unit;\n    }\n\n    private setBoxShadow() {\n        if (this.dropShadowColor != null && this.dropShadowOffset != null) {\n            this.initStyle();\n            this.dynamicElement.styles[\"box-shadow\"] = `${this.dropShadowOffset}px ${this.dropShadowOffset}px ${this.dropShadowOffset}px ${this.dropShadowColor}`;\n        }\n    }\n\n    private checkCustomColor(color: string) {\n        if (color != null && color.indexOf(\"#\") === 0 && color.length > 7) {\n            color = \"var(\" + color.replace(\"#\", \"--\") + \")\";\n        }\n\n        return color;\n    }\n}\n","import { Component, Input, OnInit, Output, ElementRef, EventEmitter, ChangeDetectionStrategy, SkipSelf, Optional, ChangeDetectorRef, Renderer2, forwardRef } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\nimport { element } from 'protractor';\nimport { UiDocument } from '../base/ui-document';\n\n/**\n * Class for radio button input control\n */\n@Component({\n  selector: 'vt-radio-button',\n  templateUrl: './radio-button.component.html',\n  styleUrls: ['./radio-button.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>RadioButtonComponent)\n    }\n  ]\n})\nexport class RadioButtonComponent extends BaseComponent implements OnInit {\n  @Input() group: string;\n  @Input() idName: string;\n  @Input() value: any;\n  @Input() set isChecked(boo: boolean) {\n    this.checked = boo;\n  }\n\n  @Input() checked: boolean = false;\n\n  private _internalChangeTracking: boolean;\n\n  @Output() onCommand = new EventEmitter();\n\n  /**\n   * \n   * @param parent see [[BaseComponent]] constructor\n   * @param sessionService see [[BaseComponent]] constructor\n   * @param elementRef see [[BaseComponent]] constructor\n   * @param cd Change detector for this panel\n   * @param renderer see [[BaseComponent]] constructor\n   */\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, private cd: ChangeDetectorRef, renderer: Renderer2) {\n    super(parent, sessionService, elementRef, renderer);\n  }\n\n  /**\n   * Init lifecycle. Call parent init method.\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.idName != null) {\n      this.setCustomAttribute('idName', this.idName);\n    }\n  }\n\n  /**\n   * After view init lifecycle. Set the radiobutton group and attributes.\n   * Calls parent ngAfterViewInti method\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    if (this.getParent() != null) {\n      this.getParent().addRadioButtonGroup(this);\n    }\n\n    this.setAttributeFromDef();\n    this.cd.detectChanges();\n    this._internalChangeTracking = this.checked;\n  }\n\n  /**\n   * Event handler for change event\n   * @event OnCommand\n   */\n  onChange() {\n    this.onCommand.emit();\n  }\n\n  /**\n   * Event handler for click event. Updates radio button state\n   * @param event Mouse click event\n   */\n  onClick(event: MouseEvent) {\n    event.stopPropagation();\n    \n    let fireOnChange = false;\n\n    //save current value before reset\n    const tempCheck = this.checked;\n\n    this.resetGroupRadios();\n\n    //reset current value back for onChange\n    this._internalChangeTracking = tempCheck;\n\n    //register click for mco\n    this.checked = true;\n    this.handleClick(event);\n\n    if (this._internalChangeTracking !== this.checked) {\n      this.onChange();\n      this._internalChangeTracking = this.checked;\n    }\n  }\n\n  /**\n   * Event handler for mousedown event\n   * @param e MouseDown event\n   */\n  onMouseDown(e: MouseEvent) {\n    this.handleMouseDown(e);\n  }\n\n  /**\n   * Get the component name\n   */\n  getLocalName(): string {\n    return \"radioButton\";\n  }\n\n  /**\n   * Get the [[value]] property\n   */\n  getValue(): any {\n    return this.value;\n  }\n\n  /**\n   * Get the [[checked]] property\n   */\n  getChecked(): boolean {\n    return this.checked;\n  }\n\n  /**\n   * Sets the value for [[checked]] property and updated [[_internalChangeTracking]] value\n   * @param shouldChecked Toggle checked\n   */\n  setChecked(shouldChecked: boolean | string, skipInternalChange: boolean = false) {\n    if (shouldChecked === true) {\n      this.resetGroupRadios();\n    }\n\n    this.checked = shouldChecked === true || shouldChecked === 'true';\n    this._internalChangeTracking = this.checked;\n    this.markForCheck();\n\n    //notify internal changes (for internal use only)\n    if (skipInternalChange !== true) {\n      this._notifyInternalChangeCb();\n    }\n  }\n\n  /**\n   * Check the radio button of the parent group that matches [[value]]\n   * @param value \n   */\n  setSelected(value: any) {\n    if (value === true || value === \"true\") {\n      this.setChecked(true);\n    } else if (value == this.value) {\n      this.setChecked(true);\n    }\n    else if (this.getParent() != null) {\n      const group = this.getParent().getRadioButtonGroup(this.group);\n\n      if (group != null) {\n        for (let radio of group) {\n          if (radio.getValue() == value) {\n            radio.setChecked(true);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Get JSON representation for the radiobutton component\n   * @returns JSON\n   */\n  toJson(): {} {\n    const json = super.toJson();\n\n    json[\"group\"] = this.group;\n    json[\"selected\"] = this.checked === true ? \"true\" : \"false\";\n\n    return json;\n  }\n\n  /**\n   * Get the NexaWeb tag name\n   * @return Tag name\n   */\n  protected getNxTagName() {\n    return \"radioButton\";\n  }\n\n  /**\n   * Uncheck all radio buttons in the radio button's group\n   */\n  private resetGroupRadios() {\n    const group = this.getParent().getRadioButtonGroup(this.group);\n\n    if (group != null) {\n      for (let radio of group) {\n        radio.setChecked(false);\n      }\n    }\n  }\n\n  /**\n   * Get [[cd]] (ChangeDetector) of this component\n   */\n  protected getChangeDetector(): ChangeDetectorRef {\n    return this.cd;\n  }\n\n  /**\n   * Check if this component is a radiobutton\n   * @returns True\n   */\n  protected isRadioButton() {\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RadioButtonComponent } from './radio-button.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [RadioButtonComponent],\n  exports: [\n    RadioButtonComponent,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    RadioButtonComponent\n  ]\n})\nexport class RadioButtonModule { }\n","import { Component, OnInit, ElementRef, ChangeDetectionStrategy, SkipSelf, Optional, forwardRef, Renderer2, ChangeDetectorRef, Input, ViewChild, NgZone } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\n\n/**\n * Class for scroll pane component\n */\n@Component({\n  selector: 'vt-scroll-pane',\n  templateUrl: './scroll-pane.component.html',\n  styleUrls: ['./scroll-pane.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>ScrollPaneComponent)\n    }\n  ]\n})\nexport class ScrollPaneComponent extends BaseComponent implements OnInit {\n\n  //æå®ãããåã ãåºå®é¨åã¨ãã¦é¤ããããä»¥å¤ãå¯å¤é åã¨ãã\n  @Input() resizeHeight: string;\n  @Input() skipScrollAdjustment: boolean;\n\n  @ViewChild('scrollDiv') scrollDivElement: ElementRef;\n\n  private _scrollerHandler: (event)=>void;\n\n  private _scrollVerticalPos = 0;\n  /**\n   *\n   * @param parent see [[BaseComponent]] constructor\n   * @param sessionService see [[BaseComponent]] constructor\n   * @param elementRef see [[BaseComponent]] constructor\n   * @param renderer see [[BaseComponent]] constructor\n   * @param cd Change detector for this component instance\n   */\n  constructor(\n    @Optional() @SkipSelf() parent: BaseComponent,\n    sessionService: SessionService,\n    elementRef: ElementRef,\n    renderer: Renderer2,\n    private cd: ChangeDetectorRef,\n    private zone: NgZone\n  ) {\n    super(parent, sessionService, elementRef, renderer);\n\n    this._scrollerHandler = (event)=>{\n      this.handleOnScroll(event);\n    }\n  }\n\n  /**\n   * Get [[cd]] (Change detector) property value\n   * @returns Change detector reference\n   */\n  getChangeDetector() {\n    return this.cd;\n  }\n\n  /**\n   * After view init lifecycle. Set dimensions and trigger change detection\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (this.controlHeight == null) {\n      this.controlHeight = '100%';\n    }\n    if (this.controlHeight != null && this.controlHeight !== \"\") {\n      this.styles[\"height\"] = this.controlHeight + \"px\";\n    }\n\n    if (this.controlWidth != null && this.controlWidth !== \"\") {\n      this.styles[\"max-width\"] = this.controlWidth + \"px\";\n    }\n\n    if (this.maxHeight != null && this.maxHeight !== \"\") {\n      this.styles[\"max-height\"] = this.maxHeight + \"px\";\n    }\n    if (this.resizeHeight != null && this.resizeHeight !== \"\") {\n      this.styles[\"height\"] = \"calc(100% - \" + this.resizeHeight + \"px)\";\n    }\n\n    this.zone.runOutsideAngular(()=>{\n      //for https://github.com/weaveio/ngnsophia/issues/1392, track position of scroll pane\n      //so it can be reset back when user switching tabs\n      if (this.skipScrollAdjustment !== true) {\n        (this.scrollDivElement.nativeElement as HTMLElement).addEventListener(\"scroll\", this._scrollerHandler, true);\n      }\n    });\n\n    this.cd.detectChanges();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    (this.scrollDivElement.nativeElement as HTMLElement).removeEventListener(\"scroll\", this._scrollerHandler, true);\n    this._scrollerHandler = null;\n  }\n\n  /**\n   * Scroll event of div\n   */\n  private handleOnScroll(event) {\n    this._scrollVerticalPos = event.srcElement.scrollTop;\n  }\n\n  resetScrollTopToPreviousPosition() {\n    this.zone.runOutsideAngular(()=>{\n      setTimeout(()=>{\n        if(this.scrollDivElement.nativeElement.scrollTop != this._scrollVerticalPos) {\n          this.scrollDivElement.nativeElement.scrollTop = this._scrollVerticalPos;\n        }\n      }, 300);\n    });\n  }\n\n  resetScrollTopPosition() {\n    this.zone.runOutsideAngular(()=>{\n      setTimeout(()=>{\n        this._scrollVerticalPos = 0;\n        this.scrollDivElement.nativeElement.scrollTop = this._scrollVerticalPos;\n      }, 300);\n    });\n  }\n\n  isScrollView(): boolean {\n    return true;\n  }\n\n  isScrollPane() {\n    return true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScrollPaneComponent } from './scroll-pane.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ScrollPaneComponent],\n  exports: [\n    ScrollPaneComponent\n  ]\n})\nexport class ScrollPaneModule { }\n","import * as _ from \"lodash\";\n\nexport class StringBuilder {\n  private _internalString: string = \"\";\n\n  constructor(initial?: string) {\n    if (initial != null) {\n      this.append(initial);\n    }\n  }\n\n  append(str: string | StringBuilder) {\n    if (str instanceof StringBuilder) {\n      this._internalString = this._internalString + str.toString();\n    } else {\n      this._internalString = this._internalString + str;\n    }\n    return this;\n  }\n\n  toString() {\n    return this._internalString;\n  }\n\n  clear() {\n    this._internalString = \"\";\n    return this;\n  }\n\n  destroy() {\n    this.clear();\n  }\n\n  indexOf(str: string): number {\n    return this._internalString.indexOf(str);\n  }\n\n  substring(startIdx: number, endIdx?: number): string {\n    if (endIdx != null) {\n      return this._internalString.substring(startIdx, endIdx);\n    }\n\n    return this._internalString.substring(startIdx);\n  }\n\n  replace(startIdx: number, endIdex: number, replaceStr: string): StringBuilder {\n    const b = this._internalString.substring(0, startIdx);\n    const e = this._internalString.substring(endIdex);\n\n    this._internalString = b + replaceStr + e;\n    return this;\n  }\n\n  length() {\n    return this._internalString.length;\n  }\n\n  charAt(i: number): string {\n    if (i < this._internalString.length) {\n      return this._internalString.charAt(i);\n    }\n\n    return null;\n  }\n\n  setCharAt(idx: number, val: number | string): void {\n    if (typeof val === \"number\") {\n      this.insert(idx, String.fromCharCode(val));\n    } else {\n      this.insert(idx, val);\n    }\n  }\n\n  deleteCharAt(i: number): StringBuilder {\n    this.replace(i, i, '');\n    return this;\n  }\n\n  insert(index: number, str: string): StringBuilder {\n    if (index <= this._internalString.length) {\n      this._internalString = this._internalString.substring(0, index - 1) + str + this._internalString.substring(index);\n    }\n\n    return this;\n  }\n\n  lastIndexOf(chr: string) {\n    if (this._internalString != null) {\n      return _.lastIndexOf(this._internalString, chr);\n    }\n\n    return -1;\n  }\n}\n","import { Directive, TemplateRef, Input } from '@angular/core';\n\n/**\n * This directive serve as a template for rendering table cell.\n */\n@Directive({\n    selector: '[vt-table-cell]'\n})\nexport class TableCellDirective {\n    @Input() onContextMenuCb: (parentView: any)=>void;\n\n    /**\n     * Horizontal alignment (center, left, right)\n     */\n    @Input() alignHorizontal: string;\n    \n    /**\n     * \n     * @param template Template on how to render the cell, we will forward row, column, etc to the template\n     */\n    constructor(public template: TemplateRef<any>) {\n\n    }\n}\n","import { Directive, TemplateRef, Input } from '@angular/core';\n\n/**\n * This template is used to render header if a customer rendering is needed, by default, header can be passed in\n * to the TableColumnDirective as a string\n */\n@Directive({\n    selector: '[vt-table-header]'\n})\nexport class TableHeaderDirective {\n    @Input() id: string;\n    @Input() autoWrap: boolean | string;\n    /**\n     * \n     * @param template Template on how to render the header, we will forward row, column, etc to the template\n     */\n    constructor(public template: TemplateRef<any>) {\n        \n    }\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\n\n@Directive({\n  selector: 'vt-header'\n})\nexport class HeaderDirective implements OnInit {\n  @Input() text: string;\n  @Input() cssClass: string;\n  @Input() controlHeight: string;\n  @Input() controlWidth: string;\n  @Input() headerHeight: string;\n  @Input() autoWrap: boolean | string;\n  @Input() id: string;\n\n  constructor() { }\n\n  ngOnInit() {\n    if (this.id == null) {\n      this.id = BaseComponent.generateUniqueId(\"header\");\n    }\n  }\n\n}\n","import { Directive, Input, TemplateRef, ContentChild, OnInit } from '@angular/core';\n\nimport { TableCellDirective } from './table-cell.directive';\nimport { TableHeaderDirective } from './table-header.directive';\nimport { HeaderDirective } from './header.directive';\nimport { CellDefinition } from './cell-definition';\nimport { BaseComponent } from '../base/base.component';\nimport { AttributesEnum } from '../base/attributes.enum';\nimport { JavaUtils } from '../java/java-utils';\n\n@Directive({\n    selector: 'vt-table-column'\n})\nexport class TableColumnDirective implements OnInit {\n    //TODO\n    @Input() locked: boolean = false;\n\n    //TODO\n    @Input() enabled: boolean = true;\n\n    @Input() sortable: boolean = true;\n\n    @Input() isChecked: boolean = false;\n\n    /**\n     * Horizontal alignment (center, left, right)\n     */\n    @Input() alignHorizontal: string;\n\n    @Input() id: string;\n\n    //cell template\n    @ContentChild(TableCellDirective, {read: TableCellDirective})\n    cellTemplate: TableCellDirective;\n\n    //header template if we want to render the header differently (i.e. checkbox, etc)\n    @ContentChild(TableHeaderDirective, {read: TemplateRef})\n    headerTemplate: TemplateRef<any>;\n\n    //header tag?\n    @ContentChild(HeaderDirective) headerDirective: HeaderDirective;\n\n    //default, use the {header} as the header for the cell\n    @Input() set header (header: string) {\n        this._header = header;\n    }\n\n    get header(): string {\n        return this.headerDirective ? this.headerDirective.text : this._header;\n    }\n\n    @Input() autoWrap: boolean;\n\n    _header: string;\n\n    sortDirection: string;\n\n    originalColumnIndex: number;\n\n    @Input() controlWidth: string | number;\n    @Input() controlHeight: string | number;\n\n    @Input() cellHeight: string | number;\n\n    @Input() headerHeight: string | number;\n\n    @Input() set visible(vis: boolean) {\n        this._visible = vis;\n\n        if (this._visible === true) {\n            if (this.styles) {\n                delete this.styles[\"display\"];\n            }\n        } else {\n            if (this.styles) {\n                this.styles[\"display\"] = \"none\";\n            } else {\n                this.styles = {\n                    \"display\": \"none\"\n                }\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    _visible: boolean = true;\n\n    @Input() customAttributes: {[name: string]: any};\n\n    styles: {[name: string]: string};\n\n    get isHeaderTemplate() {\n        return this.headerTemplate === null || this.headerTemplate === undefined ? false : true;\n    }\n\n    /**\n     * Don't track this column (that is, use for display only).\n     */\n    @Input() skipTracking: boolean;\n\n    ngOnInit() {\n      if (this.headerDirective != null) {\n        this.header = this.headerDirective.text;\n\n        if (this.autoWrap == null) {\n            this.autoWrap = this.headerDirective.autoWrap === true || this.headerDirective.autoWrap === \"true\"\n        }\n      }\n\n      if (this.id == null) {\n          this.id = BaseComponent.generateUniqueId(\"column\");\n      }\n\n      if (this.headerHeight != null) {\n        this.headerHeight = this.headerHeight;\n      }\n\n    }\n\n    setAttribute(name: string, value: string) {\n        if (typeof name === \"number\" && name === AttributesEnum.VISIBLE) {\n            this.visible = JavaUtils.parseBoolean(value);\n        } else {\n            if (this.customAttributes == null) {\n                this.customAttributes = {};\n            }\n\n            this.customAttributes[name] = value;\n        }\n    }\n\n    getAttribute(name: string): string {\n        if (typeof name === \"number\" && name === AttributesEnum.VISIBLE) return this.visible as any;\n        if (typeof name === \"number\" && name === AttributesEnum.ID) return this.id;\n\n        let retVal = this.customAttributes != null ? this.customAttributes[name] : null;\n\n        if (typeof retVal !== \"string\") {\n          retVal = retVal + \"\";\n        }\n\n        return retVal;\n    }\n\n    setVisible(vis: boolean) {\n      this.visible = vis;\n    }\n}\n","export class TableSelectionEvent {\n    constructor(\n        public rows: Array<any>\n    ){}\n}","import { BaseComponent } from \"../base/base.component\";\nimport { Renderer2 } from \"@angular/core\";\nimport { SessionService } from \"../session/session.service\";\nimport { ClientEvent } from \"../event-handler/client-event\";\nimport { AppUtils } from \"../base/app-utils\";\nimport * as _ from \"lodash\";\nimport { LabelComponent } from \"../label/label.component\";\nimport { AttributeChangeListener } from \"../base/attribute-change-listener\";\nimport { AttributeChangeEvent } from \"../base/attribute-change-event\";\ndeclare var jQuery: any;\n\nexport class HTMLElementWrapper implements AttributeChangeListener {\n  // attributes: Map<string, string>;\n  // text: any;\n  // draggable: string;\n  // cssClass: string;\n  // onDoubleClick: string;\n  // onContextMenu: string;\n  // onMouseDown: string;\n  // popupName: string;\n\n  private parent: HTMLElementWrapper;\n  private localName: string;\n  parentTableId: string;\n  parentScreenId: string;\n  parentTable: any;\n\n  _uniqueId: string;\n  htmlElement: HTMLElement;\n  component: BaseComponent;\n\n  //for none dynamic stuf\n  childNodes: Array<HTMLElementWrapper> = [];\n\n  //for tree table\n  dynamicChildNodes: Array<HTMLElementWrapper>;\n\n  onContextHandler: (event) => any;\n  onMouseDownHandler: (event) => any;\n  onDoubleClickHandler: (event) => any;\n\n  //indicate that component create dynamically (via createElement)\n  private _dynamicComponent: boolean;\n\n  popupName: string;\n  contextMenuAction: string | ((any) => any);\n  mouseDownAction: string | (() => any);\n  doubleClickAction: string | (() => any);\n  rowNumber: number;\n  expanded: string;\n\n  private childRows: Array<HTMLElementWrapper>;\n\n  get id() {\n    return this.getId();\n  }\n  private customAttributes: {[name: string]: any} = null;\n  private attributesName: Array<string>;\n\n  private fauxElementAttributes: Map<string, string>;\n\n  private draggableApplied: boolean;\n\n  customData: any;\n\n  static createVirtualElement(type: string): HTMLElementWrapper {\n    return new HTMLElementWrapper(null, type, null, true);\n  }\n\n  constructor(private renderer: Renderer2, type: string, private sessionService: SessionService, virtual: boolean = false, docFragment: DocumentFragment = null) {\n    this._uniqueId = BaseComponent.generateUniqueId(type);\n\n    this.localName = type;\n\n    if (type === \"row\" && virtual !== true) {\n      this.htmlElement = this.renderer.createElement(\"tr\");\n      this._dynamicComponent = true;\n    } else if (type === \"cell\" && virtual !== true) {\n      this.htmlElement = this.renderer.createElement(\"td\");\n      this._dynamicComponent = true;\n    } else if (type === \"label\" || type === \"menuItem\" || virtual === true) {\n      this.fauxElementAttributes = new Map<string, string>();\n      this.setAttribute(\"id\", this._uniqueId);\n    }\n\n    if (this._dynamicComponent === true) {\n      if (this.htmlElement instanceof HTMLTableRowElement) {\n        this.htmlElement.setAttribute(\"data-tt-id\", this._uniqueId);\n      }\n\n      this.onContextHandler = (event) => {\n        const clientEvent = new ClientEvent(this, event);\n\n        if (AppUtils.customizeClientEvent != null) {\n          AppUtils.customizeClientEvent(this, clientEvent);\n        }\n\n        if (this.parentScreenId != null) {\n          clientEvent.setParameter(\"screenId\", this.parentScreenId);\n        }\n\n        this.sessionService.getEventHandler().setClientEvent(clientEvent);\n\n        if (typeof this.contextMenuAction === \"string\") {\n          this.invokeMcoAction(this.contextMenuAction);\n        } else if (typeof this.contextMenuAction === \"function\") {\n          this.contextMenuAction.apply(this, [this]);\n        }\n\n        this.showPopupMenu(event);\n      };\n\n      this.htmlElement.addEventListener(\"mousedown\", (event) => this.onMouseDownHandler(event), true);\n      this.htmlElement.addEventListener(\"dblclick\", (event) => this.onDoubleClickHandler(event), true);\n\n      this.onMouseDownHandler = (event) => {\n        this.handleOnMouseDown(event);\n      };\n\n      this.onDoubleClickHandler = (event) => {\n        this.handleDoubleClick(event);\n      };\n    }\n  }\n\n  destroy(skipDestroyChild: boolean = false) {\n    if (this._dynamicComponent === true && this.htmlElement != null) {\n      this.htmlElement.removeEventListener(\"contextmenu\", this.onContextHandler, true);\n      this.htmlElement.removeEventListener(\"mousedown\", this.onMouseDownHandler, true);\n      this.htmlElement.removeEventListener(\"dblclick\", this.onDoubleClickHandler, true);\n    }\n\n    if (this.childNodes != null && skipDestroyChild !== true) {\n      let stack = this.childNodes;\n\n      while (stack.length > 0) {\n        const node = stack.pop();\n\n        if (node.childNodes != null) {\n          stack = stack.concat(node.childNodes);\n        }\n\n        node.destroy(true);\n      }\n    }\n\n    if (this.dynamicChildNodes != null && skipDestroyChild !== true) {\n      let stack = this.dynamicChildNodes;\n\n      while (stack.length > 0) {\n        const node = stack.pop();\n\n        if (node.dynamicChildNodes != null) {\n          stack = stack.concat(node.dynamicChildNodes);\n        }\n\n        node.destroy(true);\n      }\n    }\n\n    if (this.childRows != null && skipDestroyChild !== true) {\n      let stack = this.childRows;\n\n      while (stack.length > 0) {\n        const node = stack.pop();\n\n        if (node.childRows != null) {\n          stack = stack.concat(node.childRows);\n        }\n\n        node.destroy(true);\n      }\n    }\n\n    if (this.component != null) {\n      this.component.removeAttributeChangeListener(this);\n    }\n\n    this.htmlElement = null;\n    this.parent = null;\n    this._uniqueId = null;\n    this.component = null;\n    this.childNodes = null;\n    this.attributesName = null;\n    this.fauxElementAttributes = null;\n    this.childRows = null;\n  }\n\n  setText(text: any) {\n    if (this._dynamicComponent === true) {\n      this.renderer.setProperty(this.htmlElement, \"innerHTML\", text);\n    } else if (this.component != null) {\n      this.component.setText(text);\n    } else if (this.fauxElementAttributes != null) {\n      this.fauxElementAttributes.set(\"text\", text);\n    }\n  }\n\n  setFontSize(size: any) {\n    if (this._dynamicComponent === true) {\n      this.renderer.setStyle(this.htmlElement, \"font-size\", size + \"px\");\n    } else if (this.component != null) {\n      this.component.setFontSize(size);\n    } else if (this.fauxElementAttributes != null) {\n      this.fauxElementAttributes.set(\"fontSize\", size);\n    }\n  }\n\n  setFontBold(bold: any) {\n    if (this._dynamicComponent === true) {\n      if (bold === \"true\" || bold === true) {\n        this.renderer.setStyle(this.htmlElement, \"font-weight\", \"bold\");\n      } else {\n        this.renderer.setStyle(this.htmlElement, \"font-weight\", \"normal\");\n      }\n    } else if (this.component != null) {\n      this.component.setFontBold(bold);\n    } else if (this.fauxElementAttributes != null) {\n      this.fauxElementAttributes.set(\"fontBold\", bold);\n    }\n  }\n\n  setClass(css: string) {\n    if (css != null && css.indexOf(\".\") >= 0) {\n      const temp = css.split(\"\\.\");\n\n      let cssClass = temp.join(\"-\");\n\n      if (temp[0] === \"\") {\n        css = cssClass.substring(1);\n      }\n    }\n    if (this.htmlElement != null) {\n      this.renderer.setAttribute(this.htmlElement, \"class\", css);\n    } else if (this.component != null) {\n      this.component.addCssClass(css);\n    } else if (this.fauxElementAttributes != null) {\n      this.setAttribute(\"class\", css);\n    }\n  }\n\n  /**\n   * Insert a child row at specific location\n   * @param idx\n   * @param child\n   */\n  insertChildRowAt(idx: number, child: HTMLElementWrapper) {\n    if (child.htmlElement instanceof HTMLTableRowElement !== true && this._dynamicComponent === true) {\n      throw new Error(\"Invalid insertion, only HTMLTableRowElement is allowed\");\n    }\n\n    if (idx > 0 && (this.childRows == null || this.childRows.length <= idx)) {\n      throw new Error(\"Unable to insert child row at this specific location (index overflow)\");\n    } else if (idx >= 0 && (this.childRows != null && this.childRows.length > idx)) {\n      //track child rows so we can used insertChildRowAt\n      if (this.childRows == null) {\n        this.childRows = [];\n      }\n\n      if (this.parentTable.useDocFragment === true) {\n        (this.parentTable._bodyFragment as DocumentFragment).insertBefore(child.htmlElement, this.childRows[idx].htmlElement);\n      } else {\n        this.renderer.insertBefore(this.parentTable.tableBody.nativeElement, child.htmlElement, this.childRows[idx].htmlElement);\n      }\n\n      this.childRows.splice(idx, 0, child);\n    }\n\n    this.renderer.setAttribute(child.htmlElement, \"data-tt-parent-id\", this._uniqueId);\n\n    child.parent = this;\n  }\n\n  /**\n   * Append a child to this element. If this is a row and we append a row, set {@ appendToTable} to true\n   * will also append the actual table row (tr) to the table.\n   *\n   * @param child child to be appended\n   * @param appendToTable\n   */\n  appendChild(child: HTMLElementWrapper, appendToTableIfRow: boolean = false) {\n    if (this._dynamicComponent === true) {\n      if (child.htmlElement instanceof HTMLTableRowElement) {\n        this.renderer.setAttribute(child.htmlElement, \"data-tt-parent-id\", this._uniqueId);\n\n        if (appendToTableIfRow === true) {\n          if (this.parentTable.useDocFragment === true) {\n            (this.parentTable._bodyFragment as DocumentFragment).appendChild(child.htmlElement);\n          } else {\n            this.renderer.appendChild(this.parentTable.tableBody.nativeElement, child.htmlElement);\n          }\n        }\n\n        //track child rows so we can used insertChildRowAt\n        if (this.childRows == null) {\n          this.childRows = [];\n        }\n\n        this.childRows.push(child);\n      } else if (child.htmlElement instanceof HTMLTableCellElement) {\n        this.renderer.appendChild(this.htmlElement, child.htmlElement);\n\n        if (this.dynamicChildNodes == null) {\n          this.dynamicChildNodes = [];\n        }\n\n        this.dynamicChildNodes.push(child);\n      }\n    } else {\n      this.childNodes.push(child);\n    }\n\n    child.parent = this;\n  }\n\n  appendCustomAttributes(cust: { [name: string]: string }) {\n    if (cust != null) {\n      const keys = _.keys(cust);\n\n      for (let key of keys) {\n        this.setAttribute(key, cust[key]);\n      }\n    }\n  }\n\n  //NSD will override this, added to fix error\n  // setCustomAttribute(name: string, value: string) {\n  //   this.setAttribute(name, value);\n  // }\n\n  setAttribute(name: string, value: string) {\n    if(name === 'selected' && this.localName == 'row'){\n      if(this.parentTable != null){\n        if(value == 'true')\n          this.parentTable.selectRow(this, true);\n        else\n          this.parentTable.selectRow(this, false);\n        this.parentTable.markForCheck();\n      }\n    }\n    if (name === \"expanded\") {\n      this.expandNode(value);\n    } else if (this.component != null) {\n      this.component.setAttribute(name, value);\n      this.trackAttributeName(name);\n    } else if (this.htmlElement != null) {\n      if (name === \"isLockedColumn\") {\n        if (this.fauxElementAttributes == null) {\n          this.fauxElementAttributes = new Map<string, string>();\n        }\n\n        this.fauxElementAttributes.set(name, value);\n      } else {\n        this.renderer.setAttribute(this.htmlElement, name, value);\n      }\n\n      this.trackAttributeName(name);\n    } else if (this.fauxElementAttributes != null) {\n      this.fauxElementAttributes.set(name, value);\n      this.trackAttributeName(name);\n    }\n  }\n\n  getAttribute(name: any, skipQueryDOMIfNotExists: boolean = false) {\n    if (name === \"expanded\") {\n      return this.expanded === \"true\" ? \"true\" : \"false\";\n    }\n\n    if (this.component != null) {\n      return this.component.getAttribute(name, skipQueryDOMIfNotExists);\n    } else if (this.htmlElement != null && skipQueryDOMIfNotExists !== true) {\n      if (name === \"text\") {\n        let text = this.htmlElement.getAttribute(name);\n\n        if (text == null) {\n          text = this.htmlElement.innerText;\n        }\n\n        if (text == null || text === \"\") {\n          text = (this.htmlElement as HTMLTableCellElement).textContent;\n        }\n\n        if (typeof text === \"string\") {\n          text = text.trim();\n        }\n\n        return text;\n      } else if (name === \"isLockedColumn\" && this.fauxElementAttributes != null) {\n        return this.fauxElementAttributes.get(name);\n      } else if (name === \"isLockedColumn\") {\n        return \"false\";\n      }\n\n      return this.htmlElement.getAttribute(name);\n    } else if (this.fauxElementAttributes != null) {\n      return this.fauxElementAttributes.get(name);\n    }\n  }\n\n  getText() {\n    return this.getAttribute(\"text\");\n  }\n\n  getId() {\n    return this.getAttribute(\"id\");\n  }\n\n  setDraggable(draggable: string) {\n    this.setAttribute(\"draggable\", draggable);\n\n    if (draggable == \"true\") {\n      this.applyDraggable();\n    }\n  }\n\n  getExpanded(): string {\n    return this.getAttribute(\"expanded\");\n  }\n\n  setExpanded(str: string) {\n    this.setAttribute(\"expanded\", str);\n  }\n\n  setOnContextMenu(action: string | (() => any)) {\n    if (this.htmlElement != null) {\n      this.contextMenuAction = action;\n      this.htmlElement.addEventListener(\"contextmenu\", (event) => this.onContextHandler(event), true);\n    }\n  }\n\n  setOnMouseDown(action: string | (() => any)) {\n    this.mouseDownAction = action;\n  }\n\n  setOnDoubleClick(action: string | (() => any)) {\n    this.doubleClickAction = action;\n  }\n\n  setPopup(popupName: string) {\n    this.popupName = popupName.replace(\"#\", \"\");\n  }\n\n  getParent() {\n    return this.parent;\n  }\n\n  getLocalName() {\n    return this.localName;\n  }\n\n  setLocaleName(localName: string) {\n    this.localName = localName;\n  }\n\n  getChildren() {\n    let children: Array<HTMLElementWrapper> = this.childNodes;\n\n    if ((children == null || children.length === 0) && (this.dynamicChildNodes != null)) {\n      children = this.dynamicChildNodes;\n    }\n\n    if (\n      this.getLocalName() === \"row\" &&\n      children != null &&\n      this.parentTable != null &&\n      this.parentTable.getLocalName() === \"table\" &&\n      this.parentTable.columnsHasBeenSwapped === true\n    ) {\n      children = _.orderBy(children, (child: HTMLElementWrapper)=> {\n        return child[\"originalColumnIndex\"];\n      }) as any;\n    }\n\n    return children;\n  }\n\n  getChildCount(): number {\n    return this.childNodes != null ? this.childNodes.length : 0;\n  }\n\n  getChildAt(idx: number): HTMLElementWrapper {\n    return this.getChildCount() > idx ? this.childNodes[idx] : null;\n  }\n\n  setComponent(component: BaseComponent, fromVirtualTable: boolean = false) {\n    this.component = component;\n    this.component.parentTableRow = this.parent;\n\n    if (component != null && fromVirtualTable === true) {\n      component.addAttributeChangeListener(this);\n    }\n  }\n\n  private invokeMcoAction(action: string | (() => any)) {\n    if (typeof action === \"function\") {\n      action();\n    } else if (action.indexOf(\"mco://\") === 0) {\n      const mcoName = action.substring(6, action.indexOf(\".\"));\n      const methodName = action.substring(action.indexOf(\".\") + 1, action.indexOf(\"(\"));\n      const arg = action.substring(action.indexOf(\"(\") + 1, action.indexOf(\")\"));\n\n      if (arg != null && arg.length > 0) {\n        const mco = this.sessionService.getMcoContainer().getMco(mcoName);\n\n        if (mco != null) {\n          if (arg === \"this\") {\n            mco[methodName].apply(mco, [this]);\n          } else {\n            mco[methodName].apply(mco, [arg]);\n          }\n        } else {\n          console.error(\"Unable to execute MCO action, mco not found: \" + mcoName);\n        }\n      } else {\n        const mco = this.sessionService.getMcoContainer().getMco(mcoName);\n\n        if (mco != null) {\n          mco[methodName].apply(mco);\n        } else {\n          console.error(\"Unable to execute MCO action, mco not found: \" + mcoName);\n        }\n      }\n    }\n  }\n\n  getComponent(): BaseComponent {\n    return this.component;\n  }\n\n  private showPopupMenu(event: MouseEvent) {\n    this.sessionService.setMousePosition(event);\n\n    if (this.popupName != null) {\n      const contextMenu = this.sessionService.showContextMenu(this.popupName);\n\n      if (contextMenu === true) {\n        event.preventDefault();\n        event.stopPropagation();\n\n        // contextMenu.show(this.htmlElement);\n      }\n    }\n\n    const clientEvent = new ClientEvent(this, event);\n\n    if (AppUtils.customizeClientEvent != null) {\n      AppUtils.customizeClientEvent(this, clientEvent);\n    }\n\n    clientEvent.setParameter(\"screenId\", this.parentScreenId);\n\n    this.sessionService.getEventHandler().setClientEvent(clientEvent);\n  }\n\n  private handleOnMouseDown(event) {\n    if(this.parentTable != null){\n      let table = this.parentTable.elementRef.nativeElement;\n      let tds: NodeList = table.querySelectorAll('td');\n\n      for (let i = 0; i < tds.length; i++) {\n        (tds[i] as any).style.color = '';\n      }\n\n      tds = this.htmlElement.querySelectorAll('td');\n      for (let i = 0; i < tds.length; i++) {\n        (tds[i] as any).style.color = 'blue';\n      }\n    }\n\n    if (this.mouseDownAction != null) {\n      const clientEvent = new ClientEvent(this, event);\n\n      if (AppUtils.customizeClientEvent != null) {\n        AppUtils.customizeClientEvent(this, clientEvent);\n      }\n\n      if (this.parentScreenId != null) {\n        clientEvent.setParameter(\"screenId\", this.parentScreenId);\n      }\n\n      this.sessionService.getEventHandler().setClientEvent(clientEvent);\n\n      this.invokeMcoAction(this.mouseDownAction);\n    }\n  }\n\n  private handleDoubleClick(event) {\n    const clientEvent = new ClientEvent(this, event);\n\n    if (AppUtils.customizeClientEvent != null) {\n      AppUtils.customizeClientEvent(this, clientEvent);\n    }\n\n    if (this.parentScreenId != null) {\n      clientEvent.setParameter(\"screenId\", this.parentScreenId);\n    }\n\n    this.sessionService.getEventHandler().setClientEvent(clientEvent);\n\n    if (this.doubleClickAction != null) {\n      this.invokeMcoAction(this.doubleClickAction);\n    }\n  }\n\n  expandNode(isExpanded: boolean | string, justUpdateAttribute: boolean = false) {\n    this.expanded = typeof isExpanded === \"string\" ? isExpanded : isExpanded + '';\n\n    if (justUpdateAttribute !== true && this.parentTableId != null && this.parentTableId !== \"\") {\n      const jq = jQuery(`#${this.parentTableId} .jq-tree-table`);\n\n      if (jq != null) {\n        let nodeId: string = this.getAttribute(\"data-tt-id\");\n\n        if (nodeId != null) {\n          try {\n            if (isExpanded === \"true\" || isExpanded === true) {\n              jq.treetable(\"expandNode\", nodeId);\n            } else {\n              jq.treetable(\"collapseNode\", nodeId);\n            }\n          } catch (e) {\n            console.error(\"Unable to expand node due to error\");\n          }\n        }\n      } else {\n        console.error(\"Unable to expand node, tree table is null\");\n      }\n    }\n  }\n\n  private trackAttributeName(name: string) {\n    if (this.attributesName == null) {\n      this.attributesName = [];\n    }\n\n    this.attributesName.push(name);\n  }\n\n  toJson(): {} {\n    let retVal = {};\n\n    if (this.component != null) {\n      retVal = this.component.toJson();\n\n      if (this.component instanceof LabelComponent) {\n        retVal[\"nxTagName\"] = this.getLocalName();\n        retVal[\"tagName\"] = this.getLocalName();\n      }\n    } else {\n      retVal[\"nxTagName\"] = this.getLocalName();\n      retVal[\"tagName\"] = this.getLocalName();\n    }\n\n    if (this.component == null) {\n      retVal[\"id\"] = this.getId() || this._uniqueId;\n      retVal[\"text\"] = this.getText();\n    }\n\n    if (this.attributesName != null) {\n      this.attributesName.forEach(name => {\n        retVal[name] = this.getAttribute(name);\n      });\n    }\n\n    //any children?\n    let children: Array<HTMLElementWrapper>;\n    if (this.childNodes != null && this.childNodes.length > 0) {\n      children = this.childNodes;\n    } else if (this.dynamicChildNodes != null && this.dynamicChildNodes.length > 0) {\n      children = this.dynamicChildNodes;\n    }\n\n    if (children != null) {\n      if (\n        this.getLocalName() === \"row\" &&\n        this.parentTable != null &&\n        this.parentTable.getLocalName() === \"table\" &&\n        this.parentTable.columnsHasBeenSwapped === true\n      ) {\n        children = _.orderBy(children, (child: HTMLElementWrapper)=> {\n          return child[\"originalColumnIndex\"];\n        }) as any;\n      }\n\n      retVal[\"children\"] = children.map(child=>child.toJson());\n    }\n    if(this.customAttributes)\n      retVal['customAttributes'] = this.customAttributes;\n    return retVal;\n  }\n\n  isView(): boolean {\n    return false;\n  }\n\n  isDialog(): boolean {\n    return false;\n  }\n\n  isDynamicView(): boolean {\n    return false;\n  }\n\n  isFauxElement() {\n    return true;\n  }\n\n  setChecked(chk: string | boolean) {\n    if (typeof chk === \"boolean\") {\n      chk = chk + \"\";\n    }\n\n    this.setAttribute(\"checked\", chk);\n  }\n\n  /**\n   * Search for child using the provided function\n   *\n   * @param fn function to execute while iterating child lookup\n   */\n  findChildByFn(fn: (element: HTMLElementWrapper)=>boolean) {\n    let retVal: HTMLElementWrapper;\n\n    let children: Array<HTMLElementWrapper> = this.concatNode([] as any, this);\n\n    while(children.length > 0) {\n      const child = children.pop();\n\n      if (child != null) {\n        if (fn(child) === true) {\n          retVal = child;\n          break;\n        } else {\n          children = this.concatNode(children, child);\n        }\n      }\n    }\n\n    return retVal;\n  }\n\n  /**\n   * Concate {fromNode} to {toNode}\n   *\n   * @param toNode array of nodes to be concated to\n   * @param fromNode node to be concated from\n   * @returns the concated node\n   */\n  private concatNode(toNode: Array<HTMLElementWrapper>, fromNode: HTMLElementWrapper): Array<HTMLElementWrapper> {\n    let retVal = toNode;\n\n    if (fromNode != null) {\n      if (fromNode.childNodes != null) {\n        retVal = retVal.concat(fromNode.childNodes);\n      }\n\n      if (fromNode.childRows != null) {\n        retVal = retVal.concat(fromNode.childRows);\n      }\n\n      if (fromNode.dynamicChildNodes != null) {\n        retVal = retVal.concat(fromNode.dynamicChildNodes);\n      }\n    }\n\n    return retVal;\n  }\n\n  //attribute change listener\n  _internalId: string;\n\n  beforeAttributeRemoved(evt: AttributeChangeEvent): void {\n\n  }\n\n  beforeAttributeSet(evt: AttributeChangeEvent): void {\n\n  }\n\n  onAttributeRemoved(evt: AttributeChangeEvent): void {\n\n  }\n\n  onAttributeSet(evt: AttributeChangeEvent): void {\n    if (evt.getName() === \"sortValue\" && this.htmlElement != null) {\n      this.updateSortValue(evt.getNewValue());\n    }\n  }\n\n  private updateSortValue(value) {\n    if (this.renderer != null) {\n      this.renderer.setAttribute(this.htmlElement, \"data-text\", value);\n\n      if (this.component != null && this.component.getParent() != null && typeof (this.component.getParent() as any).refreshTableSorterCache === \"function\") {\n        (this.component.getParent() as any).refreshTableSorterCache();\n      }\n    }\n  }\n\n  isDraggable(): boolean {\n    return this.getAttribute(\"draggable\") === \"true\";\n  }\n\n  applyDraggable() {\n    if (this.isDraggable() && this.draggableApplied !== true && this.htmlElement != null) {\n      jQuery(this.htmlElement).draggable({\n        appendTo: \"body\",\n        addClasses: false,\n        helper: ()=>{\n          const helper: HTMLElement = document.createElement(\"div\");\n          helper.classList.add(\"draggable-row-helper\");\n          helper.id = \"draggableRowHelperInternal\";\n\n          // if (this.parentTable != null && this.parentTable.selectedRows != null && this.parentTable.selectedRows.length > 1) {\n          //   helper.classList.add(\"drag-row-helper-container\");\n\n          //   const c = this.parentTable.selectedRows.length;\n          //   const frag = document.createDocumentFragment();\n\n          //   for (let i = 0; i < c; i++) {\n          //     const row = document.createElement(\"div\");\n          //     row.classList.add(\"drag-row-helper-row\");\n          //     frag.appendChild(row);\n          //   }\n\n          //   helper.appendChild(frag);\n          // }\n\n          return helper;\n        },\n        start: ()=>{\n          const clientEvent = new ClientEvent(this, event);\n          clientEvent.setParameter(\"dragId\", this.parentTableId);\n\n          if (AppUtils.customizeClientEvent != null) {\n            AppUtils.customizeClientEvent(this, clientEvent);\n          }\n\n          if (this.parentScreenId != null) {\n            clientEvent.setParameter(\"screenId\", this.parentScreenId);\n          }\n\n          this.sessionService.getEventHandler().setClientEvent(clientEvent);\n        }\n      });\n    }\n\n    this.draggableApplied = true;\n  }\n\n  isDraggableApplied() {\n    return this.draggableApplied;\n  }\n  /**\n   * rowãªã©BaseComponentã¨ãã¦å­å¨ããªãwrapperã«customAttributesãè¨­å®ãã¾ãã\n   * @param name\n   * @param value\n   */\n  setCustomAttribute(name: string, value: any) {\n    if(!this.customAttributes)\n      this.customAttributes = {};\n    this.customAttributes[name] = value;\n  }\n}\n","import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'vt-table-row-def'\n})\nexport class TableRowDefDirective {\n  @Input() customAttributes: {[name: string]: string};\n  \n  constructor() { }\n\n}\n","import { Directive, TemplateRef, ContentChild, ContentChildren, QueryList } from '@angular/core';\nimport { TableCellDirective } from './table-cell.directive';\n\n@Directive({\n  selector: 'vt-footer-row'\n})\nexport class FooterRowDirective {\n\n  @ContentChildren(TableCellDirective, {read: TableCellDirective})\n  cellTemplates: QueryList<TableCellDirective>;\n\n}\n","import { Directive, TemplateRef, ContentChild, ContentChildren, QueryList, Input } from '@angular/core';\nimport { TableCellDirective } from './table-cell.directive';\n\n@Directive({\n  selector: 'vt-row'\n})\nexport class RowDirective {\n  @Input() customAttributes: {[name: string]: string};\n  @Input() id: string;\n  @Input() cssClass: string;\n\n  @ContentChildren(TableCellDirective, {read: TableCellDirective})\n  cellTemplates: QueryList<TableCellDirective>;\n}\n","import { Injectable, Inject } from '@angular/core';\nimport * as clipboard from \"clipboard-polyfill\";\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Clipboard service that use the modern implementation of cliboard. For older browser, a polyfill\n * is used instead.\n */\nexport class ClipboardService {\n\n  //constructor(@Inject(\"ClipboardPolyfill\") private clipboard: any) { }\n\n  /**\n   * Copy the {txt} text into the clipboard\n   * \n   * @param txt text to be copied into the clipboard\n   */\n  copy(txt: string) {\n    return clipboard.writeText(txt);\n  }\n}\n","//copy from dragndrop\nexport function isIE() {\n    var nav = navigator.userAgent.toLowerCase();\n    return nav.indexOf(\"msie\") !== -1 ? parseInt(nav.split(\"msie\")[1]) : false;\n}","import * as _ from 'lodash';\nimport { Component, ContentChildren, EventEmitter, Input, OnInit, Output, QueryList, ElementRef, ChangeDetectorRef, ChangeDetectionStrategy, ViewChild, SkipSelf, Optional, forwardRef, Renderer2, ContentChild, NgZone, IterableDiffers, IterableDiffer, DoCheck } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\nimport { TableColumnDirective } from './table-column.directive';\nimport { TableSelectionEvent } from './table-selection-event';\nimport { HTMLElementWrapper } from '../tree-table/html-element-wrapper';\nimport { OnCreateEvent } from '../base/on-create-event';\nimport { Vector } from '../java/vector';\nimport { TableRowDefDirective } from './table-row-def.directive';\nimport { FooterRowDirective } from './footer-row.directive';\nimport { Subscription, Subject, timer } from 'rxjs';\nimport { debounce } from \"rxjs/operators\";\nimport { RowDirective } from './row.directive';\nimport { ClientEvent } from '../event-handler/client-event';\nimport { AppUtils } from '../base/app-utils';\nimport { ViewComponent } from '../view/view.component';\nimport { ClipboardService } from '../clipboard/clipboard.service';\nimport { TableCellDirective } from './table-cell.directive';\nimport { CheckboxComponent } from '../checkbox/checkbox.component';\nimport { RadioButtonComponent } from '../radio-button/radio-button.component';\nimport { TextFieldComponent } from '../text-field/text-field.component';\nimport { ComboBoxComponent } from '../combo-box/combo-box.component';\nimport { KeyUtils } from '../base/key-utils';\nimport { isIE } from '../../functions/is-ie';\n\ndeclare var jQuery: any;\n\ndeclare var $;\n\ndeclare type SelectionMode = \"none\" | \"singleRow\" | \"multiRow\" | \"singleCell\" | \"multiCell\" | \"singleColumn\" | \"multiColumn\";\n\nexport interface VirtualColumnChangeData {\n    text: string,\n    checked: boolean\n}\n/**\n * Class for table component\n */\n@Component({\n    selector: 'vt-table',\n    templateUrl: './table.component.html',\n    styleUrls: ['./table.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n      {\n        provide: BaseComponent,\n        useExisting: forwardRef(()=>TableComponent)\n      }\n    ]\n})\nexport class TableComponent extends BaseComponent implements OnInit, DoCheck {\n    private static readonly INTERNAL_VIRTUAL_ORIGINAL_INDEX: string = \"$$INTERNAL_VIRTUAL_ORIGINAL_INDEX$$\";\n    private static readonly INTERNAL_VIRTUAL_ROW_DATA : string = \"$$INTERNAL_VIRTUAL_ROW_DATA$$\";\n    private static readonly INTERNAL_ROW_DIFFER_ID : string = \"$$INTERNAL_VIRTUAL_ROW_DIFFER_ID$$\";\n    private static readonly INTERNAL_ROW_ID : string = \"$$INTERNAL_VIRTUAL_ROW_ID$$\";\n    private static readonly INTERNAL_COLUMN_HEADER_ID = \"$$INTERNAL_COLUMN_HEADER_ID$$\";\n\n    @Input() selectionMode: SelectionMode = \"singleRow\";\n    @Input() rowCustomAttributeBuilder: (row:any, rowNumber?: number, view?: ViewComponent)=>{};\n    @Input() rowIdBuilder: (row:any, rowNumber?: number)=>string;\n    @Input() rowStyleFn: (row:any)=>string;\n\n    /** Enable use of virtual scrolling, if this is on, controlWidth and controlHeight must be defined */\n    @Input() virtualScroll: boolean;\n\n    //custom sort function for virtual scroll\n    @Input() virtualScrollSortFn: (view: BaseComponent, columnIndex: number)=>string;\n\n    //custom function to \"render\" the invisible row (for virtual scroll)\n    @Input() virtualScrollInvisibleRowBuilder: (view: BaseComponent, rowData: any)=>HTMLElementWrapper;\n\n    //use for virtual scrolling\n    @Input() rowHeight: number = 24;\n\n    @Input() scrollTimeout: number = 200;\n\n    //show blank row if we don't have enough data\n    showBlankRow: boolean;\n\n    @Input() set dataSource(ds: Array<any>) {\n        //data has changes, we need to do some clean up.\n        this.cleanUpChildNodes();\n\n        this.resetTableColumns();\n        this._dataSource = this.buildRowIdentity(ds);\n\n        this.checkShowBlankRow();\n        this.previousRowIndex = null;\n        this.modifiedVirtualRows = null;\n        this.modifiedVirtualRowsJson = null;\n        this.selectedRows = [];\n\n        this.calcVirtualScrollHeight();\n        this.calcVirtualScrollViewPort();\n    }\n\n    get dataSource() {\n        return this.virtualScroll === true ? this._virtualViewPort : this._dataSource;\n    }\n\n    /* istanbul ignore next */\n    //virtual datasource\n    private _virtualViewPort: Array<any>;\n\n    /* istanbul ignore next */\n    private _dataSource: Array<any>;\n\n    /* istanbul ignore next */\n    /** Weather or not should enabled sort, default to enabled (null/undefined/true mean enabled) */\n    @Input() enableSort: boolean;\n\n    /* istanbul ignore next */\n    /** Weather or not should allow column drag/drop, default to enabled (null/undefined/true mean enabled) */\n    @Input() enableColumnDragging: boolean\n\n    /* istanbul ignore next */\n    /** Weather or not should allow column resize, default to enabled (null/undefined/true mean enabled) */\n    @Input() enableColumnResize: boolean;\n\n    /* istanbul ignore next */\n    /** Whether row can be dropped into this table */\n    @Input() droppable: boolean | string;\n\n    /* istanbul ignore next */\n    /**\n     * Restricted right click popup menu only to cell where popup is defined\n     * <ng-template ...><vt-label ...popup=\"abc\"></vt-label></ng-template>\n     * */\n    @Input() restrictCellPopup: boolean;\n\n    /* istanbul ignore next */\n    @Output() onChange: EventEmitter<TableSelectionEvent> = new EventEmitter<TableSelectionEvent>();\n    @Output() onStateChange: EventEmitter<void> = new EventEmitter<void>();\n    @Output() onDoubleClick: EventEmitter<TableSelectionEvent> = new EventEmitter<TableSelectionEvent>();\n    @Output() onDragDrop: EventEmitter<void> = new EventEmitter<void>();\n\n    @ViewChild('table') table: ElementRef;\n    @ViewChild(\"tableContainer\", {read: ElementRef}) tableContainer: ElementRef;\n    @ViewChild(\"tableWrapper\", {read: ElementRef}) tableWrapper: ElementRef;\n    @ViewChild(\"tableHead\", {read: ElementRef}) tableHead: ElementRef;\n    /* istanbul ignore next */\n    @ViewChild(\"tableFoot\", {read: ElementRef}) tableFoot: ElementRef;\n\n    // @ViewChild(\"fakeTable\", {read: ElementRef}) fakeTable: ElementRef;\n    @ViewChild(\"ghostHeader\", {read: ElementRef}) ghostHeader: ElementRef;\n\n    @ContentChildren(TableColumnDirective)\n    set tableColumns(columns: QueryList<TableColumnDirective>) {\n      this.clearHeaderNodes();\n      this.columns = this.toColumns(columns);\n\n      if (this._isViewInit === true) {\n        this.initPlugins();\n      }\n    }\n\n    columns: Array<TableColumnDirective>;\n\n    @ContentChild(TableRowDefDirective) tableRowDef: TableRowDefDirective;\n    @ContentChild(FooterRowDirective) footerRow: FooterRowDirective;\n\n    //table with no datasource\n    @ContentChildren(RowDirective) set tableRowQuery(rows: QueryList<RowDirective>) {\n        this.cleanUpChildNodes();\n        this._tableRow = [];\n        this.detectChanges();\n\n        this._tableRow = rows.toArray();\n    }\n\n    get tableRow(): Array<RowDirective> {\n        return this._tableRow;\n    }\n\n    private _tableRow: Array<RowDirective>;\n\n    //custom sort function for virtual scroll\n    @Input() forceFixWidth: boolean = true;\n    @Input() isHeaderPadding: boolean = false;\n    @Input() isHeaderAuto: boolean = false;\n\n    @Input() skipRowsAdjustment: boolean;\n\n    //force reset columns when dataSource changes\n    @Input() forceResetColumns: boolean;\n\n    //table-layout default fixed\n    @Input() tableLayout: string = \"fixed\";\n\n    //track dynamic rows so we can query for child later\n    nodes: Array<HTMLElementWrapper> = [];\n    headNode: HTMLElementWrapper;\n    selectedRows: Array<number> = [];\n    lastSelectedRowIndex: number;\n    private _prevSelectedRows = [];\n    private get ROW_INDEX_KEY(): string {\n        return '$$$$rowIndex$$$$';\n    }\n    private $colResizable: JQuery | any;\n    private $dragableColumns: JQuery | any;\n    private $tablesorter: JQuery | any;\n    private scrollHandler: Function = null;\n    private modifiedVirtualRows: {[name: string]: {[name: string]: VirtualColumnChangeData}};\n    private modifiedVirtualRowsJson: {[name: string]: {}};\n    // mouseUpHandler: Function = null;\n\n    /* istanbul ignore next */\n    private dataSourceDiffer: IterableDiffer<Array<any>>;\n    private columnsDiffer: IterableDiffer<Array<any>>;\n    private customRowDiffer: IterableDiffer<Array<any>>;\n\n    //virtual scroll\n    private virtualScrollDataSourceDiffer: IterableDiffer<Array<any>>;\n\n    private previousRowIndex: number = null;\n\n    /* istanbul ignore next */\n    private scrollSubcription: Subscription;\n    private scrollSubject: Subject<any> = new Subject<any>();\n    private keyupHandler: (evt: KeyboardEvent)=>void;\n\n    // Virtual script height, use internally\n    _virtualScrollDivHeight: number;\n\n    private _virtualScrollRowPerView: number;\n\n    private _isViewInit: boolean;\n\n    private maxScrollTop: number;\n\n    tableStyles: {[name: string]: string};\n    scrollContainerStyles: {[name: string]: string};\n    /* istanbul ignore next */\n    virtualScrollProgressStyles: {[name: string]: string};\n    virtualScrollSortKeys: Array<string>;\n    prevScrollTop: number = 0;\n    prevScrollTopForHiddenHeader: number = 0;\n\n    sortDirection:string = \"\";   // RXC Add\n    sortColumnId:number = 0;    // RXC Add\n\n    private _disabledScrolling: boolean;\n\n    private _tableSorterRefreshTm: any;\n\n    private _tableSorterCacheRefreshTm: any;\n\n    private _isHeaderCell: boolean;\n\n    private animationFrameId: any;\n\n    private theadHeight: number = 0;\n\n    private scrollLeft: number = 0;\n\n    private columnsHasBeenSwapped: boolean;\n\n    //init plugins timer\n    private initTm: any;\n\n    private draggableRows: boolean;\n    private shouldHandleMouseUp: boolean;\n    private isHeaderAppendToFakeTable: boolean;\n    private adjustedRows: number = 0;\n    private skipGhostHeader: boolean;\n\n    private clientHeightVirtualScroll: number;\n\n    private preMouseEvent: MouseEvent = null;\n\n    private isIE9: boolean;\n\n    /* istanbul ignore next */\n    /**\n     *\n     * @param parent see [[BaseComponent]] constructor\n     * @param sessionService see [[BaseComponent]] constructor\n     * @param el see [[BaseComponent]] constructor\n     * @param changeDetectorRef Inject ChangeDetector\n     * @param renderer see [[BaseComponent]] constructor\n     * @param zone Inject NgZone\n     * @param differs Inject InterableDiffers\n     * @param clipboardService Inject [[ClipboardService]]\n     */\n    constructor(\n        @Optional() @SkipSelf() parent: BaseComponent,\n        sessionService: SessionService,\n        private el: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        renderer: Renderer2,\n        private zone: NgZone,\n        differs: IterableDiffers,\n        private clipboardService: ClipboardService\n    ) {\n        super(parent, sessionService, el, renderer);\n\n        this.dataSourceDiffer = differs.find([]).create();\n        this.columnsDiffer = differs.find([]).create();\n        this.customRowDiffer = differs.find([]).create();\n\n        this.isIE9 = isIE() == 9;\n\n        //for virtual scroll\n        this.virtualScrollDataSourceDiffer = differs.find([]).create();\n\n        this.keyupHandler = (evt: KeyboardEvent)=> this.handleKeyUp(evt);\n        this.scrollHandler = (event: MouseEvent) => {\n            if (this._disabledScrolling === true) {\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n\n            if (this.prevScrollTopForHiddenHeader !== event.srcElement.scrollTop) {\n                if (!this.skipGhostHeader) {\n                    this.renderer.setStyle(this.ghostHeader.nativeElement, \"display\", \"inline-block\");\n                    if (this.controlWidth === \"100%\") {\n                        this.renderer.setStyle(this.ghostHeader.nativeElement, \"width\", \"100%\");\n                    }\n                    this.renderer.setStyle(this.tableHead.nativeElement, \"visibility\", \"hidden\");\n                }\n\n            //   if(this.forceFixWidth){\n            //     this.renderer.setStyle(this.fakeTable.nativeElement, \"table-layout\", \"fixed\");\n            //   }\n\n              if(this.tableFoot != null) {\n                this.renderer.setStyle(this.tableFoot.nativeElement, \"visibility\", \"hidden\");\n              }\n\n            //   this.appendHeaderToFakeTable();\n            \n\n                if (this.virtualScroll === true) {\n                    if (this.animationFrameId != null) {\n                        cancelAnimationFrame(this.animationFrameId);\n                    }\n\n                    this.adjustTableHead(event, false, true);\n                }\n            }\n\n            this.prevScrollTopForHiddenHeader = event.srcElement.scrollTop;\n\n            //disabled for IE11/IE9 (too slow)\n            // else {\n            //     if (this.animationFrameId != null) {\n            //         cancelAnimationFrame(this.animationFrameId);\n            //    }\n\n            //     this.animationFrameId = requestAnimationFrame(()=>this.adjustTableHead(event, true));\n            // }\n\n            this.scrollSubject.next(event);\n        };\n    }\n\n    /* istanbul ignore next */\n    /**\n     * ç»é¢ããªãµã¤ãºãããéã«åããã¤ãã³ã\n     */\n    tableResize() {\n        this.adjustTableFooter();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Do check lifecycle\n     */\n    ngDoCheck() {\n        if (\n            this.dataSourceDiffer.diff(this._dataSource)\n        ) {\n            if (this.virtualScroll === true) {\n                this.calcVirtualScrollHeight();\n                this.calcVirtualScrollViewPort(this.prevScrollTop);\n            }\n\n            this.checkShowBlankRow();\n            this.markForCheck();\n            this.refreshTableSorter();\n        } else if (this.virtualScroll === true && this.virtualScrollDataSourceDiffer.diff(this._virtualViewPort)) {\n          this.checkShowBlankRow();\n            this.markForCheck();\n        } else {\n          this.checkCustomRowsForChanged();\n          this.checkColumnsForChanged();\n        }\n    }\n\n    /**\n     * Init lifecycle. Call parent class ngOnInit\n     */\n    ngOnInit() {\n      super.ngOnInit();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * After view init lifecycle. Apply jQuery plugin and event listeners\n     */\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n\n        //1726: It looks like sophia also querying for table column def so we need to store to our parent\n        const view = this._getNoneActiveViewParent() || this.getParentView();\n\n        if (view != null && this.columns != null) {\n            this.columns.filter(col=>col.id != null && col.id !== \"\").forEach(col=>{\n              if (view[\"_tableColumnsMap\"] == null) {\n                view[\"_tableColumnsMap\"] = new Map<string, BaseComponent>();\n              }\n\n              view[\"_tableColumnsMap\"].set(KeyUtils.toMapKey(col.id), col as any);\n            });\n        }\n\n        //droppable?\n        if (this.droppable === true || this.droppable === \"true\") {\n            $(this.tableContainer.nativeElement).droppable({\n                classes: {\n                  \"ui-droppable-hover\": \"ui-state-hover\"\n                },\n                hoverClass: \"ui-state-hover\",\n                accept: \"tr\",\n                drop: (event, ui)=>{\n                    this.onDragDrop.emit();\n                },\n                tolerance: \"pointer\"\n            });\n        }\n\n        this.scrollSubcription = this.scrollSubject.pipe(debounce(()=>timer(this.scrollTimeout))).subscribe((event)=>{\n          this.renderer.removeAttribute(this.ghostHeader.nativeElement, \"display\");\n\n          /* istanbul ignore next */\n          if (this.virtualScroll === true) {\n              this.recalculateVirtualScrollData(event);\n          } else {\n              this.adjustTableHead(event);\n          }\n        });\n\n        this.scrollContainerStyles = {\n            \"overflow-y\": \"auto\",\n            \"overflow-x\": \"visible\",\n            \"position\": \"relative\"\n        }\n\n        /* istanbul ignore next */\n        if (this.virtualScroll === true) {\n            try {\n                if(this.controlHeight == null || this.controlHeight == \"100%\")\n                    this.clientHeightVirtualScroll = (this.tableContainer.nativeElement as HTMLElement).clientHeight;\n                else \n                    this.clientHeightVirtualScroll = parseInt(this.controlHeight);\n\n                if (isNaN(this.clientHeightVirtualScroll) === false) {\n                    this.recCalcNoVirtualRow();\n                    this._isViewInit = true;\n                }\n            } catch (e) {\n\n            }\n\n            this.tableStyles = {\n                \"top\": \"0px\",\n                \"left\": \"0px\",\n                \"position\": \"absolute\",\n                \"width\": \"100%\",\n                \"height\": \"calc(100% - 17px)\",\n                \"max-width\": \"100vw\",\n                \"max-height\": \"100vh\"\n            }\n\n            this.virtualScrollProgressStyles = {\n                \"top\": \"0px\",\n                \"display\": \"none\",\n                \"position\": \"absolute\"\n            }\n\n            this.calcVirtualTablePosition(0);\n        }\n\n        /* istanbul ignore next */\n         //fix expression has changed blah blah blah\n        this.detectChanges();\n\n        if (this.virtualScroll === true) {\n            this.calcVirtualScrollHeight();\n            this.calcVirtualScrollViewPort(0);\n        }\n\n        this.zone.runOutsideAngular(()=> {\n            this._isViewInit = true;\n            this.initPlugins();\n\n            this.zone.runOutsideAngular(()=>{\n                this.el.nativeElement.addEventListener('scroll', this.scrollHandler, true);\n                // this.el.nativeElement.addEventListener(\"mouseup\", this.mouseUpHandler, true);\n                this.el.nativeElement.addEventListener(\"keyup\", this.keyupHandler, true);\n            });\n        });\n    }\n\n    /* istanbul ignore next */\n    private initPlugins() {\n        if (this.$dragableColumns) {\n            this.$dragableColumns.destroy();\n        }\n\n        if (this.initTm != null) {\n          clearTimeout(this.initTm);\n        }\n\n        // if (this.table) {\n            this.renderer.setStyle(this.table.nativeElement, \"visibility\", \"hidden\");\n\n            this.initTm = setTimeout(()=>{\n                if (this.table) {\n                    this.renderer.setStyle(this.table.nativeElement, \"visibility\", \"hidden\");\n                    // åè¡¨ç¤ºæã«ã¹ã¯ã­ã¼ã«ãã¼ã®ä½ç½®ãæ»ã\n                    this.tableContainer.nativeElement.scrollLeft = 0;\n\n                    const jQueryTable = jQuery(this.table.nativeElement);\n\n                    if (this.enableColumnDragging == null || this.enableColumnDragging === true) {\n                        this.$dragableColumns = jQueryTable.dragableColumns({\n                            dropCallback: (fromIndex, toIndex)=>this.swapColumns(fromIndex, toIndex),\n                            dragEndCallback: ()=> {\n                                this.skipGhostHeader = false;\n                                this.scrollContainerStyles[\"overflow-y\"] = \"auto\";\n                                this.detectChanges();\n                                this._disabledScrolling = false;\n                            },\n                            dragStartCallback: (colIdx)=> {\n                                this.skipGhostHeader = true;\n                                let canDrag = this.canDragColumn(colIdx);\n\n                                if (canDrag) {\n                                    this.scrollContainerStyles[\"overflow-y\"] = \"hidden\";\n                                    this.detectChanges();\n                                    this._disabledScrolling = true;\n                                }\n\n                                return canDrag;\n                            },\n                            dragEnterCallback: (colIdx)=>{\n                                return this.canDragColumn(colIdx);\n                            }\n                        });\n                    }\n\n                    if ((this.enableSort == null || this.enableSort === true) && this.$tablesorter == null) {\n                        if (this.virtualScroll !== true) {\n                            this.$tablesorter = jQueryTable.tablesorter({\n                                widgets        : ['zebra', 'columns'],\n                                usNumberFormat : false,\n                                tabIndex : false,\n                                sortReset : false,\n                                sortRestart : true,\n                                sortStable : true,\n                                delayInit: true // move the initial performance hit to first sort so the table would load faster\n                            });\n                        }\n                    } else if (this.virtualScroll !== true && this.$tablesorter != null) {\n                        this.$tablesorter.trigger(\"updateHeaders\");\n                    }\n\n                    this.setHeaderWidthHeight();\n\n                    if (this.enableColumnResize == null || this.enableColumnResize === true) {\n                        let target_columns = new Array();\n                        let original_columnWidths = new Array();\n\n                        for(let i = 0; i < this.columns.length; i++){\n                            let column = this.columns.find((item, idx)=>idx === i);\n                            if(column != null)\n                            {\n                                const headChildren = this.tableHead.nativeElement.querySelector('th:nth-child(' + (i+1) + ')');\n                                target_columns.push(headChildren);\n                                original_columnWidths.push(headChildren.style.width);\n                            }\n                        }\n                        //reset\n                        this._cleanupColResize();\n                        this.$colResizable = jQueryTable.colResizable({\n                            liveDrag: false, //turning this on will incurred a severe performance penalty on IE so leave it off\n                            resizeMode: 'overflow',\n                            partialRefresh: true, //After closing the window and opening again, columnResizer can't work. To fix that, this value is needed.,\n                            headerOnly: true //allow dragging using header only\n                        });\n\n                        for(let i = 0; i < target_columns.length; i++){\n                            const targetColumn = target_columns[i];\n                            const headChildren_width = this.toWholeNumber(targetColumn.style.width.slice(0,-2));\n                            const originalChildren_width = this.toWholeNumber(original_columnWidths[i]);\n                            // if(headChildren_width < originalChildren_width){\n                                this.renderer.setStyle(targetColumn, \"width\", original_columnWidths[i]);\n                            // }\n                        }\n                        target_columns = null;\n                        original_columnWidths = null;\n                    }\n\n                    this.adjustTableFooter();\n                    this.renderer.setStyle(this.table.nativeElement, \"table-layout\", this.tableLayout);\n                }\n\n                if (this.table != null) {\n                    this.renderer.removeStyle(this.table.nativeElement, \"visibility\");\n                }\n            }, 200);\n        //}\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Destroy lifecycle. Remove event listeners\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.cleanUpChildNodes(true);\n        this.clearHeaderNodes(true);\n\n        //1726: It looks like sophia also querying for table column def so we need to store to our parent\n        const view = this._getNoneActiveViewParent() || this.getParentView();\n\n        if (view != null && view[\"_tableColumnsMap\"] != null) {\n          view[\"_tableColumnsMap\"].clear();\n          view[\"_tableColumnsMap\"] = null;\n        }\n\n        if (this._children != null) {\n          this._children.clear();\n        }\n\n        this._children = null;\n\n        if (this._viewChildrenMap != null) {\n          this._viewChildrenMap.clear();\n        }\n\n        this._viewChildrenMap = null;\n\n        if (this.scrollSubcription != null) {\n          this.scrollSubcription.unsubscribe();\n        }\n\n        this.modifiedVirtualRows = null;\n        this.modifiedVirtualRowsJson = null;\n\n        this.scrollSubject = null;\n        this.scrollSubcription = null;\n\n        if(this.scrollHandler) {\n            this.el.nativeElement.removeEventListener('scroll', this.scrollHandler, true);\n            this.scrollHandler = null;\n        }\n\n        // if (this.mouseUpHandler) {\n        //     this.el.nativeElement.removeEventListener(\"mouseup\", this.mouseUpHandler, true);\n        //     this.mouseUpHandler = null;\n        // }\n\n        if (this.keyupHandler) {\n            this.table.nativeElement.removeEventListener(\"keyup\", this.keyupHandler, true);\n            this.keyupHandler = null;\n        }\n\n        if (this.$dragableColumns != null) {\n            this.$dragableColumns.destroy();\n        }\n\n        // if (this.columnsChangeSubscription != null) {\n        //     this.columnsChangeSubscription.unsubscribe();\n        // }\n\n        // this.columnsChangeSubscription = null;\n        this.dataSourceDiffer = null;\n        this.columnsDiffer = null;\n        this.customRowDiffer = null;\n        this.virtualScrollDataSourceDiffer = null;\n        this.selectedRows = null;\n        this.tableHead = null;\n        this.tableWrapper = null;\n        this.tableContainer = null;\n        this.table = null;\n        this.preMouseEvent = null;\n        this.scrollContainerStyles = null;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Check to see if columns have changes\n     */\n    private checkColumnsForChanged() {\n        if (this.columns != null && this.columnsDiffer.diff(this.columns.map<any>(item=>{\n            return {\n                visible: item.visible,\n                header: item.header,\n                controlWidth: item.controlWidth,\n                locked: item.locked,\n                enabled: item.enabled,\n                sortable: item.sortable\n            }\n\n            // PK: DO NOT REMOVED\n            // Comment this out for now and revert to previous, will bring this back\n            // when we added a diff to check for changes in vt-row\n            // return item.visible +\n            //     item.header +\n            //     item.controlWidth +\n            //     item.locked +\n            //     item.enabled +\n            //     item.sortable;\n        }))){\n          //this.cleanUpChildNodes();\n          this.markForCheck();\n          this.recCalcNoVirtualRow();\n        }\n    }\n\n    /* istanbul ignore next */\n    private checkCustomRowsForChanged() {\n        if (this._tableRow != null && this.customRowDiffer.diff(this._tableRow as any)) {\n          this.checkShowBlankRow();\n            this.markForCheck();\n        }\n    }\n\n    /* istanbul ignore next */\n    private clearHeaderNodes(nullOutHeadNode: boolean = false) {\n      if (this.headNode != null) {\n        if (this.headNode.childNodes != null && this.headNode.childNodes.length > 0) {\n          for (let node of this.headNode.childNodes) {\n            const parentView = this.getParentView();\n\n            if (parentView != null) {\n              parentView.removeViewChildFromMap(node.getId());\n            }\n\n            node.destroy();\n          }\n        }\n\n        this.headNode.childNodes = [];\n      }\n\n      if (nullOutHeadNode === true) {\n        this.headNode = null;\n      }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Clean up our faux table children\n     */\n    private cleanUpChildNodes(skipTrackingVirtualRow: boolean = false) {\n        if (this.nodes != null) {\n            const parentView = this.getParentView();\n\n            for (let node of this.nodes) {\n                //cache modified data if virtual scroll\n                if (\n                    skipTrackingVirtualRow !== true &&\n                    node.getLocalName() === \"row\" &&\n                    this.virtualScroll === true &&\n                    this.modifiedVirtualRows != null &&\n                    this.modifiedVirtualRows[node[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]] != null\n                ) {\n                    this._checkInitModifiedVirtualRowsJson();\n                    this.modifiedVirtualRowsJson[node[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]] = node.toJson();\n                }\n\n                //removed ourself from parent cache\n                if (parentView != null) {\n                    parentView.removeViewChildFromMap(node.getId());\n                }\n\n                node.destroy();\n            }\n        }\n\n        this.nodes = [];\n\n        if (this.virtualScroll !== true) {\n            this.selectedRows = [];\n        }\n\n        this._prevSelectedRows = [];\n        this.lastSelectedRowIndex = null;\n    }\n\n    /**\n     * Get the datasource row count\n     * @returns Number of rows in [[dataSource]]\n     */\n    getRowCount(): number {\n        return this._dataSource ? this._dataSource.length : 0;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Add/remove row to list of selected rows\n     * @param row\n     * @param isSelected If true, row will be added, otherwise row will be removed from selected rows collection\n     */\n    selectRow(row: HTMLElementWrapper, isSelected: boolean) {\n        let rowIndex = -1;\n\n        if (this.virtualScroll === true) {\n            const tempNode = _.find(this.nodes, (node) => {\n                return node === row;\n            });\n\n            if (tempNode != null) {\n                rowIndex = tempNode[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX];\n            }\n        } else {\n            rowIndex = _.findIndex(this.nodes, (node) => {\n                return node === row;\n            });\n        }\n\n        if (rowIndex >= 0 && rowIndex < this._dataSource.length) {\n            let idx = _.findIndex(this.selectedRows, (row) => {\n                return row === rowIndex;\n            });\n\n            if (isSelected) {\n                //if it wasn't selected, add it in selectedRows.\n                if (idx < 0) {\n                    this.selectedRows.push(rowIndex);\n                }\n            } else {\n                //if it was selected before, remove it from selectedRows.\n                if (idx >= 0) {\n                    this.selectedRows.splice(idx, 1);\n                }\n            }\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Event handler for click on row\n     * @param event Mouse click event\n     * @param rowIndex Index of the row that was clicked\n     * @event onStateChange\n     */\n    onRowClick(event: MouseEvent, rowIndex: number) {\n        //add the row to view children map for lookup\n        const parentView = this.getParentView();\n\n        /* istanbul ignore if */\n        if (parentView != null) {\n            parentView.addViewChildToMap(this.nodes[rowIndex]);\n\n            if (this.previousRowIndex != null && this.nodes[this.previousRowIndex] != null) {\n                parentView.removeViewChildFromMap(this.nodes[this.previousRowIndex].getId());\n            }\n        }\n\n        this.previousRowIndex = rowIndex;\n        this.triggerStateChange();\n    }\n\n    /* istanbul ignore next */\n    private triggerStateChange() {\n      const clientEvent = new ClientEvent(this, event);\n\n      if (AppUtils.customizeClientEvent != null) {\n        AppUtils.customizeClientEvent(this, clientEvent);\n      }\n\n      if (this.getParentView() != null) {\n          clientEvent.setParameter(\"screenId\", this.getParentView().getId());\n      }\n\n      clientEvent.setParameter(\"id\", this.getId());\n\n      //user can selected more than one row\n      let rowId: string = this.selectedRows.map(idx=>this.getChildByOriginalRowIndex(idx).getId()).join(\",\");\n\n      clientEvent.setParameter(\"rowId\", rowId);\n\n      this.getSession().getEventHandler().setClientEvent(clientEvent);\n      this.onStateChange.emit();\n    }\n\n    /* istanbul ignore next */\n    private getChildByOriginalRowIndex(index: number): HTMLElementWrapper {\n        let node: HTMLElementWrapper = this.nodes[index];\n\n        if (this.virtualScroll === true) {\n            node = _.find(this.nodes, (el: HTMLElementWrapper)=>{\n                return el[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX] === index;\n            });\n        }\n\n        return node;\n    }\n\n    handleMouseUp(event: MouseEvent, rowIndex: number, row: any) {\n      //for draggale rows, we need to double check row selection again\n      if (this.draggableRows === true && this.shouldHandleMouseUp === true) {\n        this.toggleRowSelection(event, rowIndex, row, true);\n      }\n\n      this.shouldHandleMouseUp = false;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Set row as selected/unselected\n     * @param rowIndex Index of row to toggle on/off\n     */\n    toggleRowSelection(event: MouseEvent, rowIndex: number, row: any, isMouseUp: boolean = false) {\n\n        const targetEl = <HTMLElement>event.target;\n\n        if (targetEl.tagName.toLowerCase() == 'input' && targetEl.getAttribute('type') != null) {\n            if (targetEl.getAttribute('type').toLowerCase() == 'radio') {\n                return;\n            }\n        }\n\n        if (targetEl.tagName.toLowerCase() == 'button') {\n            return;\n        }\n\n        let actualRowIndex = rowIndex;\n\n        //prevent text selection when shiftKey is pressed\n        if (event.shiftKey === true && event.preventDefault) {\n            event.preventDefault();\n        }\n\n        if (this.selectionMode !== \"none\") {\n            if (this.virtualScroll === true && row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX] != null) {\n              actualRowIndex = row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX];\n            }\n\n            //if user is not pressing shift key, clear all previous selection\n            if (event.shiftKey !== true && event.ctrlKey !== true && event.buttons !== 2) {\n              let clearSelection = true;\n\n              if (this.draggableRows === true && isMouseUp !== true && this.selectedRows.indexOf(actualRowIndex) >= 0) {\n                clearSelection = false;\n                this.shouldHandleMouseUp = true;\n              }\n\n              if (clearSelection) {\n                this.selectedRows.splice(0, this.selectedRows.length);\n              }\n            }\n\n            let idx = _.findIndex(this.selectedRows, (row) => {\n                return row === actualRowIndex;\n            });\n\n            if (idx < 0) {\n                //if multi row and user is pressing shift/ctrl key, allow multi row selection\n                if (this.selectionMode === \"multiRow\" && (event.shiftKey || event.ctrlKey)) {\n                    if (event.ctrlKey) {\n                        this.selectedRows.push(actualRowIndex);\n                    } else if (event.shiftKey) {\n                        if (this.lastSelectedRowIndex >= 0) {\n                            if (this.lastSelectedRowIndex > rowIndex) {\n                                for (let i = rowIndex; i < this.lastSelectedRowIndex; i++) {\n                                    this.selectedRows.push(this.getOriginalIndex(i));\n                                }\n                            } else if (this.lastSelectedRowIndex < rowIndex) {\n                                for (let i = this.lastSelectedRowIndex + 1; i <= rowIndex; i++) {\n                                    this.selectedRows.push(this.getOriginalIndex(i));\n                                }\n                            } else {\n                                this.selectedRows.push(actualRowIndex);\n                            }\n                        } else {\n                            this.selectedRows.push(actualRowIndex);\n                        }\n                    }\n                } else {\n                    this.selectedRows = [actualRowIndex];\n                }\n            } else if (event.ctrlKey === true && idx >= 0 && event.buttons !== 2) {\n                //if control key is pressed (and not right click), remove the selected row\n                this.selectedRows.splice(idx, 1);\n            }\n\n            this.detectChanges();\n            this.lastSelectedRowIndex = rowIndex;\n        }\n\n        this.triggerStateChange();\n    }\n\n    /**\n     * return the actual indexes base on datasource\n     *\n     * @param index\n     */\n    private getOriginalIndex(index: number): number {\n        if (this.virtualScroll === true && this.nodes[index] != null) {\n            return this.nodes[index][TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX];\n        }\n\n        return index;\n    }\n\n    /**\n     * Set [[disabled]] property value\n     * @param boo Toggle [[disabled]]\n     */\n    setDisabled(boo: boolean) {\n        this.disabled = boo;\n    }\n\n    /**\n     * Get [[disabled]] property value\n     */\n    getDisabled(): boolean {\n        return this.disabled;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Get a collection of all row elements that are selected\n     * @returns The selected rows\n     */\n    getSelectedRows(): Array<HTMLElementWrapper> {\n        const selectedRowElements: Array<HTMLElementWrapper> = [];\n\n        /* istanbul ignore if */\n        if (this.selectedRows.length > 0 && this.nodes != null && this.nodes.length > 0) {\n            for (let rowIndex of this.selectedRows) {\n                for (let node of this.nodes) {\n                    if (node.getLocalName() === \"row\" && node.rowNumber === rowIndex) {\n                        selectedRowElements.push(node);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return selectedRowElements;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Get collection of selected row indexes\n     */\n    getSelectedRowIndexes(): Array<number> {\n        return this.selectedRows.map(row => {\n            return row[this.ROW_INDEX_KEY];\n        });\n    }\n\n    /**\n     * Event handler for row select event\n     * @param event\n     */\n    handleRowSelection(event: any) {\n        /* istanbul ignore next */\n        if (!_.isEqual(event.selected, this._prevSelectedRows)) {\n            this.onChange.emit(new TableSelectionEvent(event.selected));\n        }\n\n        this._prevSelectedRows = event.selected;\n    }\n\n    /**\n     * Event handler for double click on cell\n     * @param event\n     * @event onDoubleClick\n     */\n    handleCellActivation(event: any) {\n        if (event.type === 'dblclick') {\n            this.onDoubleClick.emit(new TableSelectionEvent(event.row));\n        }\n    }\n\n    //internal\n    appendRowIndexToRow(row: any, rowIndex: number) {\n        row[this.ROW_INDEX_KEY] = rowIndex;\n    }\n\n    /* istanbul ignore */\n    /**\n     * Trigger change detection and re-render the table\n     * @param clearData Set to true to empty table data\n     */\n    refresh(clearData: boolean = false) {\n        if (clearData == true) {\n            this._dataSource = [];\n        }\n\n        this.detectChanges();\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Get [[changeDetectorRef]] property\n     * @return the ChangeDetector\n     */\n    protected getChangeDetector(): ChangeDetectorRef {\n      return this.changeDetectorRef;\n    }\n\n    /**\n     * Get NexaWeb tag name\n     * @returns Tag name\n     */\n    protected getNxTagName() {\n        return \"table\";\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Conver the content of this screens to JSON object so it can be sent to the server.\n     */\n    toJson(): {} {\n        const json: any = super.toJson();\n\n        // if (this.getSelectedRows() != null && this.getSelectedRows().length > 0) {\n        //     this.setJson(json, \"selectedRows\", this.getSelectedRows().map(item=>item.toJson()));\n        // }\n\n        if (\n            this.nodes != null &&\n            this.nodes.length > 0\n        ) {\n            //virtual scroll (track which rows we already converted)\n            let tempRows: {[name: string]: any}\n\n            if (this.virtualScroll === true) {\n                tempRows = {};\n            }\n\n            json[\"rows\"] = this.nodes.map((node, index)=>{\n                const rowJson = node.toJson();\n\n                if (this.selectedRows != null && this.selectedRows.indexOf(index) >= 0) {\n                    rowJson[\"selected\"] = \"true\";\n                    rowJson[\"index\"] = index + \"\";\n                }\n\n                if (this.virtualScroll === true) {\n                    tempRows[node[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]] = node[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX];\n                }\n\n                return rowJson;\n            });\n\n            //virtual scroll data\n            if (this.virtualScroll === true && this.modifiedVirtualRowsJson != null) {\n                const keys = _.keys(this.modifiedVirtualRowsJson);\n\n                for (const key of keys) {\n                    //make sure we not already converted them\n                    if (tempRows[key] == null) {\n                        json[\"rows\"].push(this.modifiedVirtualRowsJson[key]);\n                    }\n                }\n            }\n        }\n\n        if (this.columns != null && this.columns.length > 0) {\n            let columns = this.columns;\n            if (\n                this.getLocalName() === \"table\" &&\n                this.columnsHasBeenSwapped === true\n            ) {\n                columns = _.orderBy(columns, (child: TableColumnDirective)=> {\n                  return child.originalColumnIndex;\n                }) as any;\n            }\n\n            json[\"columnDefs\"] = columns.map((column, index)=>{\n                const def = {\n                    \"visible\": this.toJsonValue(column.visible),\n                    \"locked\": this.toJsonValue(column.locked),\n                    \"enabled\": this.toJsonValue(column.enabled),\n                    \"sortable\": this.toJsonValue(column.sortable),\n                    \"isChecked\": this.toJsonValue(column.isChecked),\n                    \"customAttributes\": BaseComponent.mapToJson(column.customAttributes)\n                };\n\n                // make sure customAttributes has 'width' property\n                if (def[\"customAttributes\"][\"width\"] != null)\n                {\n                    const node = this.headNode.getChildAt(index);\n                    const width = this.toWholeNumber(node.htmlElement.style.width.slice(0,-2));//server expect whole number\n                    def[\"customAttributes\"][\"width\"] = this.toJsonValue(width);\n                }\n\n                if (column.id) {\n                    def[\"id\"] = this.toJsonValue(column.id);\n                } else {\n                    def[\"id\"] = BaseComponent.generateUniqueId(\"column\");\n                }\n\n                if (column.locked === true) {\n                    def[\"tagName\"] = \"lockedColumn\";\n                    def[\"nxTagName\"] = \"lockedColumn\";\n                } else {\n                    def[\"tagName\"] = \"column\";\n                    def[\"nxTagName\"] = \"column\";\n                }\n\n                //header tag of column\n                /* istanbul ignore next */\n                const header = {\n                    \"tagName\": \"header\",\n                    \"nxTagName\": \"header\",\n                    \"text\": this.toJsonValue(column.header)\n                };\n\n                if (column.headerDirective && column.headerDirective.id) {\n                    header[\"id\"] = this.toJsonValue(column.headerDirective.id);\n                } else {\n                    header[\"id\"] = BaseComponent.generateUniqueId(\"header\");\n                }\n\n                def[\"children\"] = [header];\n\n                return def;\n            });\n        }\n\n        return json;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Convert child to JSON\n     * @param child child to be converted to JSON\n     */\n    protected childToJson(child: BaseComponent) {\n        return child.getTagName() === \"headrow\" || child.getTagName() === \"headcell\" ? child.toJson() : null;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Add element to internal list of row, cell, or header cell\n     * @param type 'row' | 'cell' | 'headcell'\n     * @param event Create event\n     * @param rowOrColumnIndex\n     * @param rowDataOrColumnDef\n     */\n    registerFauxElement(type: string, event: OnCreateEvent, rowOrColumnIndex: number, rowDataOrColumnDef: any) {\n        this._isHeaderCell = false;\n\n        if (rowDataOrColumnDef === null ||\n            (rowDataOrColumnDef !== undefined &&\n                rowDataOrColumnDef !== null &&\n                rowDataOrColumnDef.skipTracking !== true)) {\n            if (type === \"row\") {\n                this.trackRow(event, rowOrColumnIndex, rowDataOrColumnDef);\n            } else if (type === \"cell\") {\n                this.trackCell(event, rowOrColumnIndex, rowDataOrColumnDef);\n            } else if (type === \"headcell\") {\n                this._isHeaderCell = true;\n                this.trackHeadCell(event, rowDataOrColumnDef);\n\n                if (rowOrColumnIndex === this.columns.length - 1) {\n                  this.initPlugins();\n                }\n            }\n        }\n    }\n\n    /**\n     * Get [[nodes]] property\n     * @returns Node list\n     */\n    getTableChildren(): Array<HTMLElementWrapper> {\n      return this.nodes;\n    }\n\n    /**\n     * Get number of nodes\n     * @returns Number of nodes\n     */\n    getChildCount(): number {\n        return this.nodes != null ? this.nodes.length : 0;\n    }\n\n    /**\n     * Get all children of this table\n     * @return List of children\n     */\n    getChildren(): Vector<any> {\n        const children: Vector<HTMLElementWrapper> = new Vector<HTMLElementWrapper>();\n\n        _.forEach(this.getTableChildren(), (child)=>children.add(child));\n\n        return children;\n    }\n\n    /**\n     *\n     * @param xpathExpression Get query result from an xpath expression string\n     */\n    evaluateXPath(xpathExpression: string): any {\n      const result: Vector<any> = new Vector<any>();\n      const xpathResult: XPathResult = document.evaluate(xpathExpression.replace(\"cell[\", \"td[\").replace(\"row[\", \"tr[\"), this.elementRef.nativeElement, null, XPathResult.ANY_TYPE, null);\n\n      if (xpathResult != null) {\n        let node: Node = xpathResult.iterateNext();\n\n        while(node) {\n          result.add(node);\n          node = xpathResult.iterateNext();\n        }\n      }\n\n      return result;\n    }\n\n    /**\n     *\n     * @param childOrArrayOrStringWtf\n     * @param rowNumber\n     */\n    /* istanbul ignore next */\n    appendChild(childOrArrayOrStringWtf: any, rowNumber: number = -1) {\n        //TODO need to append child to certain row? dpending on childOrArrayOrStringWtf\n    }\n\n    /**\n     * Check if the row has been selected\n     * @param rowIndex Index of row to check\n     * @returns True if row is a selected row\n     */\n    isSelectedRow(rowIndex: number, row: any) {\n      if (this.virtualScroll === true && row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX] != null) {\n        rowIndex = row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX];\n      }\n\n      return this.selectedRows != null && this.selectedRows.indexOf(rowIndex) >= 0;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Get custom attributes of row if it has any, otherwise return null\n     * @param row\n     * @param rowOrColumnIndex\n     */\n    getRowCustomAttributes(row: any, rowOrColumnIndex: number) {\n        if (typeof this.rowCustomAttributeBuilder === \"function\") {\n            return this.rowCustomAttributeBuilder(row, rowOrColumnIndex, (this._getNoneActiveViewParent() || this.getParentView()) as ViewComponent);\n        }\n\n        if (row != null && row.customAttributes) {\n            return row.customAttributes;\n        }\n\n        return null;\n    }\n\n    /**\n     * Check if column is visible. Either by index or column\n     * @param index\n     * @param column\n     * @returns True if column is visible\n     */\n    isColumnVisible(index: number, column: TableColumnDirective = null): boolean {\n        if (column != null) {\n            return column.visible;\n        }\n\n        return this.columns.find((item, idx)=>idx === index).visible;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Add a child component to the table\n     * @param child Component to add\n     */\n    protected addChild(child: BaseComponent) {\n        super.addChild(child);\n        const row = this.nodes[this.nodes.length - 1];\n\n        if (this._isHeaderCell !== true && row) {\n            child.tableRowNo = row.rowNumber;\n            row.parentTableId = this.id;\n            row.parentTable = this;\n            //when we get here row.childNodes[currentLength] should be the cell parent row\n            //append child component to cell (for dynamic)\n            if (row.childNodes[row.childNodes.length - 1] == null) {\n                console.error(\"TableComponent: Unable to register element to cell of current row (cell is null)\");\n            } else {\n                child.setAttribute(\"isLockedColumn\", row.childNodes[row.childNodes.length - 1].getAttribute(\"isLockedColumn\", true));\n                row.childNodes[row.childNodes.length - 1].setComponent(child, true);\n\n                //sophia #1728: restricted right click\n                if (this.restrictCellPopup === true) {\n                  child.skipEmitContextMenuEvent = true;\n                }\n\n                if (this.virtualScroll !== true) {\n                  const sortValue = child.getAttribute(\"sortValue\", true);\n\n                  if (sortValue != null) {\n                      this.renderer.setAttribute(row.childNodes[row.childNodes.length - 1].htmlElement, \"data-text\", sortValue);\n                  }\n                }\n\n                //track change if virtual scroll\n                /* istanbul ignore if */\n                if (\n                    this.virtualScroll === true &&\n                    (\n                        child instanceof CheckboxComponent ||\n                        child instanceof RadioButtonComponent ||\n                        child instanceof TextFieldComponent ||\n                        child instanceof ComboBoxComponent\n                    )\n                ) {\n                    const columnIdx = row.childNodes.length - 1;\n\n                    //has cached data?\n                    if (\n                      this.modifiedVirtualRows != null &&\n                      this.modifiedVirtualRows[row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]] != null &&\n                      this.modifiedVirtualRows[row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]][row.childNodes[columnIdx][\"originalColumnIndex\"]] != null\n                    ) {\n                        const temp = this.modifiedVirtualRows[row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]][row.childNodes[columnIdx][\"originalColumnIndex\"]];\n\n                        if (temp.text !== undefined) {\n                            (child as any).setText(temp.text);\n                        }\n\n                        (child as any).setChecked(temp.checked, true);\n                    }\n\n                    child._internalChangeCb = (comp)=>{\n                        this._checkInitModifiedVirtualRows();\n\n                        if (this.modifiedVirtualRows[row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]] == null) {\n                            this.modifiedVirtualRows[row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]] = {};\n                        }\n\n                        this.modifiedVirtualRows[row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]][row.childNodes[columnIdx][\"originalColumnIndex\"]] = {\n                            text: comp.getText(),\n                            checked: comp.getChecked()\n                        };\n                    }\n                }\n            }\n        }\n        else if(this.headNode != null){\n          //skip emiting event so we can emit ourself.\n          child.skipEmitContextMenuEvent = true;\n          child.tableRowNo = -1;\n          this.headNode.parentTableId = this.id;\n          this.headNode.parentTable = this;\n          this.headNode.childNodes[this.headNode.childNodes.length - 1].setComponent(child);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * é¸æä¸­ã®è¡ãåé¤ãã\n     */\n    removeSelectedRow(){\n        if (this.selectedRows.length > 0){\n            // é¸æè¡ãéé ã§ä¸¦ã³æ¿ãã\n            let selected :Array<number> = this.selectedRows.concat().sort(function(v1,v2){return v2-v1;});\n            for (let idx of selected) {\n                let child : HTMLElementWrapper = this.nodes[idx];\n                for(let target of child.childNodes) {\n                    this.removeChild(target.getComponent());\n                }\n                child.destroy();\n                this.nodes.splice(idx, 1);\n                this.dataSource.splice(idx, 1);\n            }\n            let rowNumber :number = 0;\n            for(let row of this.nodes){\n                row.rowNumber = rowNumber++;\n            }\n            this.selectedRows = [];\n        }\n    }\n\n    /**\n     * Check if this is a container component\n     * @returns True\n     */\n    protected isContainer() {\n      return true;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Add row to list of nodes\n     * @param event\n     * @param rowOrColumnIndex\n     * @param rowData\n     */\n    private trackRow(event: OnCreateEvent, rowOrColumnIndex: number, rowData: any) {\n        const row = new HTMLElementWrapper(this.renderer, \"\", this.getSession());\n        row.rowNumber = rowOrColumnIndex;\n        row.htmlElement = event.element.nativeElement as HTMLElement;\n        this.setParentScreenId(row);\n        row.setLocaleName(\"row\");\n\n        const customAttributes = this.getRowCustomAttributes(rowData, rowOrColumnIndex);\n\n        if (customAttributes != null && customAttributes !== \"\") {\n            row.appendCustomAttributes(customAttributes);\n        }\n\n        if (rowData != null && rowData.id != null) {\n            row.setAttribute(\"id\", rowData.id);\n        }\n\n        if (this.virtualScroll === true && rowData != null) {\n            row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX] = rowData[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX];\n        }\n\n        this.trackNode(row);\n\n        //draggable row\n        if (row.isDraggable()) {\n            row.applyDraggable();\n            this.draggableRows = true;\n        }\n    }\n\n    toRowIndex(rowIndex: number, rowData: any): number {\n        return this.virtualScroll === true && rowData != null ? rowData[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX] : rowIndex;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Add cell to list of nodes\n     * @param event\n     * @param columnDef\n     */\n    private trackCell(event: OnCreateEvent, columnIndex: number, columnDef: TableColumnDirective) {\n        const cell = new HTMLElementWrapper(this.renderer, \"\", this.getSession());\n        cell.htmlElement = event.element.nativeElement as HTMLElement;\n        cell.setLocaleName(\"cell\");\n        if (columnDef.customAttributes !== undefined) {\n            if (!cell.getAttribute(\"class\")) {\n                cell.setAttribute(\"class\", columnDef.customAttributes[\"class\"]);\n            } else {\n                let orgClass: string = cell.getAttribute(\"class\");\n                cell.setAttribute(\"class\", orgClass + \" \" + columnDef.customAttributes[\"class\"]);\n            }\n        }\n        cell.setAttribute(\"isLockedColumn\", columnDef.locked + \"\");\n        this.setParentScreenId(cell);\n\n        //track original column index for sorting\n        if (columnDef.originalColumnIndex == null) {\n            columnDef.originalColumnIndex = columnIndex;\n        }\n\n        cell[\"originalColumnIndex\"] = columnDef.originalColumnIndex;\n\n        //add cell to current row\n        if (this.nodes[this.nodes.length - 1] !== undefined && this.nodes[this.nodes.length - 1] !== null){\n            this.nodes[this.nodes.length - 1].appendChild(cell,false);\n        }\n    }\n\n    /* istanbul ignore next */\n    private trackHeadCell(event: OnCreateEvent, columnDef: TableColumnDirective) {\n        if(this.headNode == null){\n            this.headNode = new HTMLElementWrapper(this.renderer, \"\", this.getSession());\n            this.headNode.rowNumber = -1;\n            this.setParentScreenId(this.headNode);\n            this.headNode.setLocaleName(\"headrow\");\n        }\n\n        const cell = new HTMLElementWrapper(this.renderer, \"\", this.getSession());\n        cell.htmlElement = event.element.nativeElement as HTMLElement;\n        cell.setLocaleName(\"headcell\");\n        cell.setAttribute(\"isLockedColumn\", columnDef.locked + \"\");\n        cell.customData = columnDef;\n        this.setParentScreenId(cell);\n\n        this.headNode.appendChild(cell);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Add element to internal [[nodes]] list to keep track of\n     * @param node Element to add to internal node list\n     */\n    private trackNode(node: HTMLElementWrapper) {\n        if (this.nodes == null) {\n        this.nodes = [];\n        }\n\n        this.nodes.push(node);\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Set the parent screen id on an element\n     * @param el\n     */\n    private setParentScreenId(el: HTMLElementWrapper) {\n        if (this.getParentView() != null) {\n            el.parentScreenId = this.getParentView().getId();\n        }\n    }\n\n    /**\n     * Get invoke [[rowStyleFn]] on a row and get it's style\n     * @param row\n     * @returns Style attributes\n     */\n    rowStyleClass(row: any): string {\n        if (typeof this.rowStyleFn === \"function\") {\n            return this.rowStyleFn(row);\n        }\n\n        return \"\";\n    }\n\n    /**\n     * Find the child node by id\n     * @param id Child's id\n     */\n    getChildNodeById(id: string): HTMLElementWrapper {\n        return this.nodes != null ? this.nodes.find(child=>child.id === id) : null;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Handle cell onContextMenu if component inside the cell has not already handle it\n     *\n     * @param rowNumber\n     * @param columnIndex\n     * @param event\n     */\n    handleColumnOnContextMenu(column: TableCellDirective ,rowNumber, columnIndex: number, event: MouseEvent) {\n        if (this.nodes != null && this.nodes[rowNumber] != null) {\n            const childColumn = this.nodes[rowNumber].getChildAt(columnIndex);\n\n            if (childColumn != null && childColumn.component != null) {\n              //sophia #1728\n              if (this.restrictCellPopup !== true) {\n                childColumn.component.handleOnContextMenu(event);\n              } else if (this.restrictCellPopup === true) {\n                if (childColumn.component.popup != null && childColumn.component.popup !== \"\") {\n                  childColumn.component.handleOnContextMenu(event, true);\n                } else {\n                  event.preventDefault();\n                  event.stopPropagation();\n                }\n              }\n            } else if (column != null) {\n                if (this.getSession() != null) {\n                    this.getSession().setMousePosition(event);\n                }\n\n                const parentView = this.getParentView();\n                let popupMenuId: string = null;\n\n                if (parentView != null) {\n                    popupMenuId = (parentView as ViewComponent).getFirstPopupMenuId();\n                }\n\n                if (typeof column.onContextMenuCb === \"function\") {\n                  column.onContextMenuCb(this._getNoneActiveViewParent() || this.getParentView());\n                }\n\n                if (popupMenuId != null) {\n                    event.stopPropagation();\n                    event.preventDefault();\n\n                    const tm = setTimeout(()=>{\n                      clearTimeout(tm);\n\n                      if (this.getSession()._currentPopupMenuId != null) {\n                          popupMenuId = this.getSession()._currentPopupMenuId;\n                      }\n\n                      this.getSession().showContextMenu(popupMenuId);\n                      this.getSession()._currentPopupMenuId = null;\n                    });\n                }\n            }\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Event handler for context click on the header\n     * @param columnIndex Index of column that was clicked\n     * @param event\n     */\n    handleHeaderOnContextMenu(columnIndex: number, event: MouseEvent) {\n        /* istanbul ignore if */\n        if (this.headNode != null) {\n            const childColumn = this.headNode.getChildAt(columnIndex);\n\n            if (childColumn != null && childColumn.component != null) {\n              const clientEvent = new ClientEvent(childColumn, event);\n\n              if (AppUtils.customizeClientEvent != null) {\n                AppUtils.customizeClientEvent(childColumn, clientEvent);\n              }\n\n              if (this.getParentView() != null) {\n                  clientEvent.setParameter(\"screenId\", this.getParentView().getId());\n              }\n\n              clientEvent.setParameter(\"id\", this.getId());\n\n              this.getSession().getEventHandler().setClientEvent(clientEvent);\n\n              childColumn.component.handleOnContextMenu(event, true);\n            }\n        }\n    }\n\n    /* istanbul ignore next */\n    private recalculateVirtualScrollData(event: MouseEvent) {\n        /* istanbul ignore if */\n        if (this.virtualScroll === true) {\n          let scrollTop = event.srcElement.scrollTop;\n\n          //adjust only on IE9, otherwise, it will stuck in inf loop\n          if (this.isIE9 === true) {\n              scrollTop -= 0.5;\n          }\n\n          if (this.scrollLeft === event.srcElement.scrollLeft) {\n            this.calcVirtualScrollViewPort(scrollTop);\n            this.detectChanges();\n          }\n\n          this.adjustTableHead(event);\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Event handler for table head change. Set style to properly display\n     * @param event\n     */\n    private adjustTableHead(event, skipBodyAdjustment: boolean = false, skipHeader: boolean = false) {\n        if (this.table == null || event == null) return;\n        this.preMouseEvent = event;\n        let scrollTop = event.srcElement.scrollTop;\n\n        //adjust only on IE9, otherwise, it will stuck in inf loop\n        if (this.isIE9 === true) {\n            scrollTop -= 0.5;\n        }\n        \n        this.scrollLeft = event.srcElement.scrollLeft\n\n        if (this.virtualScroll === true) {\n            // if (event.srcElement.scrollTop > this.maxScrollTop) {\n            //     scrollTop = this.maxScrollTop;\n            // }\n\n            //this.calcVirtualScrollViewPort(scrollTop);\n            if (this.prevScrollTopForHiddenHeader !== scrollTop && skipHeader === true) {\n              scrollTop -= this.theadHeight;\n            }\n\n            this.prevScrollTopForHiddenHeader = scrollTop;\n            this._disabledScrolling = true;\n            this.calcVirtualTablePosition(scrollTop);\n            setTimeout(()=>{\n                this._disabledScrolling = false;\n            },100);\n        }\n\n        if (skipHeader !== true) {\n        //   this.fakeTable.nativeElement.innerHTML = \"\";\n        //   this.isHeaderAppendToFakeTable = false;\n          this.renderer.removeStyle(this.tableHead.nativeElement, \"visibility\");\n          if(this.tableFoot != null) {\n            this.renderer.removeStyle(this.tableFoot.nativeElement, \"visibility\");\n          }\n\n          this.renderer.setStyle(this.ghostHeader.nativeElement, \"display\", \"none\");\n\n          const table = this.table.nativeElement;\n          const thead = table.querySelector('thead');\n          const tbody = table.querySelector('tbody');\n\n\n          for(let i = 0; i < this.columns.length; i++){\n              let column = this.columns.find((item, idx)=>idx === i);\n              if(column != null && column.visible && column.locked)\n              {\n                  const headChildren = $(thead.querySelector('th:nth-child(' + (i+1) + ')'));\n                  let trans = `translate(${this.scrollLeft}px, ${scrollTop}px)`;\n\n                  if (this.virtualScroll === true) {\n                      trans = `translateX(${this.scrollLeft}px)`;\n                  }\n\n                  headChildren.css(\"transform\", trans);\n                  headChildren.css(\"-ms-transform\", trans);\n\n                  if (skipBodyAdjustment !== true) {\n                      const bodyChildren = $(tbody.querySelectorAll('td:nth-child(' + (i+1) + ')'));\n                      bodyChildren.css(\"transform\", `translate(${this.scrollLeft}px`);\n                      bodyChildren.css(\"-ms-transform\", `translate(${this.scrollLeft}px`);\n                  }\n              } else if (column != null && column.visible && this.virtualScroll !== true) {\n                  const headChildren = $(thead.querySelector('th:nth-child(' + (i+1) + ')'));\n                  const trans = `translateY(${scrollTop}px)`;\n\n                  headChildren.css(\"transform\", trans);\n                  headChildren.css(\"-ms-transform\", trans);\n              }\n          }\n\n          this.adjustTableFooter();\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Set table footer styles for proper display\n     */\n    private adjustTableFooter() {\n        /* istanbul ignore if */\n      if (this.table == null) return;\n\n      const tfoot = this.table.nativeElement.querySelector(\"tfoot\");\n      /* istanbul ignore if */\n      if (tfoot != null) {\n        //Vivify, for https://github.com/weaveio/ngnsophia/issues/1806\n        let tfootPos = 0;\n        if($(this.table.nativeElement).height() < $(this.tableContainer.nativeElement).height()) {\n            tfootPos = $(this.tableContainer.nativeElement).height() - $(this.table.nativeElement).height();\n        } else {\n            tfootPos = ($(this.tableContainer.nativeElement).height() - $(this.table.nativeElement).height()) + this.tableContainer.nativeElement.scrollTop;\n        }\n\n        for(let i = 0; i < this.columns.length; i++){\n            let column = this.columns.find((item, idx)=>idx === i);\n            if (column != null) {\n                const footChildren = $(tfoot.querySelector('td:nth-child(' + (i+1) + ')'));\n                const trans = `translateY(${tfootPos}px)`;\n\n                footChildren.css(\"transform\", trans);\n                footChildren.css(\"-ms-transform\", trans);\n                footChildren.css(\"position\", \"relative\");\n                footChildren.css(\"z-index\", \"3\");\n            }\n        }\n      }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Event handler for keyup. Copy keyboard shortcut support\n     * @param event Keyup event\n     */\n    handleKeyUp(event: KeyboardEvent) {\n        if (\n            event.ctrlKey === true &&\n            (\n                event.code === \"KeyC\" ||\n                event.keyCode === 67 ||\n                event.keyCode === 99\n            )\n         ) {\n            // istanbul ignore next\n            this.copySelectedRowAsText();\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Check to see if we can send selected rows to clipboard\n     */\n    copySelectedRowAsText() {\n        /* istanbul ignore if */\n        if (this.selectedRows != null && this.selectedRows.length === 1) {\n            let selectedRowText: Array<string>;\n            const selectedRow: HTMLElementWrapper = this.getSelectedRows()[0];\n\n            /* istanbul ignore if */\n            if (selectedRow.childNodes != null && selectedRow.childNodes.length > 0) {\n                selectedRowText = selectedRow.childNodes.map(child => child.getText());\n            } else if (selectedRow.dynamicChildNodes != null && selectedRow.dynamicChildNodes.length > 0) {\n                selectedRowText = selectedRow.dynamicChildNodes.map(child => child.getText());\n            }\n\n            /* istanbul ignore if */\n            if (selectedRowText != null && selectedRowText.length > 0) {\n                this.clipboardService.copy(selectedRowText.join(String.fromCharCode(9)));\n            }\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Generate a row id based on row's [[id]] and index\n     * @param row\n     * @param rowIndex\n     */\n    buildRowId(row: any, rowIndex: number): string {\n        if (typeof this.rowIdBuilder === \"function\") {\n            return this.rowIdBuilder(row, rowIndex);\n        }\n\n        return ['row', this.id, rowIndex].join('-');\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Sort the data (for virtual scroll)\n     *\n     * @param column\n     */\n    handleSort(column: TableColumnDirective) {\n        //sorting is only allowed on a non locking column\n        /* istanbul ignore if */\n        if (this.virtualScroll === true && column.locked !== true) {\n            //find previous sort direction for the column\n            this.columns.forEach(col=>{\n                //using originalColumnIndex b/c use can drag column around and thus column index changed\n                if (col.originalColumnIndex !== column.originalColumnIndex) {\n                    col.sortDirection = null;\n                }\n            });\n\n            if (column.sortDirection === \"asc\") {\n                column.sortDirection = \"desc\";\n            } else {\n                column.sortDirection = \"asc\";\n            }\n\n            let sortColumnId: string = this.virtualScrollSortKeys[column.originalColumnIndex];\n\n            //if custom sortn fn is provided, used to find proper column to sort\n            if (typeof this.virtualScrollSortFn === \"function\") {\n                sortColumnId = this.virtualScrollSortFn(this._getNoneActiveViewParent() || this.getParentView(), column.originalColumnIndex);\n            }\n\n            if (sortColumnId != null) {\n                this._dataSource = _.orderBy(this._dataSource, [sortColumnId], [column.sortDirection] as any);\n            }\n\n            this.calcVirtualScrollViewPort(this.prevScrollTop);\n            this.detectChanges();\n        }  else if (this.virtualScroll !== true && column.locked !== true) {\n            // RXC Add\n            if (this.sortDirection === \"\") {\n                this.sortDirection = \"asc\";\n            } else if (this.sortColumnId === column.originalColumnIndex) {\n                if (this.sortDirection === \"asc\") {\n                    this.sortDirection = \"desc\";\n                } else {\n                    this.sortDirection = \"asc\";\n                }\n            } else {\n                this.sortDirection = \"asc\";\n            }\n            this.sortColumnId = column.originalColumnIndex;\n        }\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Calculate the overall height so we can add scrollbar for virtual scroll. This is done\n     * by multiplying the number of rows to the height of each row.\n     *\n     */\n    private calcVirtualScrollHeight() {\n        // istanbul ignore if\n        if (this.virtualScroll === true) {\n            if (this._dataSource != null && this._dataSource.length > 0) {\n                //scroll height = 10px * # rows (10px is the height of each row)\n                this._virtualScrollDivHeight = (this.rowHeight * this._dataSource.length);\n                this.maxScrollTop = this._virtualScrollDivHeight;\n                this.virtualScrollSortKeys = _.keys(this._dataSource[0]);\n\n                //track original index\n                if (typeof this._dataSource[this._dataSource.length - 1][TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX] !== \"number\") {\n                    _.forEach(this._dataSource, (item, index)=>{\n                        item[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX] = index;\n                    });\n                }\n            } else {\n                this._virtualScrollDivHeight = 0;\n            }\n            this.markForCheck();\n        }\n    }\n\n    /**\n     * Adjust/move the position of the table container so that it displayed properly.\n     *\n     * @param scrollTop\n     */\n    private calcVirtualTablePosition(scrollTop: number) {\n        if (this.virtualScroll === true) {\n            //-ms-transform\n            //transform\n            // if (this.maxScrollTop > 0) {\n            //     scrollTop = Math.min(scrollTop, this.maxScrollTop);\n            // }\n\n            this.renderer.setStyle(this.tableWrapper.nativeElement, \"transform\", `translateY(${scrollTop}px)`);\n            this.renderer.setStyle(this.tableWrapper.nativeElement, \"-ms-transform\", `translateY(${scrollTop}px)`);\n            // this.markForCheck();\n        }\n    }\n\n    /**\n     * Calculate the visible virtual rows to display to the user\n     *\n     * @param scrollTop\n     */\n    private calcVirtualScrollViewPort(scrollTop: number = 0) {\n        if (this._isViewInit === true && this._dataSource != null) {\n            let startIdx: number = 0;\n\n            //if scrollTop is greater than 0, need to figure the starting row\n            if (scrollTop > 0) {\n                //each row is 10px height, if scrollTop is 100px, then we start at row 10\n                //scrollTop / 10px?\n                startIdx = Math.floor(scrollTop / this.rowHeight);\n\n                if (startIdx > this._dataSource.length - this._virtualScrollRowPerView) {\n                    startIdx = this._dataSource.length - this._virtualScrollRowPerView;\n                }\n            }\n\n            this._virtualViewPort = null;\n            this.prevScrollTop = scrollTop;\n            this.cleanUpChildNodes();\n            this.detectChanges();\n\n            this.zone.run(()=>{\n                this._virtualViewPort = this.buildRowIdentity(this._dataSource.slice(startIdx, startIdx + this._virtualScrollRowPerView + this.adjustedRows));\n            });\n        }\n    }\n\n    private _swap(fromIndex: number, toIndex: number) {\n      const tempToColumn = this.columns[toIndex];\n\n      this.columns[toIndex] = this.columns[fromIndex];\n      this.columns[fromIndex] = tempToColumn;\n    }\n\n    /* istanbul ignore next */\n    /**\n     * Swap the columns after a column is being drag and rop\n     *\n     * @param fromIndex column that is being dragged (moved)\n     * @param toIndex  column that is being droped into\n     */\n    private swapColumns(fromIndex: number, toIndex: number) {\n      //sophia 1856: need to properly swap columns\n      if (fromIndex < toIndex) {\n        for (let i = fromIndex; i < toIndex; i++) {\n          this._swap(i, i + 1);\n        }\n      } else if (fromIndex > toIndex) {\n        for (let i = fromIndex; i > toIndex; i--) {\n          this._swap(i, i - 1);\n        }\n      }\n\n      if (this.scrollContainerStyles != null) {\n          this.scrollContainerStyles[\"overflow-y\"] = \"auto\";\n          this.detectChanges();\n      }\n\n      //sophia 1823: for server tracking\n      _.forEach(this.columns, (col, idx)=>{\n        col.setAttribute(\"visualIndex\", idx + \"\");\n      });\n\n      if (this.virtualScroll !== true) {\n        this.detectChanges();\n\n        setTimeout(()=>{\n          this.applyResizeColumns();\n        }, 200);\n      }\n\n      this.columnsHasBeenSwapped = true;\n    }\n\n    /* istanbul ignore next */\n    private _cleanupColResize() {\n        //reset\n        this.$colResizable = $(this.table.nativeElement).colResizable({\n          disable: true\n        });\n\n        $(`#${this.id} .JCLRgrips`).remove();\n    }\n\n    /* istanbul ignore next */\n    applyResizeColumns() {\n      if (this.table != null && (this.enableColumnResize == null || this.enableColumnResize === true)) {\n        this._cleanupColResize();\n        this.$colResizable = $(this.table.nativeElement).colResizable({\n            liveDrag: false, //turning this on will incurred a severe performance penalty on IE so leave it off\n            resizeMode: 'overflow',\n            partialRefresh: true, //After closing the window and opening again, columnResizer can't work. To fix that, this value is needed.,\n            headerOnly: true //allow dragging using header only\n        });\n      }\n    }\n\n    /**\n     * Return whether or not the column at the particular index can be dragged/drop\n     *\n     * @param colIdx\n     */\n    private canDragColumn(colIdx: number) {\n        let canDrag = true;\n\n        for (let col of this.columns) {\n            if (col.originalColumnIndex === colIdx && col.locked === true) {\n                canDrag = false;\n                break;\n            }\n        }\n\n        return canDrag;\n    }\n\n    /**\n     * Return the index of the suppplied row\n     *\n     * @param child row to check fo rindex?\n     */\n    indexOfChild(child: any): number {\n        if (this.nodes != null && this.nodes.length > 0) {\n            return _.findIndex(this.nodes, (node)=>node === child);\n        }\n\n        //child does not exists\n        return -1;\n    }\n\n    private _checkInitModifiedVirtualRows() {\n      if (this.modifiedVirtualRows == null) {\n        this.modifiedVirtualRows = {};\n      }\n    }\n\n    private _checkInitModifiedVirtualRowsJson() {\n      if (this.modifiedVirtualRowsJson == null) {\n        this.modifiedVirtualRowsJson = {};\n      }\n    }\n\n    /**\n     * Refresh the table sorter\n     */\n    private refreshTableSorter() {\n        //data changes, need to update tableSorter\n        if (this._tableSorterRefreshTm != null) {\n            clearTimeout(this._tableSorterRefreshTm);\n            this._tableSorterRefreshTm = null;\n        }\n\n        this.zone.runOutsideAngular(() => {\n            this._tableSorterRefreshTm = setTimeout(() => {\n                clearTimeout(this._tableSorterRefreshTm);\n                this._tableSorterRefreshTm = null;\n\n                if (this.$tablesorter != null) {\n                    this.$tablesorter.trigger(\"update\");\n                }\n                this.adjustTableHead(this.preMouseEvent);\n            }, 200);\n        });\n    }\n\n    /**\n     * Refresh cache data (sort value, etc)\n     */\n    refreshTableSorterCache() {\n      //data changes, need to update tableSorter\n      if (this._tableSorterCacheRefreshTm != null) {\n          clearTimeout(this._tableSorterCacheRefreshTm);\n          this._tableSorterCacheRefreshTm = null;\n      }\n\n      this.zone.runOutsideAngular(() => {\n          this._tableSorterCacheRefreshTm = setTimeout(() => {\n              clearTimeout(this._tableSorterCacheRefreshTm);\n              this._tableSorterCacheRefreshTm = null;\n\n              if (this.$tablesorter != null) {\n                  this.$tablesorter.trigger(\"updateCache\");\n              }\n          }, 200);\n      });\n  }\n\n    setSelectAllVirtualRows(shouldSelected: boolean) {\n        if (shouldSelected !== true) {\n            this.modifiedVirtualRows = {};\n            this.modifiedVirtualRowsJson = {};\n            this.selectedRows = [];\n        } else {\n            this._checkInitModifiedVirtualRows();\n            this._checkInitModifiedVirtualRowsJson();\n\n            const checkBoxeColumnIdxs = [];\n\n            if (this.nodes != null && this.nodes.length > 0) {\n                //find all checkboxes columns\n                for (let i = 0; i < this.nodes[0].childNodes.length; i++) {\n                    if (this.nodes[0].childNodes[i].component instanceof CheckboxComponent) {\n                        checkBoxeColumnIdxs.push(i);\n                    }\n                }\n            }\n\n            //if there are checkboxes, check them\n            this.lastSelectedRowIndex = 0;\n            if (checkBoxeColumnIdxs.length > 0) {\n                for (let row of this._dataSource) {\n                    //make sure row is not visible\n                    if (_.findIndex(this.nodes, (node)=>{\n                        return node[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX] === row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX];\n                    }) < 0) {\n                        if (this.modifiedVirtualRows[row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]] == null) {\n                            this.modifiedVirtualRows[row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]] = {};\n                        }\n\n                        for (let colIdx of checkBoxeColumnIdxs) {\n                            this.modifiedVirtualRows[row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]][colIdx] = {\n                                checked: true,\n                                text: undefined\n                            };\n                        }\n\n                        //this.modifiedVirtualRowsJson []\n                        if (typeof this.virtualScrollInvisibleRowBuilder === \"function\") {\n                            const rowElement: HTMLElementWrapper = this.virtualScrollInvisibleRowBuilder(\n                                this._getNoneActiveViewParent() || this.getParentView(),\n                                row\n                            );\n\n                            rowElement.setAttribute(\"selected\", \"true\");\n\n                            this.modifiedVirtualRowsJson[row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]] = rowElement.toJson();\n                        }\n\n                        //selected the row\n                        if (this.selectedRows == null) {\n                            this.selectedRows = [];\n                        }\n\n                        this.selectedRows.push(row[TableComponent.INTERNAL_VIRTUAL_ORIGINAL_INDEX]);\n                    }\n                }\n            }\n        }\n    }\n\n    private recCalcNoVirtualRow() {\n      if (this.virtualScroll === true) {\n        let height = $(this.tableContainer.nativeElement).height();\n\n        if (this.tableHead != null) {\n          this.theadHeight = $(this.tableHead.nativeElement).height();\n          height = height - this.theadHeight;\n\n          if (this.skipRowsAdjustment !== true) {\n            this.adjustedRows = Math.round(this.theadHeight / this.rowHeight) + 2;\n          }\n        }\n\n        this._virtualScrollRowPerView = Math.round(height / this.rowHeight);\n      }\n    }\n\n    private setHeaderWidthHeight(){//For https://github.com/weaveio/ngnsophia/issues/1618\n        const table = this.table.nativeElement;\n        const thead = table.querySelector('thead');\n        let headerMaxHeight = 0;\n        var id = table.id;\n        if (this.columns != null){\n            if(this.forceFixWidth){\n                //please do not removed our code\n                //this.renderer.setStyle(this.table.nativeElement, \"table-layout\", \"fixed\");\n\n                for(let i = 0; i < this.columns.length; i++){\n                    let column = this.columns.find((item, idx)=>idx === i);\n                    if(column != null)\n                    {\n                        const headChildren = thead.querySelector('th:nth-child(' + (i+1) + ')');\n                        this.renderer.setStyle(headChildren, \"width\", `${column.controlWidth}px`);\n                        if(column.controlHeight !== undefined){\n                            this.isHeaderAuto = true;\n                            if(headerMaxHeight < column.controlHeight){\n                                headerMaxHeight = Number(column.controlHeight);\n                            }\n                        }\n                    }\n                }\n                if(this.isHeaderAuto){\n                    $(\"#\" + id + \">div>div>table\").removeClass(\"header-fixed\");\n                }\n            }\n            /*else{\n                for(let i = 0; i < this.columns.length; i++){\n                    let column = this.columns.find((item, idx)=>idx === i);\n                    if(column != null)\n                    {\n                        const headChildren = thead.querySelector('th:nth-child(' + (i+1) + ')');\n                        this.renderer.setStyle(headChildren, \"min-width\", `${column.controlWidth}px`);\n                    }\n                }\n            }*/\n        }\n\n        if (this.ghostHeader != null) {\n            if (headerMaxHeight == 0) {\n                headerMaxHeight = 30;\n            }\n\n            this.renderer.setStyle(this.ghostHeader.nativeElement, \"height\", headerMaxHeight + \"px\");\n        }\n    }\n\n    /**\n     * Reset table column (in case it has been swapped)\n     */\n    private resetTableColumns() {\n        if (\n          this.forceResetColumns === true &&\n          this._isDying !== true &&\n          this.columns != null &&\n          this.columnsHasBeenSwapped === true\n        ) {\n            this.columnsHasBeenSwapped = false;\n\n            const temp = _.clone(this.columns);\n            this.columns = [];\n            this.detectChanges();\n\n            if (this.headNode != null) {\n                this.headNode.childNodes = [];\n            }\n\n            this.columns = _.sortBy(temp, (col: TableColumnDirective, idx: number)=>{\n                col.setAttribute(\"visualIndex\", idx + \"\");\n                return col.originalColumnIndex;\n            });\n            this.detectChanges();\n            this.initPlugins();\n        }\n    }\n\n    private buildRowIdentity(rows: Array<any>) {\n        // if (rows == null) return rows;\n\n        // for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        //     rows[rowIndex][TableComponent.INTERNAL_ROW_DIFFER_ID] = BaseComponent.generateUniqueId(\"row_differ\");\n        //     rows[rowIndex][TableComponent.INTERNAL_ROW_ID] = this.buildRowId(rows[rowIndex], rowIndex);\n        // }\n\n        return rows;\n    }\n\n    rowTrackByFn(idx:number, row: any) {\n        return row[TableComponent.INTERNAL_ROW_DIFFER_ID];\n    }\n\n    columnHeaderTrackByFn(idx: number, column: TableColumnDirective) {\n      return column[TableComponent.INTERNAL_COLUMN_HEADER_ID];\n    }\n\n    /**\n     * Removed vt-row by index. This will not works for rows that are created by dataSource\n     */\n    removeTableRowByIndex(index: number) {\n        if (this._tableRow != null && this._tableRow.length > index) {\n            this._tableRow = _.filter(this._tableRow, (row, rowIndex)=>{\n                return rowIndex !== index;\n            });\n\n            this.cleanUpChildNodes();\n            this.detectChanges();\n        }\n    }\n\n    /**\n     * Removed vt-row by id. This will not works for rows that are created by dataSource\n     */\n    removeTableRowById(id: string) {\n        if (this._tableRow != null && this._tableRow.length > 0) {\n            this._tableRow = _.filter(this._tableRow, (row)=>{\n                return row.id !== id;\n            });\n\n            this.cleanUpChildNodes();\n            this.detectChanges();\n        }\n    }\n\n    private toColumns(columns: QueryList<TableColumnDirective>): Array<TableColumnDirective> {\n      return columns.map((col, idx)=>{\n        col[TableComponent.INTERNAL_COLUMN_HEADER_ID] = BaseComponent.generateUniqueId(\"hc\");\n        col.setAttribute(\"visualIndex\", idx + '');\n        return col;\n      });\n    }\n\n    private toWholeNumber(width: string): number {\n      return parseInt(width);\n    }\n\n    private checkShowBlankRow() {\n      if (\n        this.dataSource == null ||\n        this.dataSource.length === 0 ||\n        (this.tableContainer.nativeElement as HTMLElement).scrollHeight > (this.tableContainer.nativeElement as HTMLElement).clientHeight\n      ) {\n        this.showBlankRow = false;\n      } else {\n        this.showBlankRow = true;\n      }\n    }\n\n    // removeFromTableRow(whtvr:string) {\n    //   //no idea what this for\n    // }\n\n    // private appendHeaderToFakeTable() {\n    //   if (this.isHeaderAppendToFakeTable !== true) {\n    //     this.fakeTable.nativeElement.appendChild($(this.tableHead.nativeElement).clone()[0]);\n    //     this.isHeaderAppendToFakeTable = true;\n    //   }\n    // }\n    /**\n     * Remove row from tableRows by id. no detect change\n     * @param id row element id\n     */\n    removeFromTableRow(id: string){\n      const i = this.tableRow.findIndex(r=>r.id === id);\n      this.tableRow.splice(i, 1);\n    }\n}\n","import { Directive, ContentChild, forwardRef } from '@angular/core';\nimport { TableColumnDirective } from './table-column.directive';\n\n@Directive({\n  selector: 'vt-locked-column',\n  providers: [\n    {\n      provide: TableColumnDirective,\n      useExisting: forwardRef(()=>LockedColumnDirective)\n    }\n  ]\n})\n/**\n * Just aliasing vt-table-column for locked column\n */\nexport class LockedColumnDirective extends TableColumnDirective {\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.locked = true;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClipboardService } from './clipboard.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [\n    ClipboardService\n  ]\n})\nexport class ClipboardModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TableComponent } from './table.component';\nimport { TableCellDirective } from './table-cell.directive';\nimport { TableHeaderDirective } from './table-header.directive';\nimport { TableColumnDirective } from './table-column.directive';\nimport { HeaderDirective } from './header.directive';\nimport { LockedColumnDirective } from './locked-column.directive';\nimport { BaseModule } from '../base/base.module';\nimport { TableRowDefDirective } from './table-row-def.directive';\nimport { FooterRowDirective } from './footer-row.directive';\nimport { RowDirective } from './row.directive';\nimport { ClipboardModule } from '../clipboard/clipboard.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BaseModule,\n    ClipboardModule\n  ],\n  declarations: [\n    TableComponent,\n    TableCellDirective,\n    TableColumnDirective,\n    TableHeaderDirective,\n    HeaderDirective,\n    LockedColumnDirective,\n    TableRowDefDirective,\n    FooterRowDirective,\n    RowDirective\n  ],\n  exports: [\n    TableComponent,\n    TableCellDirective,\n    TableColumnDirective ,\n    TableHeaderDirective,\n    HeaderDirective,\n    LockedColumnDirective,\n    TableRowDefDirective,\n    FooterRowDirective,\n    RowDirective\n  ]\n})\nexport class TableModule { }\n","import { Component, OnInit, ElementRef, EventEmitter, Input, Output, ViewChild, TemplateRef, Optional, SkipSelf, Renderer2, ContentChild, ViewContainerRef, forwardRef } from '@angular/core';\nimport { BaseComponent } from '../../base/base.component';\nimport { SessionService } from '../../session/session.service';\n\n/**\n * Class for tab component\n */\n@Component({\n  selector: 'vt-tab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.css'],\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>TabComponent)\n    }\n  ]\n})\nexport class TabComponent extends BaseComponent implements OnInit {\n  // Sets active tab class\n  @Input() active: boolean;\n  @Input() id: string;\n\n  @Output() onCommand = new EventEmitter();\n\n  @ViewChild(TemplateRef) content: TemplateRef<any>;\n\n  /**\n   *\n   * @param parent see [[BaseComponent]] constructor\n   * @param sessionService see [[BaseComponent]] constructor\n   * @param elementRef see [[BaseComponent]] constructor\n   * @param renderer see [[BaseComponent]] constructor\n   */\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, renderer: Renderer2) {\n    super(parent, sessionService, elementRef, renderer);\n  }\n\n  /* istanbul ignore next */\n  /**\n   *\n   * @param child Tab child component to add\n   */\n  protected addChild(child: BaseComponent) {\n    (this.parent as any).addChild(child);\n\n    if (this.tabChildrenIds == null) {\n      this.tabChildrenIds = [];\n    }\n\n    this.tabChildrenIds.push(child.getId());\n  }\n\n  /* istanbul ignore next */\n  /**\n   * After view init lifecycle\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get JSON representation of this component\n   * @returns Object JSON metadata about this component\n   */\n  toJson() {\n    const json: any = super.toJson();\n    this.setJson(json, \"active\", this.focused);\n\n    return json;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get NexaWeb component tag name\n   */\n  protected getNxTagName() {\n    return \"tab\";\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for click event\n   * @event onCommand\n   */\n  onClick() {\n    this.onCommand.emit(this.id);\n    this.active = true;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Focus this tab\n   */\n  setFocus() {\n    const parent = this.getParent();\n\n    if (parent != null && typeof parent[\"setSelectedTab\"] === \"function\") {\n      parent[\"setSelectedTab\"](this.id);\n    } else {\n      super.setFocus();\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ContentChildren,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef,\n  QueryList,\n  SkipSelf,\n  Optional,\n  EventEmitter,\n  Output,\n  Input,\n  ChangeDetectorRef,\n  Renderer2,\n  forwardRef,\n  ContentChild\n} from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\nimport { TabComponent } from './tab/tab.component';\nimport { TabEvent } from './tab-event';\n\nimport * as _ from \"lodash\";\n\ntype TabPlacement = \"left\" | \"top\" | \"bottom\" | \"right\";\n\n/**\n * Class for tab pane container component\n */\n@Component({\n  selector: 'vt-tab-pane',\n  templateUrl: './tab-pane.component.html',\n  styleUrls: ['./tab-pane.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>TabPaneComponent)\n    }\n  ]\n})\nexport class TabPaneComponent extends BaseComponent {\n  @Input() tabPlacement: TabPlacement = \"top\";\n  @ContentChildren(TabComponent) set tabsList(tabList: QueryList<TabComponent>) {\n    this.tabs = tabList.toArray();\n  }\n  @ViewChildren('tabNavItem') tabNavItems: Array<ElementRef>;\n\n  @Output() onClick: EventEmitter<TabEvent> = new EventEmitter<TabEvent>();\n\n  selectedTabIndex: number = 0;\n  focusedTabIndex: number = 0;\n  tabs: Array<TabComponent> = [];\n\n  /**\n   *\n   * @param parent see [[BaseComponent]] constructor\n   * @param sessionService see [[BaseComponent]] constructor\n   * @param elementRef see [[BaseComponent]] constructor\n   * @param cd Inject change detector\n   * @param renderer see [[BaseComponent]] constructor\n   */\n  constructor(\n    @Optional() @SkipSelf() parent: BaseComponent,\n    sessionService: SessionService,\n    elementRef: ElementRef,\n    private cd: ChangeDetectorRef,\n    renderer: Renderer2\n  ) {\n    super(parent, sessionService, elementRef, renderer);\n  }\n\n  /**\n   * After view init lifecycle. Set up tabs and trigger change detector\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    this.configureTabs();\n    this.cd.detectChanges();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set the [[selectedTabIndex]] to index of active tab\n   */\n  private configureTabs() {\n    _.forEach(this.tabs, (tab, index)=>{\n      if (tab.active === true) {\n        this.selectedTabIndex = index;\n      }\n    });\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for when tab is selected\n   * @param event\n   * @param index Index of tab to select\n   * @param tabId\n   * @event onCommand\n   */\n  handleSelectTab(event: Event, index: number, tabId: string) {\n    event.preventDefault();\n    this.setFocusedTab(index);\n    this.selectedTabIndex = index;\n    // this.onClick.emit({\n    //   tabId: tabId,\n    //   tabIndex: index\n    // });\n    this.selectedTab.onCommand.emit(tabId);\n    this.markForCheck();\n\n    const parentView = this.getParentView();\n\n    if (parentView != null) {\n      parentView.resetAllScrollPanesPositionToPrevious();\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for keydown event. Arrow keys used for navigation\n   * @param e Key event\n   */\n  handleKeydown(e: KeyboardEvent) {\n    if (!document.activeElement.className.includes(\"combobox-input-box\") && !document.activeElement.className.includes(\"dropdown-item\")) {\n      /* Allow tab navigation via arrow keys: https://github.com/weaveio/ngnsophia/issues/1465 */\n      const UP_KEY_CODE = 38;\n      const DOWN_KEY_CODE = 40;\n      const ENTER_KEY_CODE = 13;\n      const keyPressed = e.which;\n  \n      // Ignore all keys except up/down or ENTER\n      const navigationKeys = [UP_KEY_CODE, DOWN_KEY_CODE, ENTER_KEY_CODE];\n      if (navigationKeys.indexOf(keyPressed) === -1) return;\n  \n      e.stopPropagation();\n  \n      let newIndex: number;\n  \n      if(keyPressed === DOWN_KEY_CODE && this.focusedTabIndex < this.tabs.length - 1) {\n        newIndex = this.focusedTabIndex + 1;\n      } else if(keyPressed === UP_KEY_CODE && this.focusedTabIndex > 0) {\n        newIndex = this.focusedTabIndex - 1;\n      } else if (keyPressed === ENTER_KEY_CODE) {\n        this.setSelectedTab(this.focusedTabIndex);\n      } else {\n        newIndex = this.focusedTabIndex;\n      }\n      this.setFocusedTab(newIndex);\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Focus a tab by it's index position\n   * @param index Index of tab to focus\n   */\n  setFocusedTab(index: number) {\n    this.focusedTabIndex = index;\n    const tabItem = this.tabNavItems.find((item, i)=> {\n      return i === index;\n    });\n\n    if (tabItem) {\n      setTimeout(()=>{\n        tabItem.nativeElement.focus();\n      }, 0);\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set selected tab by index or id\n   * @param index Index or Id of [[TabComponent]] to select\n   */\n  setSelectedTab(index: number | string) {\n    if (typeof index === \"number\") {\n      this.selectedTabIndex = index;\n    } else {\n      //selected tab by name?\n      const tempIndex = _.findIndex(this.tabs, (tab: TabComponent)=>tab.id === index);\n\n      if (tempIndex >= 0) {\n        this.selectedTabIndex = tempIndex;\n      }\n    }\n\n    this.markForCheck();\n  }\n\n  /**\n   * Get the selected [[TabComponent]]\n   * @returns Tab that is selected\n   */\n  get selectedTab(): TabComponent {\n    return this.tabs.find((item, index)=>index === this.selectedTabIndex);\n  }\n\n  /**\n   * Get NexaWeb tag name\n   * @returns Name of tag\n   */\n  protected getNxTagName() {\n    return \"tabPane\";\n  }\n\n  /**\n   * Get [[cd]] (ChangeDetector) member\n   */\n  getChangeDetector() {\n    return this.cd;\n  }\n\n  /**\n   * Remove a tab child from the pane\n   * @param child Tab to remove\n   */\n  removeChild(child: TabComponent) {\n    super.removeChild(child);\n    this.tabs = _.filter(this.tabs, (tab)=>tab.id !== child.id);\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Get JSON representation of this component\n   * @returns Object JSON metadata\n   */\n  toJson() {\n    const json = super.toJson();\n    json[\"selectedTabIndex\"] = this.selectedTabIndex;\n\n    return json;\n  }\n\n  /**\n   * Check if this is a container component\n   * @returns True\n   */\n  protected isContainer() {\n    return true;\n  }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[vt-tab-host]'\n})\nexport class TabHostDirective {\n\n  constructor(\n    public viewContainerRef: ViewContainerRef\n  ) { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TabPaneComponent } from './tab-pane.component';\nimport { TabComponent } from './tab/tab.component';\nimport { TabHostDirective } from './tab/tab-host.directive';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [TabPaneComponent, TabComponent, TabHostDirective],\n  exports: [TabComponent, TabPaneComponent, TabHostDirective]\n})\nexport class TabPaneModule { }\n","import { Component, Input, OnInit, Output, ElementRef, EventEmitter, ChangeDetectionStrategy, SkipSelf, Optional, ChangeDetectorRef, forwardRef, Renderer2, ViewChild } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\n/* istanbul ignore next */\nimport { SessionService } from '../session/session.service';\n\n/**\n * Class for textarea component\n */\n@Component({\n  selector: 'vt-text-area',\n  templateUrl: './text-area.component.html',\n  styleUrls: ['./text-area.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>TextAreaComponent)\n    }\n  ]\n})\nexport class TextAreaComponent extends BaseComponent implements OnInit {\n  static readonly MAX_LENGTH: number = 9999;\n  private _maxLength: number = TextAreaComponent.MAX_LENGTH;\n\n  @Input() set maxLength(max: number) {\n    this._maxLength = max;\n  }\n  @Input() set editable(val: string | boolean) {\n    this._editable = val;\n  }\n\n  @ViewChild('textarea') textarea: ElementRef;\n  @Output() onTextChange = new EventEmitter();\n  @Output() onEdit = new EventEmitter();\n\n  _editable: boolean | string = true;\n\n  get editable(): boolean | string {\n    return this._editable !== \"false\" && this._editable !== false;\n  }\n  get maxLength(): number {\n    return this._maxLength > 0 ? this._maxLength : TextAreaComponent.MAX_LENGTH;\n  }\n\n  private _textBeforeFocusIn:string;//for onEdit()\n  private _textPreviousKeyInput:string;//for onTextChange()\n\n  /**\n   *\n   * @param parent see [[BaseComponent]] constructor\n   * @param sessionService see [[BaseComponent]] constructor\n   * @param elementRef see [[BaseComponent]] constructor\n   * @param cd ChangeDetector for this component\n   * @param renderer see [[BaseComponent]] constructor\n   */\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, private cd: ChangeDetectorRef, renderer: Renderer2) {\n    super(parent, sessionService, elementRef, renderer);\n  }\n\n  /**\n   * Init lifecycle. Call parent ngOnInit\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    if(this.controlPadding){\n      this.controlPadding = this.controlPadding + 'px';\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * After view init lifecycle.\n   * Focus the textarea and set dimensions\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (this.focusOnActivation) {\n      this.elementRef.nativeElement.focus();\n    }\n\n    this.initWidthHeightStyle(\"height\", \"width\");\n    this.setAttributeFromDef();\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Get the name of the component\n   * @returns Name of component\n   */\n  getLocalName(): string {\n    return \"textArea\";\n  }\n\n  /**\n   * Focus the textarea element\n   */\n  setFocus() {\n    this.textarea.nativeElement.focus();\n  }\n\n  /**\n   * Get the value of internal [[_maxLength]] property\n   */\n  getMaxLength() {\n    return this._maxLength;\n  }\n\n  /**\n   * Set [[_maxLength]] property value and mark for change detection\n   * @param max Length of text content\n   */\n  setMaxLength(max: number | string) {\n    if (typeof max === \"number\") {\n      this._maxLength = max;\n    } else {\n      this._maxLength = parseInt(max);\n    }\n\n    this.cd.markForCheck();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for text input\n   * Emit onTextChange b/c user keep typing (input still has focus)\n   * @param event\n   * @param value\n   * @event onTextChange\n   */\n  onInput(event: KeyboardEvent, value: string) {\n    let pos = this.textarea.nativeElement.selectionStart;\n    if(event.keyCode == 8 || event.keyCode == 46)//Backspace || Delete\n    {\n      this.text = value;\n      setTimeout(() => {\n        this.textarea.nativeElement.selectionStart = pos;\n        this.textarea.nativeElement.selectionEnd = pos;\n      });\n    }\n\n    if(this.text != null && this._maxLength > 0 && this._maxLength < this.text.length) {\n        this.text = this.text.substring(0, this._maxLength);\n    }\n\n    if(this._textPreviousKeyInput != this.text)\n      this.onTextChange.emit();\n    this._textPreviousKeyInput = this.text;\n  }\n\n  /**\n   * Get the value of [[cd]] (ChangeDetector) property\n   * @returns Change detector for this component\n   */\n  protected getChangeDetector(): ChangeDetectorRef {\n    return this.cd;\n  }\n\n  /**\n   * Get Nexaweb tag name\n   * @returns Tag name\n   */\n  protected getNxTagName() {\n    return \"textArea\";\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for focus event\n   * @param e Input focus event\n   */\n  onFocus(e) {\n    this._textBeforeFocusIn = this.text;\n    this._textPreviousKeyInput = this.text;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for blur (unfocus) event\n   * @param e Input blur event\n   */\n  onBlur(event, value) {\n    if(this.textarea.nativeElement.ownerDocument.activeElement === this.textarea.nativeElement) return;//prevent focuslost whenever active process is changed.\n    this.text = value;//when the last char is Zenkaku and the user doesn't press 'Enter', this is needed.\n    if(this.text != null && this._maxLength > 0 && this._maxLength < this.text.length) {\n      this.text = this.text.substring(0, this._maxLength);\n    }\n    if(this.text != this._textBeforeFocusIn)\n      this.onEdit.emit();\n    this.validateField(event);\n  }\n  /**\n   * Set [[visible]] property value\n   * @override\n   * @param value Toggle visibility\n   */\n  setVisible(value: boolean) {\n    this.visible = value;\n    if (this.visible) {\n      this.removeCssClass('hidden');\n      this.getElement().removeAttribute('hidden');\n    } else {\n      this.addCssClass('hidden');\n      this.getElement().setAttribute('hidden', '');\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextAreaComponent } from './text-area.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [TextAreaComponent],\n  exports: [\n    TextAreaComponent,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  entryComponents: [\n    TextAreaComponent\n  ]\n})\nexport class TextAreaModule { }\n","import { Component, OnInit, Input, ElementRef, SkipSelf, Optional, QueryList, ViewChildren, ViewEncapsulation, NgZone, ContentChildren, ViewChild, TemplateRef, Renderer2, ChangeDetectionStrategy, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\nimport { TableColumnDirective } from '../table/table-column.directive';\nimport { HTMLElementWrapper } from './html-element-wrapper';\n\ndeclare var jQuery: any;\n\nimport * as _ from \"lodash\";\nimport { Vector } from '../java/vector';\n\n/**\n * Class for tree table component\n */\n@Component({\n  selector: 'vt-tree-table',\n  templateUrl: './tree-table.component.html',\n  styleUrls: ['./tree-table.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>TreeTableComponent)\n    }\n  ]\n})\nexport class TreeTableComponent extends BaseComponent implements OnInit {\n  @Input() rowData: Array<any>;\n  @Input() columnDefs: Array<any>;\n  @Input() useDocFragment: boolean;\n\n  @ContentChildren(TableColumnDirective)\n  columns: QueryList<TableColumnDirective>;\n\n  @ViewChild(\"tableBody\", {read: ElementRef}) tableBody: ElementRef<HTMLElement>;\n\n  _bodyFragment: DocumentFragment;\n\n  private nodes: Array<HTMLElementWrapper> = [];\n  selectedNodes: Array<number> = [];\n  private selectedRowElements: Array<HTMLElementWrapper> = [];\n\n  constructor(\n    @Optional() @SkipSelf() parent: BaseComponent,\n    sessionService: SessionService,\n    elementRef: ElementRef,\n    private zone: NgZone,\n    renderer: Renderer2,\n    private cd: ChangeDetectorRef\n  ) {\n    super(parent, sessionService, elementRef, renderer);\n  }\n\n  /**\n   * Init lifecycle. Must call parent ngOnInit\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    // Width/Height is required otherwise grid will collapse to zero.\n    // if (!this.controlHeight) this.controlHeight = '500px';\n    // if (!this.controlWidth) this.controlWidth = '500px';\n  }\n\n  /* istanbul ignore next */\n  /**\n   * After view init lifecycle. Set table columns and call parent ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    //make sure to call sure it can init thing\n    super.ngAfterViewInit();\n\n    this.createDocFragment();\n\n    if (this.columns != null && this.columns.length > 0) {\n      this.columnDefs = [];\n\n      this.columns.forEach(column=>{\n        this.columnDefs.push({\n          headerName: column.header,\n          controlWidth: column.controlWidth\n        });\n      });\n    }\n\n    if (this.rowData && this.rowData.length > 0) {\n      this.zone.runOutsideAngular(()=> {\n        jQuery(`#${this.id} .jq-tree-table`).treetable();\n      });\n    }\n  }\n\n  /**\n   * Destroy lifecycle. Delete tree nodes to clear out references\n   */\n  ngOnDestroy() {\n    this.tableBody = null;\n\n    this._bodyFragment = null;\n\n    if (this.nodes != null) {\n      for (let node of this.nodes) {\n        node.destroy();\n      }\n    }\n\n    this.nodes = null;\n  }\n\n  /**\n   * Remove all child rows from this table\n   */\n  clearRows() {\n    // while(this.tableBody.nativeElement.firstChild) {\n    //   this.renderer.removeChild(this.tableBody.nativeElement, this.tableBody.nativeElement.firstChild);\n    // }\n\n    (this.tableBody.nativeElement as HTMLElement).innerHTML = \"\";\n\n    this.nodes = [];\n    this.selectedNodes = [];\n    this.selectedRowElements = [];\n    this.createDocFragment();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Create table row but DO NOT append to table\n   */\n  createRow(): HTMLElementWrapper {\n    const row: HTMLElementWrapper = new HTMLElementWrapper(this.renderer, \"row\", this.getSession());\n    row.setAttribute(\"id\", BaseComponent.generateUniqueId(\"row\"));\n    row.parentTableId = this.id;\n    row.parentTable = this;\n    this.setParentScreenId(row);\n\n    this.zone.runOutsideAngular(()=>{\n      row.htmlElement.addEventListener(\"mousedown\", ()=>{\n        if (this.selectedNodes != null) {\n          this.selectedNodes.forEach(idx=>{\n            this._selectRow(idx, false);\n          });\n        }\n\n        this.selectedRowElements = [];\n        this.selectRow(row, true);\n      });\n    });\n\n    this.trackNode(row);\n\n    return row;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Create table row and append to table\n   */\n  addRow(): HTMLElementWrapper {\n    const row = this.createRow();\n\n    if (this.useDocFragment === true) {\n      this._bodyFragment.appendChild(row.htmlElement);\n    } else {\n      this.renderer.appendChild(this.tableBody.nativeElement, row.htmlElement);\n    }\n    row.htmlElement.style[\"background\"] = \"\";\n    return row;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set a row as selected and set selected style\n   * @param nodeIndex Index of node/row to select\n   * @param isSelected Toggle to set selected style\n   */\n  _selectRow(nodeIndex: number, isSelected: boolean) {\n\n    let idx = _.findIndex(this.selectedNodes, (node) => {\n        return node === nodeIndex;\n    });\n\n    /* istanbul ignore if */\n    if (isSelected) {\n        //if it wasn't selected, add it in selectedRows.\n        if (idx < 0) {\n            this.selectedNodes.push(nodeIndex);\n            this.nodes[nodeIndex].htmlElement.querySelector('td').style.color = 'blue';\n        }\n    } else {\n        //if it was selected before, remove it from selectedRows.\n        if (idx >= 0) {\n            this.selectedNodes.splice(idx, 1);\n            this.nodes[nodeIndex].htmlElement.querySelector('td').style.color = \"\";\n        }\n    }\n  }\n\n  /**\n   * This function is called by setAttribute(row, value);\n   * @param row Row to set as selected row\n   * @param isSelected Toggle selected state and style\n   */\n  selectRow(row: HTMLElementWrapper, isSelected: boolean) {\n    if (this.nodes == null) return;\n    let nodeIndex = _.findIndex(this.nodes, (node) => {\n      return node === row;\n    });\n    //Now in the as-is'tree-table only one row can be selected.\n\n    let tds: NodeList = this.elementRef.nativeElement.querySelectorAll('td');\n\n    for (let i = 0; i < tds.length; i++) {\n      (tds[i] as HTMLElement).style.color = '';\n    }\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      this._selectRow(i, false);\n    }\n\n    this._selectRow(nodeIndex, true);\n\n    if (isSelected) {\n      this.selectedRowElements.push(row);\n    } else {\n      this.selectedRowElements = this.selectedRowElements.filter(el=>{\n        return el._uniqueId !== row._internalId;\n      });\n    }\n  }\n\n  getSelectedRows(): Array<HTMLElementWrapper> {\n    return this.selectedRowElements;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Create table cell (will not append to anything)\n   * @returns The table cell that is created\n   */\n  createCell(): HTMLElementWrapper {\n    const cell: HTMLElementWrapper = new HTMLElementWrapper(this.renderer, \"cell\", this.getSession());\n    cell.setAttribute(\"id\", BaseComponent.generateUniqueId(\"cell\"));\n    this.setParentScreenId(cell);\n\n    //for cell, we need to append it to the row\n    this.trackNode(cell);\n\n    return cell;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * @deprecated used createCell instead\n   */\n  addCell(): HTMLElementWrapper {\n    return this.createCell();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Re-render tree table. Must call jQuery plugin's method on element to re-render.\n   */\n  redrawTree() {\n    this.zone.runOutsideAngular(()=>{\n      /* istanbul ignore next */\n      jQuery(`#${this.id} .jq-tree-table`).treetable({\n        expandable: true\n      }, true);\n\n      this.cd.markForCheck();\n    });\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Expand all nodes in the tree\n   */\n  expandAll() {\n    /* istanbul ignore next */\n    jQuery(`#${this.id} .jq-tree-table`).treetable(\"expandAll\");\n    this.setNodeExpandedStatus(\"true\");\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Collapse all node in the tree\n   */\n  collapseAll() {\n    jQuery(`#${this.id} .jq-tree-table`).treetable(\"collapseAll\");\n    this.setNodeExpandedStatus(\"false\");\n  }\n\n  /**\n   * Get child nodes of the table\n   * @returns [[nodes]]\n   */\n  getTableChildren(): Array<HTMLElementWrapper> {\n    return this.nodes;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get number of child nodes for this tree\n   * @returns Number of child nodes\n   */\n  getChildCount(): number {\n    return this.nodes != null ? this.nodes.length : 0;\n  }\n\n  /**\n   * Get child node by id\n   * @param id\n   */\n  getChildById(id: string): HTMLElementWrapper {\n    if (this.nodes != null) {\n      const temp = _.filter(this.nodes, (item: HTMLElementWrapper)=>item.getId() === id);\n\n      if (temp.length > 0) {\n        return temp[0];\n      }\n    }\n\n    return null;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get list of nodes from XPath expression string\n   * @param xpathExpression\n   */\n  /* istanbul ignore next */\n  evaluateXPath(xpathExpression: string): any {\n    /* istanbul ignore next */\n    const result: Vector<any> = new Vector<any>();\n    /* istanbul ignore next */\n    const xpathResult: XPathResult = document.evaluate(xpathExpression.replace(\"cell[\", \"td[\").replace(\"row[\", \"tr[\"), this.elementRef.nativeElement, null, XPathResult.ANY_TYPE, null);\n\n    if (xpathResult != null) {\n      let node: Node = xpathResult.iterateNext();\n\n      while(node) {\n        result.add(node);\n        node = xpathResult.iterateNext();\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Adds child node to the tree\n   * @param node Child to add\n   */\n  private trackNode(node: HTMLElementWrapper) {\n    if (this.nodes == null) {\n      this.nodes = [];\n    }\n\n    this.nodes.push(node);\n  }\n\n  /**\n   * Get NexaWeb tag name\n   * @returns Tagname\n   */\n  protected getNxTagName() {\n    return \"treeTable\";\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Get [[cd]] (Change detector) property\n   * @returns Change detector reference\n   */\n  protected getChangeDetector() {\n    return this.cd;\n  }\n\n  /**\n   * Set node expanded property value\n   * @param status Value for node's expanded property\n   */\n  private setNodeExpandedStatus(status: string) {\n    if (this.nodes != null) {\n      _.forEach(this.nodes, (node)=>{\n        if (node.getLocalName() === \"row\") {\n          node.expanded = status;\n        }\n      });\n    }\n  }\n\n  /**\n   * Get JSON representation for this component\n   * @returns Component metadata as JSON object\n   */\n  toJson(): {} {\n    const retVal = super.toJson();\n\n    if (this.nodes != null) {\n      const children = this.nodes.filter(node=>node.getLocalName() === \"row\");\n\n      if (children.length > 0) {\n        retVal[\"children\"] = children.map(child=>child.toJson());\n      }\n    }\n\n    return retVal;\n  }\n  /**\n   * Set the elements parent ID\n   * @param el\n   */\n  private setParentScreenId(el: HTMLElementWrapper) {\n    if (this.getParentView() != null) {\n        el.parentScreenId = this.getParentView().getId();\n    }\n  }\n\n  public getNodes(): HTMLElementWrapper[] {\n    return this.nodes\n  }\n\n  private createDocFragment() {\n    if (this.useDocFragment === true) {\n      this._bodyFragment = document.createDocumentFragment();\n    }\n  }\n\n  appendFragment() {\n    if (this._bodyFragment != null) {\n      (this.tableBody.nativeElement as HTMLElement).appendChild(this._bodyFragment);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreeTableComponent } from './tree-table.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [TreeTableComponent],\n  exports: [\n    TreeTableComponent\n  ],\n  entryComponents: [\n    TreeTableComponent\n  ]\n})\nexport class TreeTableModule { }\n","import { Component, AfterViewInit, ViewChild, Type, ComponentFactoryResolver, ComponentRef, Input, ElementRef, Renderer2, SkipSelf, Optional } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { AttributesEnum } from '../base/attributes.enum';\n\nimport { DialogComponent } from '../dialog/dialog.component';\nimport { ComponentType } from '../base/component-type.enum';\nimport { LabelComponent } from '../label/label.component';\nimport { ButtonComponent } from '../button/button.component';\nimport { ComboBoxComponent } from '../combo-box/combo-box.component';\nimport { TextFieldComponent } from '../text-field/text-field.component';\nimport { CheckboxComponent } from '../checkbox/checkbox.component';\nimport { RadioButtonComponent } from '../radio-button/radio-button.component';\nimport { TextAreaComponent } from '../text-area/text-area.component';\n\nimport * as _ from 'lodash';\nimport { DynamicPagesService } from './dynamic-pages.service';\nimport { AppUtils } from '../base/app-utils';\n\nimport { Subject, Observable } from \"rxjs\";\nimport { SessionService } from '../session/session.service';\nimport { HTMLElementWrapper } from '../tree-table/html-element-wrapper';\nimport { UiDocument } from '../base/ui-document';\nimport { PopupMenuDirective } from '../popup-menu/popup-menu.directive';\nimport { Logger } from '../base/logger';\nimport { KeyUtils } from '../base/key-utils';\nimport { JavaUtils } from '../java/java-utils';\nimport { AttributeNameValue } from '../base/attribute-name-value';\nimport { MenuItemComponent } from '../popup-menu/menu-item/menu-item.component';\n\n/**\n * Base parent component class that all other screen components inherit from\n */\n@Component({\n  selector: 'vt-dummy-view',\n  template: ''\n})\nexport class ViewComponent extends BaseComponent {\n  @ViewChild(DialogComponent) dialog: DialogComponent;\n  private routeUrl: string;\n  private routeDeactivated: boolean;\n  private mcos: Set<string> = new Set<string>();\n  zIndex: number;\n  isDynamicPage: boolean;\n  isDestroyed: boolean;\n  canBeActiveView: boolean = true;\n  actionForwardName: string;\n  modal:string;\n  routeId: string;   //For route.service\n\n  private _viewInitializedSubject: Subject<void> = new Subject<void>();\n  viewInitialized: Observable<void> = this._viewInitializedSubject.asObservable();\n\n  private defIds: Array<string> = [];\n  private popupMenus: Array<PopupMenuDirective>;\n\n  //private _findElementCache: any;\n\n  private changeDetectionFrozen: boolean;\n\n  isMinimized: boolean;\n\n  skipBreadCrumb: boolean;\n\n  //allow this same screen to launch multiple time\n  allowMultipleScreen: boolean;\n  screenIndex: number = null;\n  baseScreenId: string; //id for grouping screen (avoiding screenindex)\n\n  //callback for any custom cleanup\n  beforeDestroyCb: (id: string)=>void;\n\n\n  //keep track of menu items (that are not active) as are menu items are destroyed after it is closed.\n  private _inactiveMenuItems: Map<string, HTMLElementWrapper>;\n\n  private _tableColumnsMap: Map<string, any>;\n\n  _viewStatus: number;\n\n  private viewRouteSet: boolean;\n\n  /**\n   *\n   * @param parent see [[BaseComponent]] constructor\n   * @param sessionService see [[BaseComponent]] constructor\n   * @param elementRef see [[BaseComponent]] constructor\n   */\n  constructor(\n    @Optional() @SkipSelf() parent: BaseComponent,\n    sessionService: SessionService,\n    elementRef: ElementRef){\n    super(parent, sessionService, elementRef, null);\n    this.actionForwardName = this.getId();\n  }\n\n  viewIsInitialized: boolean;\n\n  /**\n   * Set [[routeUrl]] property value. If [[dialog]] exists, set it's route URL\n   * @param url\n   */\n  setRouteUrl(url: string) {\n    this.routeUrl = url;\n\n    if (this.dialog != null) {\n      this.dialog.setViewRouteUrl(url);\n    }\n  }\n\n  /**\n   * Get [[routeUrl]] property value\n   * @returns Route URL\n   */\n  getRouteUrl(): string {\n    return this.routeUrl;\n  }\n\n\n  /**\n   * Check if route is deactivated.\n   * @returns True if route is deactivated\n   */\n  isRouteDeactivated() {\n    return this.routeDeactivated === true;\n  }\n\n\n  /**\n   * After view init lifecycle\n   */\n  ngAfterViewInit() {\n    if (this.canBeActiveView !== false) {\n      this.parent = null;\n    }\n\n    //add view to stack\n    this.getSession().getMcoContainer().registerView(this);\n\n    super.ngAfterViewInit();\n\n    this.afterDialogInit();\n\n    if (this.popupMenus != null) {\n      _.forEach(this.popupMenus, (popupMenu)=>popupMenu.convertSubMenuItems(this.id));\n    }\n\n    this.componentInitialize();\n\n    if (this.dialog) {\n      this.dialog.setViewRouteUrl(this.routeUrl);\n      this.viewRouteSet = true;\n    }\n\n    this.getSession().getMcoContainer().reStackView(this.id, this.screenIndex);\n\n    this._viewInitializedSubject.next();\n    this.viewIsInitialized = true;\n  }\n\n\n  protected afterDialogInit() {\n    if (this.dialog) {\n      //get id of dialog as our id\n      this.id = this.dialog.getId();\n      this.dialog.screenIndex = this.screenIndex;\n\n      if (typeof this.dialog.modal === \"boolean\"){\n        this.modal = JavaUtils.booleanToString(this.dialog.modal);\n      }else{\n        this.modal = this.dialog.modal;\n      }\n      if (this.modal != null && (this.modal === \"true\" || this.modal === \"false\")) {\n        this.setElementAttributeById(this.id, 'modal', this.modal);\n        this.setModalMode();\n      } else {\n        this.dialog.modal = \"false\";\n        this.modal = this.dialog.modal;\n        this.setElementAttributeById(this.id, 'modal', \"false\");\n      }\n\n      if (this.popupMenus != null) {\n        _.forEach(this.popupMenus, (popupMenu)=>popupMenu.convertSubMenuItems(this.id));\n      }\n\n      this.dialog.resetId();\n\n      if (this.viewRouteSet !== true) {\n        this.dialog.setViewRouteUrl(this.routeUrl);\n        this.viewRouteSet = true;\n      }\n    }\n  }\n\n\n  /**\n   * Set modal CSS and dialog's modal property value to true.\n   * Make view component display as modal\n   */\n  setModalMode(){\n    if (this.modal == \"true\") {\n      this.dialog[\"elementRef\"].nativeElement.className = \"modal fade in\";\n      this.dialog[\"elementRef\"].nativeElement.style.cssText = \"display:inline-block;\";\n      this.setElementAttributeById(this.id, 'modal', this.modal);\n      this.dialog.modal = this.modal;\n    }\n  }\n\n\n  /**\n   * Destroy lifecycle. Clear all references\n   */\n  ngOnDestroy() {\n    if (this.beforeDestroyCb != null) {\n      this.beforeDestroyCb(this.getId());\n    }\n\n    this._inactiveMenuItems = null;\n\n    this.routeDeactivated = true;\n    //remove view from stack\n    this.getSession().getMcoContainer().removeView(this);\n\n    this.mcos.forEach(mco=>this.getSession().getMcoContainer().removeMco(mco));\n    this.mcos.clear();\n    delete this.mcos;\n\n    if (this.dialog != null) {\n      if (this.dialog.viewContainer != null) {\n        this.dialog.viewContainer.clear();\n\n        delete this.dialog.viewContainer;\n      }\n\n      delete this.dialog;\n    }\n\n    this.isDestroyed = true;\n    this.getSession().getInjector(DynamicPagesService).removeView(this);\n\n\n    _.forEach(this.defIds, (id)=>{\n      this.getSession().deleteDef(id);\n    });\n\n    this.defIds = null;\n    this.popupMenus = null;\n\n    // if (this._findElementCache != null) {\n    //   this._findElementCache.clear();\n    // }\n\n    // this._findElementCache = null;\n\n    this._tableColumnsMap = null;\n\n    super.ngOnDestroy();\n  }\n\n  /**\n   * Delegate to [[bodyInit]]\n   */\n  protected componentInitialize() {\n    this.bodyInit();\n  }\n\n  /**\n   * Get the component's tag name. Implementation of [[BaseComponent]] method\n   * @returns Name of tag\n   */\n  getTagName(): string {\n    return 'vt-dummy-view';\n  }\n\n  /**\n   * Not implemented\n   */\n  bodyInit() {\n\n  }\n\n\n  /**\n   * Query the \"element\" via selectFn function, then set the attribute of the element. If found\n   * set the attribute {attribute} with value {value}\n   *\n   * @param selectorFn\n   */\n  setElementAttribute(\n    selectorFn: ((map: Map<string, BaseComponent>)=>BaseComponent),\n    attribute: AttributesEnum,\n    value: any\n  ) {\n    const comp = selectorFn(this.children);\n\n    if (comp == null) {\n      Logger.warn('Unable to set attribute, component is null');\n    } else {\n      comp.setAttribute(attribute, value);\n    }\n\n    this.markForCheck();\n  }\n\n  /**\n  * Set [[disabled]] property value\n  * @param boo Value for disabled property\n  */\n  setDisabled(boo: boolean) {\n    this.disabled = boo;\n    this.dialog.setDisabled(boo);\n  }\n\n\n  /**\n   * Query the \"element\" via selectFn function, then set the attribute of the element. If found\n   * set the attribute {attribute} with value {value}\n   *\n   * @param selectorFn\n   */\n  setElementAttributeById(\n    compId: string,\n    attribute: AttributesEnum | string,\n    value: any\n  ) {\n\n    if (attribute === AttributesEnum.TITLE || attribute === 'title') {\n      this.setTitle(value);\n    } else if (compId === this.getId()) {\n      this.setAttribute(attribute, value);\n    } else {\n      let comp = this.findElementById(compId);\n\n      /* istanbul ignore if */\n      /* istanbul ignore else */\n      if (comp == null) {\n        //is this for def?\n        const compDef = this.getSession().getDef(compId);\n\n        if (compDef != null) {\n          compDef.attribute[attribute] = value;\n        } else {\n\n          comp = UiDocument.getMenuComponent(compId);\n\n          /* istanbul ignore else */\n          if (comp != null) {\n            comp.setAttribute(attribute, value);\n          } else {\n            Logger.warn(`Unable to set attribute, component with id: ${compId} is not found`);\n          }\n        }\n      } else {\n        comp.setAttribute(attribute, value);\n      }\n\n      this.markForCheck();\n    }\n  }\n\n\n  /**\n   * Wholesale set attributes to an element.\n   *\n   * @param compId element to set attribute\n   * @param attributes an array of AttributesEnum to be set\n   */\n  setElementAttributesById(\n    compId: string,\n    attributes: Array<AttributeNameValue>\n  ) {\n\n    if (compId === this.getId()) {\n      this.setAttributes(attributes);\n    } else {\n      const comp = this.findElementById(compId);\n\n      if (comp == null) {\n        //is this for def?\n        const compDef = this.getSession().getDef(compId);\n\n        if (compDef != null) {\n          for (const attr of attributes) {\n            compDef.attribute[attr.attributeName] = attr.value;\n          }\n        } else {\n          Logger.warn(`Unable to set attribute, component with id: ${compId} is not found`);\n        }\n      } else {\n        comp.setAttributes(attributes);\n      }\n\n      this.markForCheck();\n    }\n  }\n\n\n  /**\n   * Removes an attribute from a component with a specific id\n   * @param compId Component id\n   * @param attribute Name of attribute to remove from component\n   */\n  removeElementAttributeById(\n    compId: string,\n    attribute: AttributesEnum | string\n  ) {\n\n    if (attribute === AttributesEnum.TITLE || attribute === 'title') {\n      this.setTitle(\"\");\n    } else if (compId === this.getId()) {\n      this.removeAttribute(attribute);\n    } else {\n      const comp = this.findElementById(compId);\n\n      /* istanbul ignore if */\n      /* istanbul ignore else */\n      if (comp == null) {\n        Logger.warn(`Unable to remove attribute, component with id: ${compId} is not found`);\n      } else {\n        comp.removeAttribute(attribute);\n      }\n    }\n\n    this.markForCheck();\n  }\n\n\n  /**\n   * Searches for a radio button group by ID and adds an attribute to all [[RadioButtonComponent]] elements in the group\n   * @param radioGroupId\n   * @param attribute HTML attribute name to be set\n   * @param value Value to set on HTML attribute\n   */\n  setRadioGroupAttribute(radioGroupId: string, attribute: AttributesEnum | string, value: any) {\n    const radios = _.filter(Array.from(this.children.values()), (child)=>{\n      return child instanceof RadioButtonComponent && (child as RadioButtonComponent).group === radioGroupId;\n    });\n\n    /* istanbul ignore if */\n    if (radios != null && radios.length > 0) {\n      _.forEach(radios, (radio)=>{\n        radio.setAttribute(attribute, value);\n      });\n    }\n\n    this.markForCheck();\n  }\n\n\n  /**\n   * Get the value of an HTML attribute of a component\n   * @param compId Id of component to get attribute from\n   * @param attribute Name of HTML attribute to get\n   */\n  getElementAttributeById(compId: string, attribute: AttributesEnum | string): any {\n    const comp = this.findElementById(compId);\n\n    if (comp != null) {\n      return comp.getAttribute(attribute);\n    }\n  }\n\n\n  /**\n   * Find [[ComboboxComponent]] by id and call it's initializeComboboxValues method.\n   * @param compId Component ID to initialize\n   * @param value Value to set on combobox\n   * @param attribute Name of attribute to set on combobox\n   */\n  initializeComboBoxValues(\n    compId: string,\n    value: any,\n    attribute: any\n  ) {\n    const comboBox: ComboBoxComponent = this.findElementById(compId) as ComboBoxComponent;\n\n    if (comboBox == null) {\n      console.error(`Unable to find combobox: ${compId} `);\n    } else {\n      comboBox.initializeComboboxValues(value);\n\n      if (attribute != null) {\n        if (attribute[\"width\"] != null) {\n          comboBox.setControlWidth(attribute[\"width\"]);\n        } else if (attribute[\"onCommand\"] != null) {\n          comboBox.setOnCommand(attribute[\"onCommand\"]);\n        }\n      }\n    }\n  }\n\n  /**\n   * Set the [[ComboboxComponent]] selected item that matches value\n   * @param compId [[ComboboxComponent]] id\n   * @param value Value to set as selected\n   */\n  selectComboBoxItem(compId: string, value: any) {\n    const comboBox: ComboBoxComponent = this.findElementById(compId) as ComboBoxComponent;\n\n    /* istanbul ignore if */\n    if (comboBox == null) {\n      console.error(`Unable to find combobox: ${compId} `);\n    } else {\n      comboBox.setSelectValue(value);\n    }\n  }\n\n  /**\n   * Find component and focus it\n   * @param compId Component id\n   */\n  setFocus(compId: string = null) {\n    if (compId == this.id) {\n      this.showView();\n    }\n    else if (compId == null || compId == '') {\n      this.requestFocus();\n    } else {\n      const comp = UiDocument.findElementById(compId);\n\n      if (comp == null) {\n        console.error(`Unable to setFocus, component with id: ${compId} is not found`);\n      } else {\n        comp.requestFocus();\n      }\n    }\n  }\n\n  /**\n   * Set title on [[DialogComponent]]\n   * @param title Title of dialog\n   */\n  setTitle(title: string) {\n    if (this.dialog != null) {\n      this.dialog.title = title;\n\n      this.dialog.markForCheck();\n    }\n  }\n\n\n  /**\n   * Close [[dialog]] if it exists on this component\n   * @param delayDialogClose\n   */\n  close(delayDialogClose?: boolean) {\n\n    const dialog = document.getElementById(this.dialog.id);\n    dialog.setAttribute(\"style\", \"display: none;\");\n    dialog.innerHTML = \"\";\n\n    this._viewStatus = 1;\n\n    this.cleanup();\n\n    if (this.dialog != null) {\n      if(delayDialogClose) {\n        setTimeout(() => {\n          this.dialog.close(null, false);\n        }, 1);\n      } else {\n        this.dialog.close(null, true);\n      }\n    } else if (this.isDynamicPage === true) {\n      this.getSession().getInjector(DynamicPagesService).removeView(this);\n    } else {\n      if (this.getSession() != null && this.getSession().getRouteNavigatorService() != null) {\n        this.getSession().getRouteNavigatorService().destroyRoute(this.routeUrl);\n      } else {\n        console.error(\"Unable to change route, session or route navigation service is not defined\");\n      }\n\n      console.error('Unable to close ViewComponent, DialogComponent not found');\n    }\n  }\n\n  /**\n   * Get name of this component\n   */\n  getLocalName(): string {\n    return \"window\";\n  }\n\n\n  /**\n   * Register and add an MCO\n   * @param mcoName\n   * @param mcoClass\n   */\n  createMco(mcoName: string, mcoClass: Type<any>): any {\n    let mco: any = this.getSession().getMcoContainer().getMco(mcoName);\n\n    //check to see if MCO already exists?\n    if (mco != null) {\n      console.warn(\"MCO \" + mcoName + \" is already exists, use existing one\");\n    } else {\n      mco = new mcoClass(this);\n      this.getSession().getMcoContainer().registerMco(mcoName, mco);\n\n      //add mco name for tracking (to be cleaned and removed later)\n      this.mcos.add(mcoName);\n    }\n\n    return mco;\n  }\n\n  /**\n   * Get MCO from client session\n   * @param mcoName Name of MCO to get\n   * @returns MCO\n   */\n  getMco(mcoName: string): any {\n    return this.getSession().getMcoContainer().getMco(mcoName);\n  }\n\n  /**\n   * Parse string and create component base on it\n   *\n   * @param domString\n   */\n  createComponent(domString: string) {\n    //textField\n    //label\n    //panel\n    //horizontalSeparator\n    try {\n      const element = AppUtils.parseDom(domString);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n\n  /**\n   * @deprecated DO NOT USE THIS, exists only for legacy support, use ngIf instead\n   * @param componentType\n   */\n  _createDynamicComponent(componentType: ComponentType): BaseComponent {\n    let comp: BaseComponent = null;\n\n    if (this.dialog != null && this.dialog.viewContainer != null) {\n      try {\n        const compFactory: ComponentFactoryResolver = this.getSession().getInjector(ComponentFactoryResolver);\n\n        if (compFactory != null) {\n          let compRef: ComponentRef<BaseComponent>;\n          if (componentType === ComponentType.LABEL) {\n            compRef = this.dialog.viewContainer.createComponent(compFactory.resolveComponentFactory(LabelComponent));\n          } else if (componentType === ComponentType.BUTTON) {\n            compRef = this.dialog.viewContainer.createComponent(compFactory.resolveComponentFactory(ButtonComponent));\n          } else if (componentType === ComponentType.COMBOBOX) {\n            compRef = this.dialog.viewContainer.createComponent(compFactory.resolveComponentFactory(ComboBoxComponent));\n          } else if (componentType === ComponentType.TEXT_FIELD) {\n            compRef = this.dialog.viewContainer.createComponent(compFactory.resolveComponentFactory(TextFieldComponent));\n          } else if (componentType === ComponentType.CHECKBOX) {\n            compRef = this.dialog.viewContainer.createComponent(compFactory.resolveComponentFactory(CheckboxComponent));\n          } else if (componentType === ComponentType.RADIO) {\n            compRef = this.dialog.viewContainer.createComponent(compFactory.resolveComponentFactory(RadioButtonComponent));\n          } else if (componentType === ComponentType.TEXTAREA) {\n            compRef = this.dialog.viewContainer.createComponent(compFactory.resolveComponentFactory(TextAreaComponent));\n          } else {\n            throw new Error(\"Unknown component type: \" + componentType);\n          }\n\n          if (compRef != null) {\n            comp = compRef.instance;\n            comp.compRef = compRef;\n            comp.compRef.changeDetectorRef.detectChanges();\n          }\n        }\n\n      } catch (e) {\n        console.error(\"fail to create component: \" + e);\n      }\n    }\n\n    return comp;\n  }\n\n\n  /**\n   * @deprecated DO NOT USE THIS! Exists only for legacy support\n   * @param id\n   */\n  _removeComponent(id: string) {\n    const child = this.findElementById(id);\n\n    if (child != null) {\n      child.destroyComponent();\n    } else {\n      if (\n        this.dialog != null &&\n        this.dialog.viewContainer != null &&\n        (this.dialog.viewContainer as any)._embeddedViews != null &&\n        Array.isArray((this.dialog.viewContainer as any)._embeddedViews) &&\n        (this.dialog.viewContainer as any)._embeddedViews.length > 0\n      ) {\n        try {\n          const ev = (this.dialog.viewContainer as any)._embeddedViews;\n\n          for (let v of ev) {\n            if (v.nodes && Array.isArray(v.nodes) && v.nodes.length > 0) {\n\n              for (let n of v.nodes) {\n                if (n.instance != null && n.instance.id === id) {\n                  if (typeof n.instance.destroyComponent === 'function') {\n                    n.instance.destroyComponent()\n\n                    /* istanbul ignore if */\n                    if (AppUtils.enableLogging === true) {\n                      console.info(\"Removed component: \" + id);\n                    }\n                  }\n                  break;\n                }\n              }\n            }\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n  }\n\n\n  /**\n   * Check if this view can be active\n   * @returns True if view can be active or parent is null\n   */\n  isView(): boolean {\n    return this.canBeActiveView !== false ? true : (this.getParent() == null ? true : false);\n  }\n\n\n  /**\n   * Check if this view can't be active view\n   * @returns True if view can't be active view\n   */\n  isNoneActiveView(): boolean {\n    return this.canBeActiveView === false;\n  }\n\n  /**\n   * Check if this is a dynamic page\n   * @returns True if it is a dynamic page\n   */\n  isDynamicView(): boolean {\n    return this.isDynamicPage === true ? true : false;\n  }\n\n  /**\n   * Set [[DialogComponent]] instance z-index\n   * @param newZIndex\n   */\n  updateZIndex(newZIndex: number) {\n    if (this.dialog != null && this.isDestroyed !== true && this.disabled != true) {\n      this.dialog.updateZIndex(newZIndex);\n      this.zIndex = newZIndex;\n    }\n  }\n\n\n  /**\n   * Get JSON representation of this component\n   * @returns Object JSON metadata for this component\n   */\n  toJson(): {} {\n    const json: any = super.toJson();\n    this.setJson(json, \"screenIndex\", this.getScreenIndex());\n\n    if (this.getSession().getMcoContainer().activeView().getId() === this.getId() && UiDocument.menuItemElementMap != null) {\n      const menuItems: Array<{}> = [];\n      const keySet = UiDocument.menuItemElementMap.keys();\n      let keyIt = keySet.next();\n\n      while(keyIt.done !== true) {\n        menuItems.push(UiDocument.menuItemElementMap.get(keyIt.value).toJson());\n        keyIt = keySet.next();\n      }\n\n      if (this._inactiveMenuItems != null) {\n        const keyIt = this._inactiveMenuItems.values();\n        let rs = keyIt.next();\n\n        while(rs.done !== true) {\n          menuItems.push(rs.value.toJson());\n          rs = keyIt.next();\n        }\n      }\n\n      if (json[\"children\"] != null) {\n        json[\"children\"] = json[\"children\"].concat(menuItems);\n      } else {\n        json[\"children\"] = menuItems;\n      }\n    }\n\n    return json;\n  }\n\n  /**\n   * Add component id to [[defIds]]\n   * @param id\n   */\n  trackDef(id: string) {\n    this.defIds.push(id);\n  }\n\n  private static closeOnInit = { idSet : new Set<string>(), types : new Set<Type<ViewComponent>>(), hooked : false };\n\n  static hasIdAsCloseTargetOnInit(viewId: string): boolean {\n    return ViewComponent.closeOnInit.idSet.has(viewId);\n  }\n\n  static hasTypeAsCloseTargetOnInit(viewType: Type<ViewComponent>): boolean {\n    return ViewComponent.closeOnInit.types.has(viewType);\n  }\n\n  private static hookClosePrevView2DynamicPagesService() {\n    if(!ViewComponent.closeOnInit.hooked) {\n      DynamicPagesService.onCreateViewCloser = (sessionService, viewType, routeId) => {\n        ViewComponent.closePrevView(sessionService, routeId ? routeId : viewType);\n      };\n      ViewComponent.closeOnInit.hooked = true;\n    }\n  }\n\n  static closePrevView(sessionService: SessionService, target: string|Type<ViewComponent>) {\n    let view: ViewComponent = null;\n    if((typeof target) == \"string\") {\n      let screenId: string = target as string;\n      if(ViewComponent.hasIdAsCloseTargetOnInit(screenId)) {\n        view = sessionService.getMcoContainer().getViewById(screenId);\n      }\n    } else if(target instanceof Type) {\n      let viewType: Type<ViewComponent> = target as Type<ViewComponent>;\n      if(ViewComponent.hasTypeAsCloseTargetOnInit(viewType)) {\n        view = _.find(sessionService.getMcoContainer().getViews(), v => v.constructor == viewType);\n      }\n    }\n\n    //Vivify: if view has actionForwardName, do not close the view as we will call it handleActionForward() to refresh the screen.\n    if(view && view.actionForwardName == null) {\n      view.close();\n    }\n  }\n\n  /**\n   * Close previous version of this view (if this view is \"re-open\"). This is to support usage\n   * of removing current view and replacing with new view\n   * @param viewId\n   */\n  closeView(viewId: string, delayDialogClose?: boolean) {\n    //if the view about to be closed has the same \"id\" (i.e. same screen but diff).\n    const checkScreenInique = viewId === this.id;\n\n    const oldView: ViewComponent = _.find(this.getSession().getMcoContainer().getViews(), (view: ViewComponent)=>{\n      return view.id === viewId &&\n        (checkScreenInique === false ||\n          (checkScreenInique === true &&\n            view.uniqueId !== this.uniqueId\n          )\n        )\n      ;\n    });\n\n    if (oldView != null) {\n      //for case where we are the same screen, we should't call beforeDestroyCb to cleanup\n      if (checkScreenInique === true) {\n        oldView.beforeDestroyCb = null;\n      }\n\n      oldView.close(delayDialogClose);\n    }\n    if(!this.viewIsInitialized && checkScreenInique) {\n      // This case is too late to close. This object's view is already exist, reused and un-closable!\n      // To save this trying, and execute closing at router before create new view.\n      if(!ViewComponent.closeOnInit.idSet.has(viewId)) {\n        ViewComponent.closeOnInit.idSet.add(viewId);\n      }\n      let oType = this.constructor as Type<ViewComponent>;\n      if(!ViewComponent.closeOnInit.types.has(oType)) {\n        ViewComponent.closeOnInit.types.add(oType);\n      }\n      ViewComponent.hookClosePrevView2DynamicPagesService();\n    }\n  }\n\n\n  /**\n   * Add a [[PopupMenuDirective]] to [[popupMenus]] property\n   * @param popupMenu Popup menu to add to internal [[popupMenus]] list\n   */\n  registerPopupMenu(popupMenu: PopupMenuDirective) {\n    if (this.popupMenus == null) {\n      this.popupMenus = [];\n    }\n\n    this.popupMenus.push(popupMenu);\n  }\n\n  /**\n   * Check if [[popupMenus]] has 1 or more items\n   * @returns True if [[popupMenus]] is defined and has at least 1 item\n   */\n  hasPopupMenu() {\n    return this.popupMenus != null && this.popupMenus.length > 0;\n  }\n\n  /**\n   * Get the ID of the first [[PopupMenuDirective]] instance in [[popupMenus\n   * @returns Id of popup menu\n   */\n  getFirstPopupMenuId() {\n    return this.popupMenus != null && this.popupMenus.length > 0 ? this.popupMenus[0].id : null;\n  }\n\n  /**\n   * Delegate to [[BaseComponent]] findElementById method\n   * @param id Component ID\n   */\n  findElementById(id: string): BaseComponent {\n    let comp: BaseComponent = super.findElementById(id);\n\n    if (comp == null && this._tableColumnsMap != null) {\n      comp = this._tableColumnsMap.get(KeyUtils.toMapKey(id));\n    }\n\n    if (comp == null) {\n      //check for inactive menu items\n      comp = this.getInactiveMenuItem(id) as any;\n    }\n\n    return comp;\n  }\n\n  /**\n   * Stop change detection\n   */\n  freezeChangeDetection() {\n    if (this.getChangeDetector() != null) {\n      this.getChangeDetector().detach();\n      this.changeDetectionFrozen = true;\n    }\n  }\n\n  /**\n   * Resume change detection if it has been stopped\n   */\n  unfreezeChangeDetection() {\n    if (this.getChangeDetector() != null) {\n      this.getChangeDetector().detectChanges();\n      this.getChangeDetector().reattach();\n    }\n\n    this.changeDetectionFrozen = false;\n  }\n\n  /**\n   * Check if change detection has been stopped\n   * @returns True if change detection has been stopped\n   */\n  isChangeDetectionFrozen() {\n    return this.changeDetectionFrozen === true;\n  }\n\n  /**\n   * Check if this is a container component\n   * @returns True\n   */\n  protected isContainer() {\n    return true;\n  }\n\n  /**\n   * Trigger change detection for parent [[BaseComponent]] and [[dialog]] instance\n   */\n  detectChanges() {\n    super.detectChanges();\n\n    if (this.dialog != null) {\n      this.dialog.detectChanges();\n    }\n  }\n\n  /**\n   * Mark this component for change detection\n   */\n  markForCheck() {\n    super.markForCheck();\n\n    if (this.dialog != null) {\n      this.dialog.markForCheck();\n    }\n  }\n\n  /**\n   * Show the view after it has been hidden via minimized\n   */\n  showView() {\n    if (this.dialog != null) {\n      this.dialog.showView();\n    }\n\n    delete this.isMinimized;\n  }\n\n  /**\n   * Minimize the [[dialog]] of this component\n   */\n  minimize() {\n    if (this.dialog != null) {\n      this.dialog.minimize(null);\n    }\n  }\n\n  /**\n   * Move this component to the top of the view stack\n   */\n  moveToTop() {\n    this.getSession().getMcoContainer().reStackView(this.id), this.screenIndex;\n  }\n\n  trackInactiveMenuItem(menuItem: MenuItemComponent) {\n    const id = menuItem.getId();\n\n    const fauxMenuItem = new HTMLElementWrapper(null, \"menuItem\", null);\n    fauxMenuItem.setAttribute(\"id\", id);\n\n    if (menuItem.item != null && menuItem.item.customAttributes != null) {\n      const keys = _.keys(menuItem.item.customAttributes);\n\n      for (const key of keys) {\n        if (key !== \"id\") {\n          fauxMenuItem.setAttribute(key, menuItem.item.customAttributes[key]);\n        }\n      }\n    }\n\n    if (this._inactiveMenuItems == null) {\n      this._inactiveMenuItems = new Map<string, HTMLElementWrapper>();\n    }\n\n    this._inactiveMenuItems.set(id, fauxMenuItem);\n  }\n\n  getInactiveMenuItem(id: string) {\n    return this._inactiveMenuItems != null ? this._inactiveMenuItems.get(id) : null;\n  }\n\n  cleanup() {\n    super.cleanup();\n\n    if (this._viewChildrenMap != null) {\n      const cit = this._viewChildrenMap.values();\n      let val = cit.next();\n\n      while(val.done !== true) {\n        //some children are not actual BaseComponent\n        if (typeof val.value.emptyChildren === \"function\") {\n          val.value.emptyChildren();\n          val.value._isDying = true;\n        }\n\n        val = cit.next();\n      }\n    }\n\n    super.emptyChildren();\n  }\n\n  isModalDialog(): boolean {\n    return this.dialog != null && (this.dialog.modal === true || this.dialog.modal === \"true\");\n  }\n\n  /**\n   * Not implemented\n   */\n  handleActionForward() {\n  }\n  /**\n   * screen index(0~)ã®æå­åè¡¨ç¾\n   */\n  getScreenIndex():string {\n    return (this.screenIndex === undefined || this.screenIndex === null)\n      ? ''\n      : this.screenIndex.toString();\n  }\n  registerScreenIndex(){\n    this.screenIndex = this.getSession().getMcoContainer().nextScreenIndex(this.baseScreenId);\n  }\n\n  setVisible(boo: boolean) {\n    super.setVisible(boo);\n    this.getSession().getMcoContainer().refreshBreadCrumb();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ViewComponent } from './view.component';\nimport { DynamicPagesService } from './dynamic-pages.service';\nimport { BaseModule } from '../base/base.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BaseModule\n  ],\n  declarations: [ViewComponent],\n  providers: [\n    DynamicPagesService\n  ],\n  exports: [\n    ViewComponent,\n  ]\n})\nexport class ViewModule { }\n","import {\n  Component,\n  Optional,\n  SkipSelf,\n  ElementRef,\n  ContentChildren,\n  QueryList,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  DoCheck,\n  IterableDiffers,\n  IterableDiffer,\n  ViewChild,\n  ContentChild,\n  ViewEncapsulation,\n  Renderer2\n} from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { SessionService } from '../session/session.service';\nimport { MenuItemDirective } from './menu-item.directive';\nimport { MenuItem } from './menu-item';\nimport { ContextMenuService } from './context-menu.service';\nimport { BsDropdownDirective } from 'ngx-bootstrap';\nimport { MenuItemBuilder } from './menu-item-builder';\nimport * as _ from \"lodash\";\nimport { ClientEvent } from '../event-handler/client-event';\nimport { AppUtils } from '../base/app-utils';\nimport { UiDocument } from '../base/ui-document';\n\n/**\n * Class for popup menu component\n */\n@Component({\n  selector: 'vt-popup-menu-view',\n  templateUrl: './popup-menu.component.html',\n  styleUrls: ['./popup-menu.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class PopupMenuComponent extends BaseComponent implements DoCheck {\n  @Input() private idName: string; //DO NOT used, exists for bad usage\n  @ViewChild(\"myDropdown\", {read: BsDropdownDirective}) dropdown: BsDropdownDirective;\n  @ViewChild(\"bsDropdownContainer\", {read: ElementRef}) dropdownContainer: ElementRef<HTMLElement>;\n\n  @Input() menuItems: Array<MenuItem> = [];\n\n  private menuItemsDiffer: IterableDiffer<{}> = null;\n\n  private isShown: boolean = false;\n\n  get hasMenuItems(): boolean {\n    return this.menuItems != null && this.menuItems.length > 0;\n  }\n\n  onDocumentClick: (event)=>void;\n\n  /**\n   *\n   * @param parent see [[BaseComponent]] constructor\n   * @param sessionService see [[BaseComponent]] constructor\n   * @param elementRef see [[BaseComponent]] constructor\n   * @param cd Change detector\n   * @param differs\n   * @param popupMenuService\n   * @param renderer see [[BaseComponent]] constructor\n   */\n  constructor(\n    @Optional() @SkipSelf() parent: BaseComponent,\n    sessionService: SessionService,\n    elementRef: ElementRef,\n    private cd: ChangeDetectorRef,\n    differs: IterableDiffers,\n    private popupMenuService: ContextMenuService,\n    renderer: Renderer2\n  ) {\n    super(parent, sessionService, elementRef, renderer);\n\n    this.menuItemsDiffer = differs.find([]).create();\n\n    this.onDocumentClick = (event)=>{\n      this.handleDocumentClick(event);\n    };\n\n    document.addEventListener(\"click\", this.onDocumentClick, true);\n  }\n\n  /**\n   * Do check lifecycle\n   */\n  ngDoCheck() {\n    if (this.menuItemsDiffer.diff(this.menuItems)) {\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * After view init lifecycle. Trigger change detection and show this component\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    this.cd.detectChanges();\n\n    UiDocument.registerMenuItemElement(this.getId(), this as any);\n\n    const tm = setTimeout(()=>{\n      clearTimeout(tm);\n      this.show();\n    });\n  }\n\n  /**\n   * Destroy lifecycle. Remove event listeners and remove dropdown elements\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n\n    UiDocument.unregisterMenuItemElement(this.getId());\n\n    document.removeEventListener(\"click\", this.onDocumentClick, true);\n    this.dropdownContainer = null;\n    this.dropdown = null;\n  }\n\n  /**\n   * Show the popup by setting CSS position to on screen\n   */\n  private show() {\n    this.popupMenuService.setActiveMenu(this.id);\n\n    if (this.dropdown != null) {\n      this.dropdown.show();\n      this.isShown = true;\n      const position = this.getSession().getMousePosition();\n\n      if (position != null && this.dropdownContainer != null) {\n        this.renderer.setStyle(this.dropdownContainer.nativeElement, \"left\", position.x + \"px\");\n        this.renderer.setStyle(this.dropdownContainer.nativeElement, \"top\", position.y + \"px\");\n      }\n\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Hide the popup menu\n   */\n  private hide() {\n    this.dropdown.hide();\n    this.isShown = false;\n    this.cd.markForCheck();\n    this.popupMenuService.setActiveMenu(null);\n  }\n\n  /**\n   * Event handler for mouse click\n   * @param event\n   */\n  handleDocumentClick(event: MouseEvent){\n    if (this.isShown === true && !this.elementRef.nativeElement.contains(event.target)) {\n      this.hide();\n    }\n  }\n\n  /**\n   * Get [[cd]] (Change detector) property\n   */\n  getChangeDetector() {\n    return this.cd;\n  }\n\n  /**\n   * Event handler that hides all other popup menus and displays this one\n   * @param event\n   */\n  dispSubmenu(event: any): void {\n    const currentTarget: any = event.currentTarget;\n    const currentChildren: Array<any> = currentTarget.children;\n    const parentChildren: Array<any> = currentTarget.parentElement.children;\n\n    for(let i = 0, len = parentChildren.length; i < len; i++){\n      if(parentChildren[i] !== undefined){\n        this.renderer.setStyle(parentChildren[i], \"background-color\", \"#ffffff\");\n      }\n      if(parentChildren[i].children[1] === undefined){\n        continue;\n      }\n\n      parentChildren[i].children[1].classList.remove('popup-sub-menu-display');\n    }\n\n    if(currentChildren[1] === undefined\n        || (currentChildren[0] !== undefined && !currentChildren[0].classList.contains('dropdown-item'))){\n      return;\n    }\n\n    currentChildren[1].classList.add('popup-sub-menu-display');\n    this.renderer.setStyle(currentTarget, \"background-color\", \"#f5de92\");\n  }\n\n  /**\n   * Set an attribute with value on the menu item\n   * @param name Attribute name\n   * @param value Attribute value\n   */\n  setAttribute(name: string, value: any) {\n    this.setCustomAttribute(name, value);\n  }\n\n  /**\n   * Get the value of an attribute by name\n   * @param name Attribute name\n   */\n  getAttribute(name: string) {\n    return this.getCustomAttribute(name);\n  }\n\n  toJson() {\n    return super.toJson();\n  }\n}\n","import { Directive, Input, QueryList, ContentChildren, Output, EventEmitter } from '@angular/core';\nimport { MenuItem } from './menu-item';\n\n/**\n * Menu item directive class. Adds menu dispay and behavior to component\n */\n@Directive({\n  selector: 'vt-menu-item'\n})\nexport class MenuItemDirective {\n  @Input() private idName: string; //DO NOT used, exists for bad usage\n  @Input() private id: string;\n  @Input() private text: string = '';\n  @Input() private visible: boolean = true;\n  @Output() private onCommand = new EventEmitter<void>();\n\n  @ContentChildren(MenuItemDirective) private subMenuItems: QueryList<MenuItemDirective>;\n\n  /**\n   * Convert [[MenuItemDirective]] children of parent view to [[MenuItem]]\n   * @param parentScreenId\n   */\n  toMenuItem(parentScreenId?: string): MenuItem {\n    const menuItem: MenuItem = {\n      id: this.id,\n      text: this.text,\n      menuItems: null,\n      onCommand: this.onCommand,\n      parentScreenId: parentScreenId,\n      display: this.visible\n    };\n\n    if (this.subMenuItems != null && this.subMenuItems.length > 0) {\n      //filter to remove self then map to MenuItem\n      menuItem.menuItems = this.subMenuItems.filter(item=>item !== this).map(item=>item.toMenuItem(parentScreenId));\n    }\n\n    return menuItem;\n  }\n}\n","import { Component, Output, Input, EventEmitter, OnDestroy, AfterViewInit, ChangeDetectorRef } from '@angular/core';\nimport { MenuItem } from '../menu-item';\nimport { ClientEvent } from '../../event-handler/client-event';\nimport { AppUtils } from '../../base/app-utils';\nimport { SessionService } from '../../session/session.service';\nimport { MenuItemBuilder } from '../menu-item-builder';\nimport { UiDocument } from '../../base/ui-document';\nimport * as _ from \"lodash\";\nimport { KeyUtils } from '../../base/key-utils';\n\n/**\n * Class for menu item component. Child rendered by Menu directive\n */\n@Component({\n  selector: '[vt-menu-item-comp]',\n  templateUrl: './menu-item.component.html',\n  styleUrls: ['./menu-item.component.css']\n})\nexport class MenuItemComponent implements OnDestroy, AfterViewInit{\n  @Input() text: string;\n  @Input() id: string;\n  @Input() menuItems: Array<MenuItem>;\n  @Input() display: boolean = true;\n  @Input() visible: boolean;\n  @Input() item: MenuItem;\n  @Input() popupMenuId: string;\n\n  @Output() onClick = new EventEmitter<void>();\n\n  /**\n   * Check if menu items exist\n   * @returns True if [[menuItems]] exists and has 1 or more items\n   */\n  get hasMenuItems(): boolean {\n    return this.menuItems != null && this.menuItems.length > 0;\n  }\n\n  /**\n   * Check if this menu item is a separator/divider (i.e. hyphen)\n   * @returns True if the menu item text is a hyphen\n   */\n  get isDivider(): boolean {\n    return this.text === '-';\n  }\n\n  /**\n   * Get menu item styles map\n   * @return Map of styles\n   */\n  get menuStyles() {\n    return this.item != null ? this.item.styles : null;\n  }\n\n  /**\n   *\n   * @param sessionService Injects reference to [[SessionService]] instance\n   */\n  constructor(private sessionService: SessionService, private cd: ChangeDetectorRef) {\n\n  }\n\n  /**\n   * After view init lifecycle. Adds menu item to [[UiDocument]]\n   */\n  ngAfterViewInit() {\n    UiDocument.registerMenuItemElement(this.id, this);\n  }\n\n  /**\n   * Destroy lifecycle. Remove menu item from [[UiDocument]]\n   */\n  ngOnDestroy() {\n    this.item = null;\n    this.menuItems = null;\n\n    UiDocument.unregisterMenuItemElement(this.id);\n  }\n\n  /**\n   * Set an attribute with value on the menu item\n   * @param name Attribute name\n   * @param value Attribute value\n   */\n  setAttribute(name: string, value: any) {\n    if (this.item) {\n      if (name === \"display\" || name === \"visible\") {\n        value = value === true || value === \"true\";\n        this.display = value;\n        this.item.display = value;\n        this.cd.detectChanges();\n      } else if (name === \"text\") {\n        this.text = value;\n        this.item.text = value;\n        this.cd.detectChanges();\n      } else if (MenuItemBuilder.knownKeys.indexOf(name) < 0) {\n        if (this.item.customAttributes == null) {\n          this.item.customAttributes = {};\n        }\n\n        this.item.customAttributes[name] = value;\n      }\n    }\n  }\n\n  /**\n   * Get the value of an attribute by name\n   * @param name Attribute name\n   */\n  getAttribute(name: string) {\n    if (this.item) {\n      if (MenuItemBuilder.knownKeys.indexOf(name) < 0) {\n        return this.item.customAttributes == null ? null : this.item.customAttributes[name];\n      } else if (name === \"display\" || name === \"visible\") {\n        return this.display;\n      } else if (name === \"text\") {\n        return this.text;\n      } else if (name === \"id\") {\n        return this.id;\n      }\n    }\n  }\n\n  /**\n   * Get value of [[id]] property\n   * @returns [[id]] value\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get value of [[text]] property\n   * @returns [[text]] value\n   */\n  getText() {\n    return this.text;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler fro mouseenter event\n   * @param event Mouse event\n   */\n  handleOnEnter(event) {\n    const clientEvent = new ClientEvent(this, event);\n\n    if (AppUtils.customizeClientEvent != null) {\n      AppUtils.customizeClientEvent(this, clientEvent);\n    }\n\n    if (this.item != null && this.item.parentScreenId != null) {\n      clientEvent.setParameter(\"screenId\", this.item.parentScreenId);\n    }\n\n    this.sessionService.getEventHandler().setClientEvent(clientEvent);\n\n    if (this.item && typeof this.item.onCommandCallback === 'function') {\n      this.item.onCommandCallback(this.item);\n    } else if (this.item && this.item.onCommand) {\n      this.item.onCommand.emit();\n    }\n\n    if (this.popupMenuId != null) {\n      this.sessionService.hideContextMenu(this.popupMenuId);\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for mouseenter. Focuses the event target\n   * @param event Mouse event\n   */\n  handleMouseEnter(event) {\n    event.target.focus();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for click.\n   * @param event\n   * @event OnCommand\n   */\n  handleOnClick(event: MouseEvent): void {\n    const clientEvent = new ClientEvent(this, event);\n\n    if (AppUtils.customizeClientEvent != null) {\n      AppUtils.customizeClientEvent(this, clientEvent);\n    }\n\n    if (this.item != null && this.item.parentScreenId != null) {\n      clientEvent.setParameter(\"screenId\", this.item.parentScreenId);\n    }\n\n    this.sessionService.getEventHandler().setClientEvent(clientEvent);\n\n    if (this.item && typeof this.item.onCommandCallback === 'function') {\n      this.item.onCommandCallback(this.item);\n    } else if (this.item && this.item.onCommand) {\n      this.item.onCommand.emit();\n    }\n\n    if (this.popupMenuId != null) {\n      this.sessionService.hideContextMenu(this.popupMenuId);\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for mousedown event\n   * @param event Mouse down event\n   */\n  handleMouseDown(event: MouseEvent) {\n    const clientEvent = new ClientEvent(this, event);\n\n    if (AppUtils.customizeClientEvent != null) {\n      AppUtils.customizeClientEvent(this, clientEvent);\n    }\n\n    if (this.item != null && this.item.parentScreenId != null) {\n      clientEvent.setParameter(\"screenId\", this.item.parentScreenId);\n    }\n\n    this.sessionService.getEventHandler().setClientEvent(clientEvent);\n\n    if (this.item && typeof this.item.onMouseDownCallback === \"function\") {\n      this.item.onMouseDownCallback(this);\n    }\n  }\n\n  /**\n   * Get JSON representation for this component\n   * @returns Object Metadata as JSON\n   */\n  toJson(): {} {\n    const json = {};\n\n    json[\"tagName\"] = \"menuItem\";\n    json[\"nxTagName\"] = \"menuItem\";\n\n    if (this.id != null) {\n      json[\"id\"] = this.id;\n    }\n\n    if (this.text != null) {\n      json[\"text\"] = this.text;\n    }\n\n    /* istanbul ignore if */\n    if (this.popupMenuId != null) {\n      json[\"popup\"] = \"#\" + this.popupMenuId;\n    }\n\n    /* istanbul ignore if */\n    if (this.item.customAttributes != null) {\n      const keys = _.keys(this.item.customAttributes);\n\n      for (let key of keys) {\n        json[key] = KeyUtils.toJsonValue(this.item.customAttributes[key]);\n      }\n    }\n\n    return json;\n  }\n\n  /**\n   * Event handler to show the submenu items by adding CSS class\n   * @param event\n   */\n  dispSubmenu(event: any): void {\n    const currentTarget: any = event.currentTarget;\n    const currentChildren: Array<any> = currentTarget.children;\n    const parentChildren: Array<any> = currentTarget.parentElement.children;\n\n    for(let i = 0, len = parentChildren.length; i < len; i++){\n      if(parentChildren[i] !== undefined){\n        parentChildren[i].style.backgroundColor = \"#ffffff\";\n      }\n      if(parentChildren[i].children[1] === undefined){\n        continue;\n      }\n\n      parentChildren[i].children[1].classList.remove('popup-sub-menu-display');\n    }\n\n    if(currentChildren[1] === undefined\n        || (currentChildren[0] !== undefined && !currentChildren[0].classList.contains('dropdown-item'))){\n      return;\n    }\n\n    currentChildren[1].classList.add('popup-sub-menu-display');\n    currentTarget.style.backgroundColor = \"#f5de92\";\n  }\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { MenuItemDirective } from './menu-item.directive';\n\n/**\n * Menu directive class\n */\n@Directive({\n  selector: 'vt-menu',\n  providers: [\n    {\n      provide: MenuItemDirective,\n      useExisting: forwardRef(()=>MenuDirective)\n    }\n  ]\n})\nexport class MenuDirective extends MenuItemDirective {\n\n}\n","import { Component, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, ViewChild } from '@angular/core';\n\nimport { Subscription } from \"rxjs\";\nimport { ContextMenuService } from '../context-menu.service';\nimport { PopupMenuComponent } from '../popup-menu.component';\n\n/**\n * Class for popup menu container\n */\n@Component({\n  selector: 'vt-popup-menu-container',\n  templateUrl: './popup-menu-container.component.html',\n  styleUrls: ['./popup-menu-container.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopupMenuContainerComponent implements OnDestroy {\n  @ViewChild(PopupMenuComponent) popupMenu: PopupMenuComponent;\n\n  private activeMenuSubscription: Subscription;\n\n  activeMenuId: string;\n  activeMenuItems: Array<any>;\n  \n  hasPopupMenu: boolean = false;\n\n  /**\n   * \n   * @param contextMenuService Injects reference to context menu service\n   * @param cd Injects change detector reference\n   */\n  constructor(\n    private contextMenuService: ContextMenuService,\n    private cd: ChangeDetectorRef\n  ) {\n    this.activeMenuSubscription = this.contextMenuService.activeMenuObservable.subscribe((activeMenu)=>{\n      this.setActiveMenu(activeMenu);\n    });\n  }\n\n  /**\n   * Destroy lifecycle. Remove references\n   */\n  ngOnDestroy() {\n    if (this.activeMenuSubscription != null) {\n      this.activeMenuSubscription.unsubscribe();\n    }\n\n    this.activeMenuSubscription = null;\n    this.activeMenuItems = null;\n    this.contextMenuService = null;\n  }\n\n  /**\n   * Set active menu by id\n   * @param id Id of menu to set as active\n   */\n  setActiveMenu(id: string) {\n    this.activeMenuId = id;\n    \n    if (id != null) {\n      this.activeMenuItems = this.contextMenuService.getContextMenuItems(id);\n\n      if (this.activeMenuItems != null && this.activeMenuItems.length > 0) {\n        this.hasPopupMenu = true;\n      }\n    } else {\n      this.activeMenuItems = null;\n      this.hasPopupMenu = false;\n    }\n\n    this.cd.detectChanges();\n  }\n}\n","import { Directive, QueryList, Input, ContentChildren, OnInit, AfterViewInit, Optional, SkipSelf } from '@angular/core';\nimport { MenuItemDirective } from './menu-item.directive';\nimport { MenuItem } from './menu-item';\nimport { ContextMenuService } from './context-menu.service';\nimport { BaseComponent } from '../base/base.component';\nimport { ViewComponent } from '../view/view.component';\n\n/**\n * Popup menu directive class. Adds context menu items to component\n */\n@Directive({\n  selector: 'vt-popup-menu'\n})\nexport class PopupMenuDirective implements AfterViewInit {\n  @Input() idName: string; //DO NOT used, exists for bad usage\n  @Input() id: string;\n  @Input() disabled: boolean = false;\n  @Input() visible: boolean = true;\n  @Input() text: string = \"\";\n\n  @ContentChildren(MenuItemDirective) private subMenuItems: QueryList<MenuItemDirective>;\n  \n  /**\n   * \n   * @param parent \n   * @param contextMenuService Injected service for context menu functions\n   */\n  constructor(\n    @Optional() private parent: BaseComponent,\n    private contextMenuService: ContextMenuService\n  ) { }\n\n  /**\n   * After view init lifecycle. Initialize submenu items\n   */\n  ngAfterViewInit() {\n    if (this.parent != null && this.parent.getParentView() != null) {\n      (this.parent.getParentView() as ViewComponent).registerPopupMenu(this);\n    } else {\n      this.convertSubMenuItems(null);\n    }\n  }\n\n  /**\n   * Delegate to [[ContextMenuService]] getContextMenuItems method\n   */\n  getMenuItems() {\n    return this.contextMenuService.getContextMenuItems(this.id);\n  }\n\n  /**\n   * Convert all sub menu items ([[MenuItemDirective]]) to [[MenuItem]]\n   * @param parentScreenId Id of parent view component\n   */\n  convertSubMenuItems(parentScreenId: string) {\n    let menuItems: Array<MenuItem> = [];\n\n    if (this.subMenuItems) {\n      menuItems = this.subMenuItems.map(item=>item.toMenuItem(parentScreenId));\n    }\n\n    this.contextMenuService.registerContextMenu(this.id, menuItems, parentScreenId);\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PopupMenuComponent } from './popup-menu.component';\nimport { MenuItemDirective } from './menu-item.directive';\nimport { MenuItemComponent } from './menu-item/menu-item.component';\nimport { MenuDirective } from './menu.directive';\nimport { ContextMenuService } from './context-menu.service';\nimport { BsDropdownModule } from 'ngx-bootstrap';\nimport { PopupMenuContainerComponent } from './popup-menu-container/popup-menu-container.component';\nimport { PopupMenuDirective } from './popup-menu.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BsDropdownModule.forRoot()\n  ],\n  declarations: [\n    PopupMenuComponent,\n    MenuItemDirective,\n    MenuItemComponent,\n    MenuDirective,\n    PopupMenuContainerComponent,\n    PopupMenuDirective\n  ],\n  exports: [\n    PopupMenuComponent,\n    MenuItemDirective,\n    MenuItemComponent,\n    MenuDirective,\n    BsDropdownModule,\n    PopupMenuContainerComponent,\n    PopupMenuDirective\n  ],\n  providers: [\n    ContextMenuService\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class PopupMenuModule { }\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\n/**\n * Class for bottom/right split-pane section\n */\n@Component({\n  selector: 'vt-bottom',\n  templateUrl: './bottom-pane.component.html',\n  styleUrls: ['./bottom-pane.component.css']\n})\nexport class BottomPaneComponent implements OnInit {\n  @ViewChild(TemplateRef) content;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\n\n/**\n * Class for top/left split-pane section\n */\n@Component({\n  selector: 'vt-top',\n  templateUrl: './top-pane.component.html',\n  styleUrls: ['./top-pane.component.css']\n})\nexport class TopPaneComponent implements OnInit {\n  @ViewChild(TemplateRef) content;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, ChangeDetectionStrategy, Input, ContentChild, ViewChild, ElementRef, Optional, SkipSelf, Renderer2, NgZone, ChangeDetectorRef, forwardRef } from '@angular/core';\nimport { BaseComponent } from '../base/base.component';\nimport { BottomPaneComponent } from './bottom-pane/bottom-pane.component';\n/* istanbul ignore next */\nimport { TopPaneComponent } from './top-pane/top-pane.component';\nimport { SessionService } from '../session/session.service';\nimport * as _ from 'lodash';\n\ndeclare var $: any;\n\n/**\n * Class for split resizable panes\n */\n@Component({\n  selector: 'vt-split-pane',\n  templateUrl: './split-pane.component.html',\n  styleUrls: ['./split-pane.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: BaseComponent,\n      useExisting: forwardRef(()=>SplitPaneComponent)\n    }\n  ]\n})\nexport class SplitPaneComponent extends BaseComponent {\n  /**\n   * 'horizontal' = top/bottom panes, 'vertical' = left/right panes\n   */\n  @Input() orientation: string = 'horizontal';\n\n  /**\n   * Where the divider position should be set\n   */\n  @Input() splitPosition: string = '50%'; //percent\n  /**\n   * Set true, in case of cascading split pane\n   */\n  @Input() set noScroll(value){\n    this._noScroll = value;\n    this.topPaneStyles['overflow'] = value ? 'hidden' : 'inherit';\n    this.bottomPaneStyles['overflow'] = value ? 'hidden' : 'inherit';\n  }\n  get noScroll(){ return this._noScroll; }\n  private _noScroll: boolean = false;\n\n  @ViewChild(\"topPaneSection\", {read: ElementRef}) topPaneElement: ElementRef;\n  @ViewChild(\"splitPaneDivider\", {read: ElementRef}) splitPaneDivider: ElementRef;\n  @ViewChild(\"bottomPaneSection\", {read: ElementRef}) bottomPaneElement: ElementRef;\n  @ViewChild(\"splitPaneContainer\", {read: ElementRef}) splitPaneContainer: ElementRef;\n\n  @ContentChild(TopPaneComponent) topPane: TopPaneComponent;\n  @ContentChild(BottomPaneComponent) bottomPane: BottomPaneComponent;\n\n  dividerStyles: {[name: string]: string} = {};\n  topPaneStyles: {[name: string]: string} = {};\n  bottomPaneStyles: {[name: string]: string} = {};\n\n  dividerCssClass = [\"split-pane-divider\"];\n\n  private _resizeOn: boolean = false;\n  private _handleMouseMove: (event)=>void;\n  private _handleMouseDown: (event)=>void;\n  private _handleMouseUp: (event)=>void;\n  private _prevPos = -1;\n  private _containerHeight: number;\n  private _containerWidth: number;\n  private _update = false;\n\n  /* istanbul ignore next */\n  /**\n   *\n   * @param parent see [[BaseComponent]] constructor\n   * @param sessionService see [[BaseComponent]] constructor\n   * @param elementRef see [[BaseComponent]] constructor\n   * @param renderer see [[BaseComponent]] constructor\n   * @param zone Inject [[NgZone]] reference\n   * @param cd Inject [[ChangeDetectorRef]]\n   */\n  constructor(@Optional() @SkipSelf() parent: BaseComponent, sessionService: SessionService, elementRef: ElementRef, renderer: Renderer2, private zone: NgZone, private cd: ChangeDetectorRef) {\n    super(parent, sessionService, elementRef, renderer);\n\n    this._handleMouseMove =  _.throttle((event)=>{\n      this._resizePanels(event);\n    },150);\n\n    this._handleMouseDown = (event)=>{\n      this.zone.runOutsideAngular(()=>{\n        document.addEventListener('mousemove', this._handleMouseMove, true);\n      });\n\n      if (this.orientation === \"vertical\") {\n        this._prevPos = event.pageX;\n      } else {\n        this._prevPos = event.pageY;\n      }\n      this._resizeOn = true;\n      this._update = false;\n    };\n\n    this._handleMouseUp = (event)=>{\n      this.zone.runOutsideAngular(()=>{\n        document.removeEventListener(\"mousemove\", this._handleMouseMove, true);\n      });\n\n      this._resizeOn = false;\n      this._update = true;\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Init lifecycle. Set panel width\n   */\n  ngOnInit() {\n    super.ngOnInit();\n    this.setPaneWidth();\n  }\n\n  /* istanbul ignore next */\n  moveUp() {\n    if (this.orientation === 'horizontal') {\n      this.renderer.setStyle(this.topPaneElement.nativeElement, \"height\", \"0%\");\n      this.renderer.setStyle(this.bottomPaneElement.nativeElement, \"height\", \"calc(100% - 13px)\");\n    } else {\n      this.renderer.setStyle(this.topPaneElement.nativeElement, \"width\", \"calc(100% - 13px)\");\n      this.renderer.setStyle(this.bottomPaneElement.nativeElement, \"width\", \"0%\");\n    }\n  }\n\n  /* istanbul ignore next */\n  moveDown() {\n    if (this.orientation === 'horizontal') {\n      this.renderer.setStyle(this.topPaneElement.nativeElement, \"height\", \"calc(100% - 13px)\");\n      this.renderer.setStyle(this.bottomPaneElement.nativeElement, \"height\", \"0%\");\n    } else {\n      this.renderer.setStyle(this.topPaneElement.nativeElement, \"width\", \"0%\");\n      this.renderer.setStyle(this.bottomPaneElement.nativeElement, \"width\", \"calc(100% - 13px)\");\n    }\n  }\n\n  /**\n   * Check if this is a container component\n   * @returns True\n   */\n  protected isContainer() {\n    return true;\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Set pane layout and dimensions\n   */\n  private setPaneWidth() {\n    if (this.orientation === 'vertical') {\n      this.dividerStyles[\"height\"] = \"100%\";\n      this.dividerStyles[\"width\"] = \"1px\";\n      this.dividerStyles['float'] = 'left';\n      this.topPaneStyles['width'] = 'calc(' + this.splitPosition + ' - 3px)';\n      this.topPaneStyles['height'] = \"100%\";\n      this.topPaneStyles['float'] = 'left'\n      let percent: string = this.splitPosition.split('%', 1)[0];\n      let nPercent = +percent;\n      this.bottomPaneStyles['width'] = 'calc(' + (100 - nPercent) + '% - 10px)';\n      this.bottomPaneStyles['height'] = \"100%\";\n      this.bottomPaneStyles['float'] = 'left';\n      this.dividerCssClass.push(\"vertical\");\n    } else {\n      this.dividerStyles[\"height\"] = \"8px\";\n      this.dividerStyles[\"width\"] = \"100%\";\n      this.topPaneStyles['height'] = 'calc(' + this.splitPosition + ' - 3px)';\n      this.topPaneStyles['width'] = \"100%\";\n      let percent: string = this.splitPosition.split('%', 1)[0];\n      let nPercent = +percent;\n      this.bottomPaneStyles['height'] = 'calc(' + (100 - nPercent) + '% - 10px)';\n      this.bottomPaneStyles['width'] = \"100%\";\n      this.dividerCssClass.push(\"horizontal\");\n    }\n  }\n\n  /**\n   * After view init lifecycle. Add event listeners\n   */\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n\n    this.cd.detectChanges();\n\n    this.zone.runOutsideAngular(()=>{\n      (this.splitPaneDivider.nativeElement as HTMLElement).addEventListener(\"mousedown\", this._handleMouseDown, true);\n\n      document.addEventListener(\"mouseup\", this._handleMouseUp, true);\n    });\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Destroy lifecycle. Remove event listeners\n   */\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(()=>{\n      (this.splitPaneDivider.nativeElement as HTMLElement).removeEventListener(\"mousedown\", this._handleMouseDown, true);\n      document.removeEventListener(\"mouseup\", this._handleMouseUp, true);\n      document.removeEventListener(\"mousemove\", this._handleMouseMove, true);\n    });\n\n    this._handleMouseDown = null;\n    this._handleMouseMove = null;\n    this._handleMouseUp = null;\n\n    super.ngOnDestroy();\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for panel resize event\n   * @param event Mouse event\n   */\n  private _resizePanels(event: MouseEvent) {\n    if (!this._update) {\n      if (this._containerWidth == null) {\n        const c = $(this.splitPaneContainer.nativeElement);\n        this._containerHeight = c.height();\n        this._containerWidth = c.width();\n      }\n\n      this._update = true;\n      requestAnimationFrame(()=>this._doUpdate(event));\n    }\n  }\n\n  /* istanbul ignore next */\n  /**\n   * Event handler for mouse event. Update pane width/height\n   * @param event Mouse event\n   */\n  private _doUpdate(event: MouseEvent) {\n    if (this._resizeOn === true) {\n      if (this.orientation === \"vertical\") {\n        const diff = this._prevPos - event.pageX;\n        const leftWidth =  ($(this.topPaneElement.nativeElement).width() - diff);\n        this._containerWidth = $(this.splitPaneContainer.nativeElement).width();\n        let left: number = (leftWidth / this._containerWidth) * 100;\n        let maximum: number = (leftWidth / (this._containerWidth - 15)) * 100;\n        if( maximum > 100 ) this.renderer.setStyle(this.topPaneElement.nativeElement, \"width\", \"calc(100% - 13px)\");\n        else this.renderer.setStyle(this.topPaneElement.nativeElement, \"width\", left + \"%\");\n        // this.renderer.setStyle(this.bottomPaneElement.nativeElement, \"width\", (this._containerWidth - (leftWidth + 6)) + \"px\");\n        this.renderer.setStyle(this.bottomPaneElement.nativeElement, \"width\", \"calc(\" + (100 - left) + \"% - 13px)\");\n        this._prevPos = event.pageX;\n      } else {\n        const diff = this._prevPos - event.pageY;\n        const topHeight =  ($(this.topPaneElement.nativeElement).height() - diff);\n        this._containerHeight = $(this.splitPaneContainer.nativeElement).height();\n        let top: number = (topHeight / this._containerHeight) * 100;\n        let maximum: number = (topHeight / (this._containerHeight - 15)) * 100;\n        if( maximum > 100 ) this.renderer.setStyle(this.topPaneElement.nativeElement, \"height\", \"calc(100% - 13px\");\n        else this.renderer.setStyle(this.topPaneElement.nativeElement, \"height\", top + \"%\");\n        // this.renderer.setStyle(this.bottomPaneElement.nativeElement, \"height\", (this._containerHeight - (topHeight + 10)) + \"px\");\n        this.renderer.setStyle(this.bottomPaneElement.nativeElement, \"height\", \"calc(\" + (100 - top) + \"% - 13px)\");\n        this._prevPos = event.pageY;\n      }\n\n      this._update = false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SplitPaneComponent } from './split-pane.component';\nimport { TopPaneComponent } from './top-pane/top-pane.component';\nimport { BottomPaneComponent } from './bottom-pane/bottom-pane.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SplitPaneComponent,\n    TopPaneComponent,\n    BottomPaneComponent\n  ],\n  exports: [\n    SplitPaneComponent,\n    TopPaneComponent,\n    BottomPaneComponent\n  ]\n})\nexport class SplitPaneModule { }\n","import { OnInit } from \"@angular/core\";\nimport { BaseComponent } from \"./base.component\";\n\nexport abstract class CustomAttribute implements OnInit {\n    constructor (private parent: BaseComponent) {\n\n    }\n\n    ngOnInit() {\n        const name = this.getPropertyName();\n        let value = this.getPropertyValue();\n\n        if (this.parent != null && name != null && name !== \"\") {\n            if (value == null) {\n                value = \"\";\n            }\n\n            this.parent.setCustomAttribute(name, value);\n        } else if (this.parent == null) {\n            console.error(\"Unable to set custom property, parent is null\");\n        }\n    }\n\n    /**\n     * Return the name of the custom property\n     */\n    abstract getPropertyName(): string;\n\n    /**\n     * Return the value of the custom property\n     */\n    abstract getPropertyValue(): string;\n}"]}